"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const graphql_1 = require("graphql");
const printer_1 = require("./printer");
let client = {
    query: (x) => x,
};
describe('printer', () => {
    it('should print code', () => {
        const ast = (0, graphql_1.parse)(`
            query {
                user {
                    name
                }
            }
        `);
        const code = (0, printer_1.print)(ast);
    });
    it('printed code is valid', () => {
        const ast = (0, graphql_1.parse)(`
            query {
                user {
                    name
                }
            }
        `);
        const code = (0, printer_1.print)(ast);
        console.log(code);
        eval(code);
    });
    it('printed code is valid, args', () => {
        const ast = (0, graphql_1.parse)(`
            query {
                user(name: "xxx", number: 3, another: {a: 1, b: "2"}) {
                    name
                    field {
                        scalar
                    }
                }
            }
        `);
        const code = (0, printer_1.print)(ast);
        console.log(code);
        eval(code);
    });
    it('printed code is valid, fragments', () => {
        const ast = (0, graphql_1.parse)(`
            query {
                user(name: "xxx", number: 3) {
                    ...userFragment
                    another
                    ...userFragment
                }
            }
            fragment userFragment on User {
                name
                field {
                    scalar
                }
            }
        `);
        const code = (0, printer_1.print)(ast);
        console.log(code);
        eval(code);
    });
    it('printed code is valid, unions', () => {
        const ast = (0, graphql_1.parse)(`
            query {
                user(name: "xxx", number: 3) {
                    ...on User {
                        name
                    }
                    ...on Account {
                        account
                        ...userFragment
                    }
                    anotherOne
                }
            }
            fragment userFragment on User {
                name
                field {
                    scalar
                }
            }
        `);
        const code = (0, printer_1.print)(ast);
        console.log(code);
        eval(code);
    });
});
//# sourceMappingURL=printer.test.js.map