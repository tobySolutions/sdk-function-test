import {
  base32,
  unixfs_exports
} from "./chunk-BOSPY7YV.js";
import {
  empty_exports,
  init_empty
} from "./chunk-UHP4SR3D.js";
import "./chunk-77WUQNS7.js";
import {
  __commonJS,
  __esm,
  __export,
  __toCommonJS,
  __toESM
} from "./chunk-DNE4QC7K.js";

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/webcrypto.js
var webcrypto_default, isCryptoKey;
var init_webcrypto = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/webcrypto.js"() {
    webcrypto_default = crypto;
    isCryptoKey = (key) => key instanceof CryptoKey;
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/digest.js
var digest, digest_default;
var init_digest = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/digest.js"() {
    init_webcrypto();
    digest = async (algorithm, data) => {
      const subtleDigest = `SHA-${algorithm.slice(-3)}`;
      return new Uint8Array(await webcrypto_default.subtle.digest(subtleDigest, data));
    };
    digest_default = digest;
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/buffer_utils.js
function concat(...buffers) {
  const size = buffers.reduce((acc, { length }) => acc + length, 0);
  const buf = new Uint8Array(size);
  let i = 0;
  buffers.forEach((buffer) => {
    buf.set(buffer, i);
    i += buffer.length;
  });
  return buf;
}
function p2s(alg, p2sInput) {
  return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);
}
function writeUInt32BE(buf, value, offset) {
  if (value < 0 || value >= MAX_INT32) {
    throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);
  }
  buf.set([value >>> 24, value >>> 16, value >>> 8, value & 255], offset);
}
function uint64be(value) {
  const high = Math.floor(value / MAX_INT32);
  const low = value % MAX_INT32;
  const buf = new Uint8Array(8);
  writeUInt32BE(buf, high, 0);
  writeUInt32BE(buf, low, 4);
  return buf;
}
function uint32be(value) {
  const buf = new Uint8Array(4);
  writeUInt32BE(buf, value);
  return buf;
}
function lengthAndInput(input) {
  return concat(uint32be(input.length), input);
}
async function concatKdf(secret, bits, value) {
  const iterations = Math.ceil((bits >> 3) / 32);
  const res = new Uint8Array(iterations * 32);
  for (let iter = 0; iter < iterations; iter++) {
    const buf = new Uint8Array(4 + secret.length + value.length);
    buf.set(uint32be(iter + 1));
    buf.set(secret, 4);
    buf.set(value, 4 + secret.length);
    res.set(await digest_default("sha256", buf), iter * 32);
  }
  return res.slice(0, bits >> 3);
}
var encoder, decoder, MAX_INT32;
var init_buffer_utils = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/buffer_utils.js"() {
    init_digest();
    encoder = new TextEncoder();
    decoder = new TextDecoder();
    MAX_INT32 = 2 ** 32;
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/base64url.js
var encodeBase64, encode, decodeBase64, decode;
var init_base64url = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/base64url.js"() {
    init_buffer_utils();
    encodeBase64 = (input) => {
      let unencoded = input;
      if (typeof unencoded === "string") {
        unencoded = encoder.encode(unencoded);
      }
      const CHUNK_SIZE = 32768;
      const arr = [];
      for (let i = 0; i < unencoded.length; i += CHUNK_SIZE) {
        arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));
      }
      return btoa(arr.join(""));
    };
    encode = (input) => {
      return encodeBase64(input).replace(/=/g, "").replace(/\+/g, "-").replace(/\//g, "_");
    };
    decodeBase64 = (encoded) => {
      const binary = atob(encoded);
      const bytes = new Uint8Array(binary.length);
      for (let i = 0; i < binary.length; i++) {
        bytes[i] = binary.charCodeAt(i);
      }
      return bytes;
    };
    decode = (input) => {
      let encoded = input;
      if (encoded instanceof Uint8Array) {
        encoded = decoder.decode(encoded);
      }
      encoded = encoded.replace(/-/g, "+").replace(/_/g, "/").replace(/\s/g, "");
      try {
        return decodeBase64(encoded);
      } catch (_a) {
        throw new TypeError("The input to be decoded is not correctly encoded.");
      }
    };
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/util/errors.js
var errors_exports = {};
__export(errors_exports, {
  JOSEAlgNotAllowed: () => JOSEAlgNotAllowed,
  JOSEError: () => JOSEError,
  JOSENotSupported: () => JOSENotSupported,
  JWEDecryptionFailed: () => JWEDecryptionFailed,
  JWEInvalid: () => JWEInvalid,
  JWKInvalid: () => JWKInvalid,
  JWKSInvalid: () => JWKSInvalid,
  JWKSMultipleMatchingKeys: () => JWKSMultipleMatchingKeys,
  JWKSNoMatchingKey: () => JWKSNoMatchingKey,
  JWKSTimeout: () => JWKSTimeout,
  JWSInvalid: () => JWSInvalid,
  JWSSignatureVerificationFailed: () => JWSSignatureVerificationFailed,
  JWTClaimValidationFailed: () => JWTClaimValidationFailed,
  JWTExpired: () => JWTExpired,
  JWTInvalid: () => JWTInvalid
});
var JOSEError, JWTClaimValidationFailed, JWTExpired, JOSEAlgNotAllowed, JOSENotSupported, JWEDecryptionFailed, JWEInvalid, JWSInvalid, JWTInvalid, JWKInvalid, JWKSInvalid, JWKSNoMatchingKey, JWKSMultipleMatchingKeys, JWKSTimeout, JWSSignatureVerificationFailed;
var init_errors = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/util/errors.js"() {
    JOSEError = class extends Error {
      static get code() {
        return "ERR_JOSE_GENERIC";
      }
      constructor(message2) {
        var _a;
        super(message2);
        this.code = "ERR_JOSE_GENERIC";
        this.name = this.constructor.name;
        (_a = Error.captureStackTrace) === null || _a === void 0 ? void 0 : _a.call(Error, this, this.constructor);
      }
    };
    JWTClaimValidationFailed = class extends JOSEError {
      static get code() {
        return "ERR_JWT_CLAIM_VALIDATION_FAILED";
      }
      constructor(message2, claim = "unspecified", reason = "unspecified") {
        super(message2);
        this.code = "ERR_JWT_CLAIM_VALIDATION_FAILED";
        this.claim = claim;
        this.reason = reason;
      }
    };
    JWTExpired = class extends JOSEError {
      static get code() {
        return "ERR_JWT_EXPIRED";
      }
      constructor(message2, claim = "unspecified", reason = "unspecified") {
        super(message2);
        this.code = "ERR_JWT_EXPIRED";
        this.claim = claim;
        this.reason = reason;
      }
    };
    JOSEAlgNotAllowed = class extends JOSEError {
      constructor() {
        super(...arguments);
        this.code = "ERR_JOSE_ALG_NOT_ALLOWED";
      }
      static get code() {
        return "ERR_JOSE_ALG_NOT_ALLOWED";
      }
    };
    JOSENotSupported = class extends JOSEError {
      constructor() {
        super(...arguments);
        this.code = "ERR_JOSE_NOT_SUPPORTED";
      }
      static get code() {
        return "ERR_JOSE_NOT_SUPPORTED";
      }
    };
    JWEDecryptionFailed = class extends JOSEError {
      constructor() {
        super(...arguments);
        this.code = "ERR_JWE_DECRYPTION_FAILED";
        this.message = "decryption operation failed";
      }
      static get code() {
        return "ERR_JWE_DECRYPTION_FAILED";
      }
    };
    JWEInvalid = class extends JOSEError {
      constructor() {
        super(...arguments);
        this.code = "ERR_JWE_INVALID";
      }
      static get code() {
        return "ERR_JWE_INVALID";
      }
    };
    JWSInvalid = class extends JOSEError {
      constructor() {
        super(...arguments);
        this.code = "ERR_JWS_INVALID";
      }
      static get code() {
        return "ERR_JWS_INVALID";
      }
    };
    JWTInvalid = class extends JOSEError {
      constructor() {
        super(...arguments);
        this.code = "ERR_JWT_INVALID";
      }
      static get code() {
        return "ERR_JWT_INVALID";
      }
    };
    JWKInvalid = class extends JOSEError {
      constructor() {
        super(...arguments);
        this.code = "ERR_JWK_INVALID";
      }
      static get code() {
        return "ERR_JWK_INVALID";
      }
    };
    JWKSInvalid = class extends JOSEError {
      constructor() {
        super(...arguments);
        this.code = "ERR_JWKS_INVALID";
      }
      static get code() {
        return "ERR_JWKS_INVALID";
      }
    };
    JWKSNoMatchingKey = class extends JOSEError {
      constructor() {
        super(...arguments);
        this.code = "ERR_JWKS_NO_MATCHING_KEY";
        this.message = "no applicable key found in the JSON Web Key Set";
      }
      static get code() {
        return "ERR_JWKS_NO_MATCHING_KEY";
      }
    };
    JWKSMultipleMatchingKeys = class extends JOSEError {
      constructor() {
        super(...arguments);
        this.code = "ERR_JWKS_MULTIPLE_MATCHING_KEYS";
        this.message = "multiple matching keys found in the JSON Web Key Set";
      }
      static get code() {
        return "ERR_JWKS_MULTIPLE_MATCHING_KEYS";
      }
    };
    JWKSTimeout = class extends JOSEError {
      constructor() {
        super(...arguments);
        this.code = "ERR_JWKS_TIMEOUT";
        this.message = "request timed out";
      }
      static get code() {
        return "ERR_JWKS_TIMEOUT";
      }
    };
    JWSSignatureVerificationFailed = class extends JOSEError {
      constructor() {
        super(...arguments);
        this.code = "ERR_JWS_SIGNATURE_VERIFICATION_FAILED";
        this.message = "signature verification failed";
      }
      static get code() {
        return "ERR_JWS_SIGNATURE_VERIFICATION_FAILED";
      }
    };
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/random.js
var random_default;
var init_random = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/random.js"() {
    init_webcrypto();
    random_default = webcrypto_default.getRandomValues.bind(webcrypto_default);
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/iv.js
function bitLength(alg) {
  switch (alg) {
    case "A128GCM":
    case "A128GCMKW":
    case "A192GCM":
    case "A192GCMKW":
    case "A256GCM":
    case "A256GCMKW":
      return 96;
    case "A128CBC-HS256":
    case "A192CBC-HS384":
    case "A256CBC-HS512":
      return 128;
    default:
      throw new JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);
  }
}
var iv_default;
var init_iv = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/iv.js"() {
    init_errors();
    init_random();
    iv_default = (alg) => random_default(new Uint8Array(bitLength(alg) >> 3));
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/check_iv_length.js
var checkIvLength, check_iv_length_default;
var init_check_iv_length = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/check_iv_length.js"() {
    init_errors();
    init_iv();
    checkIvLength = (enc, iv) => {
      if (iv.length << 3 !== bitLength(enc)) {
        throw new JWEInvalid("Invalid Initialization Vector length");
      }
    };
    check_iv_length_default = checkIvLength;
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/check_cek_length.js
var checkCekLength, check_cek_length_default;
var init_check_cek_length = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/check_cek_length.js"() {
    init_errors();
    checkCekLength = (cek, expected) => {
      const actual = cek.byteLength << 3;
      if (actual !== expected) {
        throw new JWEInvalid(`Invalid Content Encryption Key length. Expected ${expected} bits, got ${actual} bits`);
      }
    };
    check_cek_length_default = checkCekLength;
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/timing_safe_equal.js
var timingSafeEqual, timing_safe_equal_default;
var init_timing_safe_equal = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/timing_safe_equal.js"() {
    timingSafeEqual = (a, b) => {
      if (!(a instanceof Uint8Array)) {
        throw new TypeError("First argument must be a buffer");
      }
      if (!(b instanceof Uint8Array)) {
        throw new TypeError("Second argument must be a buffer");
      }
      if (a.length !== b.length) {
        throw new TypeError("Input buffers must have the same length");
      }
      const len = a.length;
      let out = 0;
      let i = -1;
      while (++i < len) {
        out |= a[i] ^ b[i];
      }
      return out === 0;
    };
    timing_safe_equal_default = timingSafeEqual;
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/env.js
function isCloudflareWorkers() {
  return typeof WebSocketPair !== "undefined" || typeof navigator !== "undefined" && navigator.userAgent === "Cloudflare-Workers" || typeof EdgeRuntime !== "undefined" && EdgeRuntime === "vercel";
}
var init_env = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/env.js"() {
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/crypto_key.js
function unusable(name, prop = "algorithm.name") {
  return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);
}
function isAlgorithm(algorithm, name) {
  return algorithm.name === name;
}
function getHashLength(hash) {
  return parseInt(hash.name.slice(4), 10);
}
function getNamedCurve(alg) {
  switch (alg) {
    case "ES256":
      return "P-256";
    case "ES384":
      return "P-384";
    case "ES512":
      return "P-521";
    default:
      throw new Error("unreachable");
  }
}
function checkUsage(key, usages) {
  if (usages.length && !usages.some((expected) => key.usages.includes(expected))) {
    let msg = "CryptoKey does not support this operation, its usages must include ";
    if (usages.length > 2) {
      const last = usages.pop();
      msg += `one of ${usages.join(", ")}, or ${last}.`;
    } else if (usages.length === 2) {
      msg += `one of ${usages[0]} or ${usages[1]}.`;
    } else {
      msg += `${usages[0]}.`;
    }
    throw new TypeError(msg);
  }
}
function checkSigCryptoKey(key, alg, ...usages) {
  switch (alg) {
    case "HS256":
    case "HS384":
    case "HS512": {
      if (!isAlgorithm(key.algorithm, "HMAC"))
        throw unusable("HMAC");
      const expected = parseInt(alg.slice(2), 10);
      const actual = getHashLength(key.algorithm.hash);
      if (actual !== expected)
        throw unusable(`SHA-${expected}`, "algorithm.hash");
      break;
    }
    case "RS256":
    case "RS384":
    case "RS512": {
      if (!isAlgorithm(key.algorithm, "RSASSA-PKCS1-v1_5"))
        throw unusable("RSASSA-PKCS1-v1_5");
      const expected = parseInt(alg.slice(2), 10);
      const actual = getHashLength(key.algorithm.hash);
      if (actual !== expected)
        throw unusable(`SHA-${expected}`, "algorithm.hash");
      break;
    }
    case "PS256":
    case "PS384":
    case "PS512": {
      if (!isAlgorithm(key.algorithm, "RSA-PSS"))
        throw unusable("RSA-PSS");
      const expected = parseInt(alg.slice(2), 10);
      const actual = getHashLength(key.algorithm.hash);
      if (actual !== expected)
        throw unusable(`SHA-${expected}`, "algorithm.hash");
      break;
    }
    case (isCloudflareWorkers() && "EdDSA"): {
      if (!isAlgorithm(key.algorithm, "NODE-ED25519"))
        throw unusable("NODE-ED25519");
      break;
    }
    case "EdDSA": {
      if (key.algorithm.name !== "Ed25519" && key.algorithm.name !== "Ed448") {
        throw unusable("Ed25519 or Ed448");
      }
      break;
    }
    case "ES256":
    case "ES384":
    case "ES512": {
      if (!isAlgorithm(key.algorithm, "ECDSA"))
        throw unusable("ECDSA");
      const expected = getNamedCurve(alg);
      const actual = key.algorithm.namedCurve;
      if (actual !== expected)
        throw unusable(expected, "algorithm.namedCurve");
      break;
    }
    default:
      throw new TypeError("CryptoKey does not support this operation");
  }
  checkUsage(key, usages);
}
function checkEncCryptoKey(key, alg, ...usages) {
  switch (alg) {
    case "A128GCM":
    case "A192GCM":
    case "A256GCM": {
      if (!isAlgorithm(key.algorithm, "AES-GCM"))
        throw unusable("AES-GCM");
      const expected = parseInt(alg.slice(1, 4), 10);
      const actual = key.algorithm.length;
      if (actual !== expected)
        throw unusable(expected, "algorithm.length");
      break;
    }
    case "A128KW":
    case "A192KW":
    case "A256KW": {
      if (!isAlgorithm(key.algorithm, "AES-KW"))
        throw unusable("AES-KW");
      const expected = parseInt(alg.slice(1, 4), 10);
      const actual = key.algorithm.length;
      if (actual !== expected)
        throw unusable(expected, "algorithm.length");
      break;
    }
    case "ECDH": {
      switch (key.algorithm.name) {
        case "ECDH":
        case "X25519":
        case "X448":
          break;
        default:
          throw unusable("ECDH, X25519, or X448");
      }
      break;
    }
    case "PBES2-HS256+A128KW":
    case "PBES2-HS384+A192KW":
    case "PBES2-HS512+A256KW":
      if (!isAlgorithm(key.algorithm, "PBKDF2"))
        throw unusable("PBKDF2");
      break;
    case "RSA-OAEP":
    case "RSA-OAEP-256":
    case "RSA-OAEP-384":
    case "RSA-OAEP-512": {
      if (!isAlgorithm(key.algorithm, "RSA-OAEP"))
        throw unusable("RSA-OAEP");
      const expected = parseInt(alg.slice(9), 10) || 1;
      const actual = getHashLength(key.algorithm.hash);
      if (actual !== expected)
        throw unusable(`SHA-${expected}`, "algorithm.hash");
      break;
    }
    default:
      throw new TypeError("CryptoKey does not support this operation");
  }
  checkUsage(key, usages);
}
var init_crypto_key = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/crypto_key.js"() {
    init_env();
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/invalid_key_input.js
function message(msg, actual, ...types2) {
  if (types2.length > 2) {
    const last = types2.pop();
    msg += `one of type ${types2.join(", ")}, or ${last}.`;
  } else if (types2.length === 2) {
    msg += `one of type ${types2[0]} or ${types2[1]}.`;
  } else {
    msg += `of type ${types2[0]}.`;
  }
  if (actual == null) {
    msg += ` Received ${actual}`;
  } else if (typeof actual === "function" && actual.name) {
    msg += ` Received function ${actual.name}`;
  } else if (typeof actual === "object" && actual != null) {
    if (actual.constructor && actual.constructor.name) {
      msg += ` Received an instance of ${actual.constructor.name}`;
    }
  }
  return msg;
}
function withAlg(alg, actual, ...types2) {
  return message(`Key for the ${alg} algorithm must be `, actual, ...types2);
}
var invalid_key_input_default;
var init_invalid_key_input = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/invalid_key_input.js"() {
    invalid_key_input_default = (actual, ...types2) => {
      return message("Key must be ", actual, ...types2);
    };
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/is_key_like.js
var is_key_like_default, types;
var init_is_key_like = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/is_key_like.js"() {
    init_webcrypto();
    is_key_like_default = (key) => {
      return isCryptoKey(key);
    };
    types = ["CryptoKey"];
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/decrypt.js
async function cbcDecrypt(enc, cek, ciphertext, iv, tag, aad) {
  if (!(cek instanceof Uint8Array)) {
    throw new TypeError(invalid_key_input_default(cek, "Uint8Array"));
  }
  const keySize = parseInt(enc.slice(1, 4), 10);
  const encKey = await webcrypto_default.subtle.importKey("raw", cek.subarray(keySize >> 3), "AES-CBC", false, ["decrypt"]);
  const macKey = await webcrypto_default.subtle.importKey("raw", cek.subarray(0, keySize >> 3), {
    hash: `SHA-${keySize << 1}`,
    name: "HMAC"
  }, false, ["sign"]);
  const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));
  const expectedTag = new Uint8Array((await webcrypto_default.subtle.sign("HMAC", macKey, macData)).slice(0, keySize >> 3));
  let macCheckPassed;
  try {
    macCheckPassed = timing_safe_equal_default(tag, expectedTag);
  } catch (_a) {
  }
  if (!macCheckPassed) {
    throw new JWEDecryptionFailed();
  }
  let plaintext;
  try {
    plaintext = new Uint8Array(await webcrypto_default.subtle.decrypt({ iv, name: "AES-CBC" }, encKey, ciphertext));
  } catch (_b) {
  }
  if (!plaintext) {
    throw new JWEDecryptionFailed();
  }
  return plaintext;
}
async function gcmDecrypt(enc, cek, ciphertext, iv, tag, aad) {
  let encKey;
  if (cek instanceof Uint8Array) {
    encKey = await webcrypto_default.subtle.importKey("raw", cek, "AES-GCM", false, ["decrypt"]);
  } else {
    checkEncCryptoKey(cek, enc, "decrypt");
    encKey = cek;
  }
  try {
    return new Uint8Array(await webcrypto_default.subtle.decrypt({
      additionalData: aad,
      iv,
      name: "AES-GCM",
      tagLength: 128
    }, encKey, concat(ciphertext, tag)));
  } catch (_a) {
    throw new JWEDecryptionFailed();
  }
}
var decrypt, decrypt_default;
var init_decrypt = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/decrypt.js"() {
    init_buffer_utils();
    init_check_iv_length();
    init_check_cek_length();
    init_timing_safe_equal();
    init_errors();
    init_webcrypto();
    init_crypto_key();
    init_invalid_key_input();
    init_is_key_like();
    decrypt = async (enc, cek, ciphertext, iv, tag, aad) => {
      if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {
        throw new TypeError(invalid_key_input_default(cek, ...types, "Uint8Array"));
      }
      check_iv_length_default(enc, iv);
      switch (enc) {
        case "A128CBC-HS256":
        case "A192CBC-HS384":
        case "A256CBC-HS512":
          if (cek instanceof Uint8Array)
            check_cek_length_default(cek, parseInt(enc.slice(-3), 10));
          return cbcDecrypt(enc, cek, ciphertext, iv, tag, aad);
        case "A128GCM":
        case "A192GCM":
        case "A256GCM":
          if (cek instanceof Uint8Array)
            check_cek_length_default(cek, parseInt(enc.slice(1, 4), 10));
          return gcmDecrypt(enc, cek, ciphertext, iv, tag, aad);
        default:
          throw new JOSENotSupported("Unsupported JWE Content Encryption Algorithm");
      }
    };
    decrypt_default = decrypt;
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/zlib.js
var inflate, deflate;
var init_zlib = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/zlib.js"() {
    init_errors();
    inflate = async () => {
      throw new JOSENotSupported('JWE "zip" (Compression Algorithm) Header Parameter is not supported by your javascript runtime. You need to use the `inflateRaw` decrypt option to provide Inflate Raw implementation.');
    };
    deflate = async () => {
      throw new JOSENotSupported('JWE "zip" (Compression Algorithm) Header Parameter is not supported by your javascript runtime. You need to use the `deflateRaw` encrypt option to provide Deflate Raw implementation.');
    };
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/is_disjoint.js
var isDisjoint, is_disjoint_default;
var init_is_disjoint = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/is_disjoint.js"() {
    isDisjoint = (...headers) => {
      const sources = headers.filter(Boolean);
      if (sources.length === 0 || sources.length === 1) {
        return true;
      }
      let acc;
      for (const header of sources) {
        const parameters = Object.keys(header);
        if (!acc || acc.size === 0) {
          acc = new Set(parameters);
          continue;
        }
        for (const parameter of parameters) {
          if (acc.has(parameter)) {
            return false;
          }
          acc.add(parameter);
        }
      }
      return true;
    };
    is_disjoint_default = isDisjoint;
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/is_object.js
function isObjectLike(value) {
  return typeof value === "object" && value !== null;
}
function isObject(input) {
  if (!isObjectLike(input) || Object.prototype.toString.call(input) !== "[object Object]") {
    return false;
  }
  if (Object.getPrototypeOf(input) === null) {
    return true;
  }
  let proto = input;
  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }
  return Object.getPrototypeOf(input) === proto;
}
var init_is_object = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/is_object.js"() {
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/bogus.js
var bogusWebCrypto, bogus_default;
var init_bogus = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/bogus.js"() {
    bogusWebCrypto = [
      { hash: "SHA-256", name: "HMAC" },
      true,
      ["sign"]
    ];
    bogus_default = bogusWebCrypto;
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/aeskw.js
function checkKeySize(key, alg) {
  if (key.algorithm.length !== parseInt(alg.slice(1, 4), 10)) {
    throw new TypeError(`Invalid key size for alg: ${alg}`);
  }
}
function getCryptoKey(key, alg, usage) {
  if (isCryptoKey(key)) {
    checkEncCryptoKey(key, alg, usage);
    return key;
  }
  if (key instanceof Uint8Array) {
    return webcrypto_default.subtle.importKey("raw", key, "AES-KW", true, [usage]);
  }
  throw new TypeError(invalid_key_input_default(key, ...types, "Uint8Array"));
}
var wrap, unwrap;
var init_aeskw = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/aeskw.js"() {
    init_bogus();
    init_webcrypto();
    init_crypto_key();
    init_invalid_key_input();
    init_is_key_like();
    wrap = async (alg, key, cek) => {
      const cryptoKey = await getCryptoKey(key, alg, "wrapKey");
      checkKeySize(cryptoKey, alg);
      const cryptoKeyCek = await webcrypto_default.subtle.importKey("raw", cek, ...bogus_default);
      return new Uint8Array(await webcrypto_default.subtle.wrapKey("raw", cryptoKeyCek, cryptoKey, "AES-KW"));
    };
    unwrap = async (alg, key, encryptedKey) => {
      const cryptoKey = await getCryptoKey(key, alg, "unwrapKey");
      checkKeySize(cryptoKey, alg);
      const cryptoKeyCek = await webcrypto_default.subtle.unwrapKey("raw", encryptedKey, cryptoKey, "AES-KW", ...bogus_default);
      return new Uint8Array(await webcrypto_default.subtle.exportKey("raw", cryptoKeyCek));
    };
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/ecdhes.js
async function deriveKey(publicKey, privateKey, algorithm, keyLength, apu = new Uint8Array(0), apv = new Uint8Array(0)) {
  if (!isCryptoKey(publicKey)) {
    throw new TypeError(invalid_key_input_default(publicKey, ...types));
  }
  checkEncCryptoKey(publicKey, "ECDH");
  if (!isCryptoKey(privateKey)) {
    throw new TypeError(invalid_key_input_default(privateKey, ...types));
  }
  checkEncCryptoKey(privateKey, "ECDH", "deriveBits");
  const value = concat(lengthAndInput(encoder.encode(algorithm)), lengthAndInput(apu), lengthAndInput(apv), uint32be(keyLength));
  let length;
  if (publicKey.algorithm.name === "X25519") {
    length = 256;
  } else if (publicKey.algorithm.name === "X448") {
    length = 448;
  } else {
    length = Math.ceil(parseInt(publicKey.algorithm.namedCurve.substr(-3), 10) / 8) << 3;
  }
  const sharedSecret = new Uint8Array(await webcrypto_default.subtle.deriveBits({
    name: publicKey.algorithm.name,
    public: publicKey
  }, privateKey, length));
  return concatKdf(sharedSecret, keyLength, value);
}
async function generateEpk(key) {
  if (!isCryptoKey(key)) {
    throw new TypeError(invalid_key_input_default(key, ...types));
  }
  return webcrypto_default.subtle.generateKey(key.algorithm, true, ["deriveBits"]);
}
function ecdhAllowed(key) {
  if (!isCryptoKey(key)) {
    throw new TypeError(invalid_key_input_default(key, ...types));
  }
  return ["P-256", "P-384", "P-521"].includes(key.algorithm.namedCurve) || key.algorithm.name === "X25519" || key.algorithm.name === "X448";
}
var init_ecdhes = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/ecdhes.js"() {
    init_buffer_utils();
    init_webcrypto();
    init_crypto_key();
    init_invalid_key_input();
    init_is_key_like();
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/check_p2s.js
function checkP2s(p2s2) {
  if (!(p2s2 instanceof Uint8Array) || p2s2.length < 8) {
    throw new JWEInvalid("PBES2 Salt Input must be 8 or more octets");
  }
}
var init_check_p2s = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/check_p2s.js"() {
    init_errors();
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/pbes2kw.js
function getCryptoKey2(key, alg) {
  if (key instanceof Uint8Array) {
    return webcrypto_default.subtle.importKey("raw", key, "PBKDF2", false, ["deriveBits"]);
  }
  if (isCryptoKey(key)) {
    checkEncCryptoKey(key, alg, "deriveBits", "deriveKey");
    return key;
  }
  throw new TypeError(invalid_key_input_default(key, ...types, "Uint8Array"));
}
async function deriveKey2(p2s2, alg, p2c, key) {
  checkP2s(p2s2);
  const salt = p2s(alg, p2s2);
  const keylen = parseInt(alg.slice(13, 16), 10);
  const subtleAlg = {
    hash: `SHA-${alg.slice(8, 11)}`,
    iterations: p2c,
    name: "PBKDF2",
    salt
  };
  const wrapAlg = {
    length: keylen,
    name: "AES-KW"
  };
  const cryptoKey = await getCryptoKey2(key, alg);
  if (cryptoKey.usages.includes("deriveBits")) {
    return new Uint8Array(await webcrypto_default.subtle.deriveBits(subtleAlg, cryptoKey, keylen));
  }
  if (cryptoKey.usages.includes("deriveKey")) {
    return webcrypto_default.subtle.deriveKey(subtleAlg, cryptoKey, wrapAlg, false, ["wrapKey", "unwrapKey"]);
  }
  throw new TypeError('PBKDF2 key "usages" must include "deriveBits" or "deriveKey"');
}
var encrypt, decrypt2;
var init_pbes2kw = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/pbes2kw.js"() {
    init_random();
    init_buffer_utils();
    init_base64url();
    init_aeskw();
    init_check_p2s();
    init_webcrypto();
    init_crypto_key();
    init_invalid_key_input();
    init_is_key_like();
    encrypt = async (alg, key, cek, p2c = 2048, p2s2 = random_default(new Uint8Array(16))) => {
      const derived = await deriveKey2(p2s2, alg, p2c, key);
      const encryptedKey = await wrap(alg.slice(-6), derived, cek);
      return { encryptedKey, p2c, p2s: encode(p2s2) };
    };
    decrypt2 = async (alg, key, encryptedKey, p2c, p2s2) => {
      const derived = await deriveKey2(p2s2, alg, p2c, key);
      return unwrap(alg.slice(-6), derived, encryptedKey);
    };
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/subtle_rsaes.js
function subtleRsaEs(alg) {
  switch (alg) {
    case "RSA-OAEP":
    case "RSA-OAEP-256":
    case "RSA-OAEP-384":
    case "RSA-OAEP-512":
      return "RSA-OAEP";
    default:
      throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);
  }
}
var init_subtle_rsaes = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/subtle_rsaes.js"() {
    init_errors();
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/check_key_length.js
var check_key_length_default;
var init_check_key_length = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/check_key_length.js"() {
    check_key_length_default = (alg, key) => {
      if (alg.startsWith("RS") || alg.startsWith("PS")) {
        const { modulusLength } = key.algorithm;
        if (typeof modulusLength !== "number" || modulusLength < 2048) {
          throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);
        }
      }
    };
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/rsaes.js
var encrypt2, decrypt3;
var init_rsaes = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/rsaes.js"() {
    init_subtle_rsaes();
    init_bogus();
    init_webcrypto();
    init_crypto_key();
    init_check_key_length();
    init_invalid_key_input();
    init_is_key_like();
    encrypt2 = async (alg, key, cek) => {
      if (!isCryptoKey(key)) {
        throw new TypeError(invalid_key_input_default(key, ...types));
      }
      checkEncCryptoKey(key, alg, "encrypt", "wrapKey");
      check_key_length_default(alg, key);
      if (key.usages.includes("encrypt")) {
        return new Uint8Array(await webcrypto_default.subtle.encrypt(subtleRsaEs(alg), key, cek));
      }
      if (key.usages.includes("wrapKey")) {
        const cryptoKeyCek = await webcrypto_default.subtle.importKey("raw", cek, ...bogus_default);
        return new Uint8Array(await webcrypto_default.subtle.wrapKey("raw", cryptoKeyCek, key, subtleRsaEs(alg)));
      }
      throw new TypeError('RSA-OAEP key "usages" must include "encrypt" or "wrapKey" for this operation');
    };
    decrypt3 = async (alg, key, encryptedKey) => {
      if (!isCryptoKey(key)) {
        throw new TypeError(invalid_key_input_default(key, ...types));
      }
      checkEncCryptoKey(key, alg, "decrypt", "unwrapKey");
      check_key_length_default(alg, key);
      if (key.usages.includes("decrypt")) {
        return new Uint8Array(await webcrypto_default.subtle.decrypt(subtleRsaEs(alg), key, encryptedKey));
      }
      if (key.usages.includes("unwrapKey")) {
        const cryptoKeyCek = await webcrypto_default.subtle.unwrapKey("raw", encryptedKey, key, subtleRsaEs(alg), ...bogus_default);
        return new Uint8Array(await webcrypto_default.subtle.exportKey("raw", cryptoKeyCek));
      }
      throw new TypeError('RSA-OAEP key "usages" must include "decrypt" or "unwrapKey" for this operation');
    };
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/cek.js
function bitLength2(alg) {
  switch (alg) {
    case "A128GCM":
      return 128;
    case "A192GCM":
      return 192;
    case "A256GCM":
    case "A128CBC-HS256":
      return 256;
    case "A192CBC-HS384":
      return 384;
    case "A256CBC-HS512":
      return 512;
    default:
      throw new JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);
  }
}
var cek_default;
var init_cek = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/cek.js"() {
    init_errors();
    init_random();
    cek_default = (alg) => random_default(new Uint8Array(bitLength2(alg) >> 3));
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/format_pem.js
var format_pem_default;
var init_format_pem = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/format_pem.js"() {
    format_pem_default = (b64, descriptor) => {
      const newlined = (b64.match(/.{1,64}/g) || []).join("\n");
      return `-----BEGIN ${descriptor}-----
${newlined}
-----END ${descriptor}-----`;
    };
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/asn1.js
var genericExport, toSPKI, toPKCS8, findOid, getNamedCurve2, genericImport, fromPKCS8, fromSPKI;
var init_asn1 = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/asn1.js"() {
    init_env();
    init_webcrypto();
    init_invalid_key_input();
    init_base64url();
    init_format_pem();
    init_errors();
    init_is_key_like();
    genericExport = async (keyType, keyFormat, key) => {
      if (!isCryptoKey(key)) {
        throw new TypeError(invalid_key_input_default(key, ...types));
      }
      if (!key.extractable) {
        throw new TypeError("CryptoKey is not extractable");
      }
      if (key.type !== keyType) {
        throw new TypeError(`key is not a ${keyType} key`);
      }
      return format_pem_default(encodeBase64(new Uint8Array(await webcrypto_default.subtle.exportKey(keyFormat, key))), `${keyType.toUpperCase()} KEY`);
    };
    toSPKI = (key) => {
      return genericExport("public", "spki", key);
    };
    toPKCS8 = (key) => {
      return genericExport("private", "pkcs8", key);
    };
    findOid = (keyData, oid, from = 0) => {
      if (from === 0) {
        oid.unshift(oid.length);
        oid.unshift(6);
      }
      let i = keyData.indexOf(oid[0], from);
      if (i === -1)
        return false;
      const sub = keyData.subarray(i, i + oid.length);
      if (sub.length !== oid.length)
        return false;
      return sub.every((value, index) => value === oid[index]) || findOid(keyData, oid, i + 1);
    };
    getNamedCurve2 = (keyData) => {
      switch (true) {
        case findOid(keyData, [42, 134, 72, 206, 61, 3, 1, 7]):
          return "P-256";
        case findOid(keyData, [43, 129, 4, 0, 34]):
          return "P-384";
        case findOid(keyData, [43, 129, 4, 0, 35]):
          return "P-521";
        case findOid(keyData, [43, 101, 110]):
          return "X25519";
        case findOid(keyData, [43, 101, 111]):
          return "X448";
        case findOid(keyData, [43, 101, 112]):
          return "Ed25519";
        case findOid(keyData, [43, 101, 113]):
          return "Ed448";
        default:
          throw new JOSENotSupported("Invalid or unsupported EC Key Curve or OKP Key Sub Type");
      }
    };
    genericImport = async (replace, keyFormat, pem, alg, options) => {
      var _a;
      let algorithm;
      let keyUsages;
      const keyData = new Uint8Array(atob(pem.replace(replace, "")).split("").map((c) => c.charCodeAt(0)));
      const isPublic = keyFormat === "spki";
      switch (alg) {
        case "PS256":
        case "PS384":
        case "PS512":
          algorithm = { name: "RSA-PSS", hash: `SHA-${alg.slice(-3)}` };
          keyUsages = isPublic ? ["verify"] : ["sign"];
          break;
        case "RS256":
        case "RS384":
        case "RS512":
          algorithm = { name: "RSASSA-PKCS1-v1_5", hash: `SHA-${alg.slice(-3)}` };
          keyUsages = isPublic ? ["verify"] : ["sign"];
          break;
        case "RSA-OAEP":
        case "RSA-OAEP-256":
        case "RSA-OAEP-384":
        case "RSA-OAEP-512":
          algorithm = {
            name: "RSA-OAEP",
            hash: `SHA-${parseInt(alg.slice(-3), 10) || 1}`
          };
          keyUsages = isPublic ? ["encrypt", "wrapKey"] : ["decrypt", "unwrapKey"];
          break;
        case "ES256":
          algorithm = { name: "ECDSA", namedCurve: "P-256" };
          keyUsages = isPublic ? ["verify"] : ["sign"];
          break;
        case "ES384":
          algorithm = { name: "ECDSA", namedCurve: "P-384" };
          keyUsages = isPublic ? ["verify"] : ["sign"];
          break;
        case "ES512":
          algorithm = { name: "ECDSA", namedCurve: "P-521" };
          keyUsages = isPublic ? ["verify"] : ["sign"];
          break;
        case "ECDH-ES":
        case "ECDH-ES+A128KW":
        case "ECDH-ES+A192KW":
        case "ECDH-ES+A256KW": {
          const namedCurve = getNamedCurve2(keyData);
          algorithm = namedCurve.startsWith("P-") ? { name: "ECDH", namedCurve } : { name: namedCurve };
          keyUsages = isPublic ? [] : ["deriveBits"];
          break;
        }
        case (isCloudflareWorkers() && "EdDSA"): {
          const namedCurve = getNamedCurve2(keyData).toUpperCase();
          algorithm = { name: `NODE-${namedCurve}`, namedCurve: `NODE-${namedCurve}` };
          keyUsages = isPublic ? ["verify"] : ["sign"];
          break;
        }
        case "EdDSA":
          algorithm = { name: getNamedCurve2(keyData) };
          keyUsages = isPublic ? ["verify"] : ["sign"];
          break;
        default:
          throw new JOSENotSupported('Invalid or unsupported "alg" (Algorithm) value');
      }
      return webcrypto_default.subtle.importKey(keyFormat, keyData, algorithm, (_a = options === null || options === void 0 ? void 0 : options.extractable) !== null && _a !== void 0 ? _a : false, keyUsages);
    };
    fromPKCS8 = (pem, alg, options) => {
      return genericImport(/(?:-----(?:BEGIN|END) PRIVATE KEY-----|\s)/g, "pkcs8", pem, alg, options);
    };
    fromSPKI = (pem, alg, options) => {
      return genericImport(/(?:-----(?:BEGIN|END) PUBLIC KEY-----|\s)/g, "spki", pem, alg, options);
    };
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/jwk_to_key.js
function subtleMapping(jwk) {
  let algorithm;
  let keyUsages;
  switch (jwk.kty) {
    case "oct": {
      switch (jwk.alg) {
        case "HS256":
        case "HS384":
        case "HS512":
          algorithm = { name: "HMAC", hash: `SHA-${jwk.alg.slice(-3)}` };
          keyUsages = ["sign", "verify"];
          break;
        case "A128CBC-HS256":
        case "A192CBC-HS384":
        case "A256CBC-HS512":
          throw new JOSENotSupported(`${jwk.alg} keys cannot be imported as CryptoKey instances`);
        case "A128GCM":
        case "A192GCM":
        case "A256GCM":
        case "A128GCMKW":
        case "A192GCMKW":
        case "A256GCMKW":
          algorithm = { name: "AES-GCM" };
          keyUsages = ["encrypt", "decrypt"];
          break;
        case "A128KW":
        case "A192KW":
        case "A256KW":
          algorithm = { name: "AES-KW" };
          keyUsages = ["wrapKey", "unwrapKey"];
          break;
        case "PBES2-HS256+A128KW":
        case "PBES2-HS384+A192KW":
        case "PBES2-HS512+A256KW":
          algorithm = { name: "PBKDF2" };
          keyUsages = ["deriveBits"];
          break;
        default:
          throw new JOSENotSupported('Invalid or unsupported JWK "alg" (Algorithm) Parameter value');
      }
      break;
    }
    case "RSA": {
      switch (jwk.alg) {
        case "PS256":
        case "PS384":
        case "PS512":
          algorithm = { name: "RSA-PSS", hash: `SHA-${jwk.alg.slice(-3)}` };
          keyUsages = jwk.d ? ["sign"] : ["verify"];
          break;
        case "RS256":
        case "RS384":
        case "RS512":
          algorithm = { name: "RSASSA-PKCS1-v1_5", hash: `SHA-${jwk.alg.slice(-3)}` };
          keyUsages = jwk.d ? ["sign"] : ["verify"];
          break;
        case "RSA-OAEP":
        case "RSA-OAEP-256":
        case "RSA-OAEP-384":
        case "RSA-OAEP-512":
          algorithm = {
            name: "RSA-OAEP",
            hash: `SHA-${parseInt(jwk.alg.slice(-3), 10) || 1}`
          };
          keyUsages = jwk.d ? ["decrypt", "unwrapKey"] : ["encrypt", "wrapKey"];
          break;
        default:
          throw new JOSENotSupported('Invalid or unsupported JWK "alg" (Algorithm) Parameter value');
      }
      break;
    }
    case "EC": {
      switch (jwk.alg) {
        case "ES256":
          algorithm = { name: "ECDSA", namedCurve: "P-256" };
          keyUsages = jwk.d ? ["sign"] : ["verify"];
          break;
        case "ES384":
          algorithm = { name: "ECDSA", namedCurve: "P-384" };
          keyUsages = jwk.d ? ["sign"] : ["verify"];
          break;
        case "ES512":
          algorithm = { name: "ECDSA", namedCurve: "P-521" };
          keyUsages = jwk.d ? ["sign"] : ["verify"];
          break;
        case "ECDH-ES":
        case "ECDH-ES+A128KW":
        case "ECDH-ES+A192KW":
        case "ECDH-ES+A256KW":
          algorithm = { name: "ECDH", namedCurve: jwk.crv };
          keyUsages = jwk.d ? ["deriveBits"] : [];
          break;
        default:
          throw new JOSENotSupported('Invalid or unsupported JWK "alg" (Algorithm) Parameter value');
      }
      break;
    }
    case (isCloudflareWorkers() && "OKP"):
      if (jwk.alg !== "EdDSA") {
        throw new JOSENotSupported('Invalid or unsupported JWK "alg" (Algorithm) Parameter value');
      }
      switch (jwk.crv) {
        case "Ed25519":
          algorithm = { name: "NODE-ED25519", namedCurve: "NODE-ED25519" };
          keyUsages = jwk.d ? ["sign"] : ["verify"];
          break;
        default:
          throw new JOSENotSupported('Invalid or unsupported JWK "alg" (Algorithm) Parameter value');
      }
      break;
    case "OKP": {
      switch (jwk.alg) {
        case "EdDSA":
          algorithm = { name: jwk.crv };
          keyUsages = jwk.d ? ["sign"] : ["verify"];
          break;
        case "ECDH-ES":
        case "ECDH-ES+A128KW":
        case "ECDH-ES+A192KW":
        case "ECDH-ES+A256KW":
          algorithm = { name: jwk.crv };
          keyUsages = jwk.d ? ["deriveBits"] : [];
          break;
        default:
          throw new JOSENotSupported('Invalid or unsupported JWK "alg" (Algorithm) Parameter value');
      }
      break;
    }
    default:
      throw new JOSENotSupported('Invalid or unsupported JWK "kty" (Key Type) Parameter value');
  }
  return { algorithm, keyUsages };
}
var parse, jwk_to_key_default;
var init_jwk_to_key = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/jwk_to_key.js"() {
    init_env();
    init_webcrypto();
    init_errors();
    init_base64url();
    parse = async (jwk) => {
      var _a, _b;
      const { algorithm, keyUsages } = subtleMapping(jwk);
      const rest = [
        algorithm,
        (_a = jwk.ext) !== null && _a !== void 0 ? _a : false,
        (_b = jwk.key_ops) !== null && _b !== void 0 ? _b : keyUsages
      ];
      if (algorithm.name === "PBKDF2") {
        return webcrypto_default.subtle.importKey("raw", decode(jwk.k), ...rest);
      }
      const keyData = { ...jwk };
      delete keyData.alg;
      delete keyData.use;
      return webcrypto_default.subtle.importKey("jwk", keyData, ...rest);
    };
    jwk_to_key_default = parse;
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/key/import.js
function getElement(seq) {
  let result = [];
  let next = 0;
  while (next < seq.length) {
    let nextPart = parseElement(seq.subarray(next));
    result.push(nextPart);
    next += nextPart.byteLength;
  }
  return result;
}
function parseElement(bytes) {
  let position = 0;
  let tag = bytes[0] & 31;
  position++;
  if (tag === 31) {
    tag = 0;
    while (bytes[position] >= 128) {
      tag = tag * 128 + bytes[position] - 128;
      position++;
    }
    tag = tag * 128 + bytes[position] - 128;
    position++;
  }
  let length = 0;
  if (bytes[position] < 128) {
    length = bytes[position];
    position++;
  } else if (length === 128) {
    length = 0;
    while (bytes[position + length] !== 0 || bytes[position + length + 1] !== 0) {
      if (length > bytes.byteLength) {
        throw new TypeError("invalid indefinite form length");
      }
      length++;
    }
    const byteLength2 = position + length + 2;
    return {
      byteLength: byteLength2,
      contents: bytes.subarray(position, position + length),
      raw: bytes.subarray(0, byteLength2)
    };
  } else {
    let numberOfDigits = bytes[position] & 127;
    position++;
    length = 0;
    for (let i = 0; i < numberOfDigits; i++) {
      length = length * 256 + bytes[position];
      position++;
    }
  }
  const byteLength = position + length;
  return {
    byteLength,
    contents: bytes.subarray(position, byteLength),
    raw: bytes.subarray(0, byteLength)
  };
}
function spkiFromX509(buf) {
  const tbsCertificate = getElement(getElement(parseElement(buf).contents)[0].contents);
  return encodeBase64(tbsCertificate[tbsCertificate[0].raw[0] === 160 ? 6 : 5].raw);
}
function getSPKI(x509) {
  const pem = x509.replace(/(?:-----(?:BEGIN|END) CERTIFICATE-----|\s)/g, "");
  const raw = decodeBase64(pem);
  return format_pem_default(spkiFromX509(raw), "PUBLIC KEY");
}
async function importSPKI(spki, alg, options) {
  if (typeof spki !== "string" || spki.indexOf("-----BEGIN PUBLIC KEY-----") !== 0) {
    throw new TypeError('"spki" must be SPKI formatted string');
  }
  return fromSPKI(spki, alg, options);
}
async function importX509(x509, alg, options) {
  if (typeof x509 !== "string" || x509.indexOf("-----BEGIN CERTIFICATE-----") !== 0) {
    throw new TypeError('"x509" must be X.509 formatted string');
  }
  let spki;
  try {
    spki = getSPKI(x509);
  } catch (cause) {
    throw new TypeError("failed to parse the X.509 certificate", { cause });
  }
  return fromSPKI(spki, alg, options);
}
async function importPKCS8(pkcs8, alg, options) {
  if (typeof pkcs8 !== "string" || pkcs8.indexOf("-----BEGIN PRIVATE KEY-----") !== 0) {
    throw new TypeError('"pkcs8" must be PKCS#8 formatted string');
  }
  return fromPKCS8(pkcs8, alg, options);
}
async function importJWK(jwk, alg, octAsKeyObject) {
  var _a;
  if (!isObject(jwk)) {
    throw new TypeError("JWK must be an object");
  }
  alg || (alg = jwk.alg);
  if (typeof alg !== "string" || !alg) {
    throw new TypeError('"alg" argument is required when "jwk.alg" is not present');
  }
  switch (jwk.kty) {
    case "oct":
      if (typeof jwk.k !== "string" || !jwk.k) {
        throw new TypeError('missing "k" (Key Value) Parameter value');
      }
      octAsKeyObject !== null && octAsKeyObject !== void 0 ? octAsKeyObject : octAsKeyObject = jwk.ext !== true;
      if (octAsKeyObject) {
        return jwk_to_key_default({ ...jwk, alg, ext: (_a = jwk.ext) !== null && _a !== void 0 ? _a : false });
      }
      return decode(jwk.k);
    case "RSA":
      if (jwk.oth !== void 0) {
        throw new JOSENotSupported('RSA JWK "oth" (Other Primes Info) Parameter value is not supported');
      }
    case "EC":
    case "OKP":
      return jwk_to_key_default({ ...jwk, alg });
    default:
      throw new JOSENotSupported('Unsupported "kty" (Key Type) Parameter value');
  }
}
var init_import = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/key/import.js"() {
    init_base64url();
    init_asn1();
    init_asn1();
    init_jwk_to_key();
    init_errors();
    init_format_pem();
    init_is_object();
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/check_key_type.js
var symmetricTypeCheck, asymmetricTypeCheck, checkKeyType, check_key_type_default;
var init_check_key_type = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/check_key_type.js"() {
    init_invalid_key_input();
    init_is_key_like();
    symmetricTypeCheck = (alg, key) => {
      if (key instanceof Uint8Array)
        return;
      if (!is_key_like_default(key)) {
        throw new TypeError(withAlg(alg, key, ...types, "Uint8Array"));
      }
      if (key.type !== "secret") {
        throw new TypeError(`${types.join(" or ")} instances for symmetric algorithms must be of type "secret"`);
      }
    };
    asymmetricTypeCheck = (alg, key, usage) => {
      if (!is_key_like_default(key)) {
        throw new TypeError(withAlg(alg, key, ...types));
      }
      if (key.type === "secret") {
        throw new TypeError(`${types.join(" or ")} instances for asymmetric algorithms must not be of type "secret"`);
      }
      if (usage === "sign" && key.type === "public") {
        throw new TypeError(`${types.join(" or ")} instances for asymmetric algorithm signing must be of type "private"`);
      }
      if (usage === "decrypt" && key.type === "public") {
        throw new TypeError(`${types.join(" or ")} instances for asymmetric algorithm decryption must be of type "private"`);
      }
      if (key.algorithm && usage === "verify" && key.type === "private") {
        throw new TypeError(`${types.join(" or ")} instances for asymmetric algorithm verifying must be of type "public"`);
      }
      if (key.algorithm && usage === "encrypt" && key.type === "private") {
        throw new TypeError(`${types.join(" or ")} instances for asymmetric algorithm encryption must be of type "public"`);
      }
    };
    checkKeyType = (alg, key, usage) => {
      const symmetric = alg.startsWith("HS") || alg === "dir" || alg.startsWith("PBES2") || /^A\d{3}(?:GCM)?KW$/.test(alg);
      if (symmetric) {
        symmetricTypeCheck(alg, key);
      } else {
        asymmetricTypeCheck(alg, key, usage);
      }
    };
    check_key_type_default = checkKeyType;
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/encrypt.js
async function cbcEncrypt(enc, plaintext, cek, iv, aad) {
  if (!(cek instanceof Uint8Array)) {
    throw new TypeError(invalid_key_input_default(cek, "Uint8Array"));
  }
  const keySize = parseInt(enc.slice(1, 4), 10);
  const encKey = await webcrypto_default.subtle.importKey("raw", cek.subarray(keySize >> 3), "AES-CBC", false, ["encrypt"]);
  const macKey = await webcrypto_default.subtle.importKey("raw", cek.subarray(0, keySize >> 3), {
    hash: `SHA-${keySize << 1}`,
    name: "HMAC"
  }, false, ["sign"]);
  const ciphertext = new Uint8Array(await webcrypto_default.subtle.encrypt({
    iv,
    name: "AES-CBC"
  }, encKey, plaintext));
  const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));
  const tag = new Uint8Array((await webcrypto_default.subtle.sign("HMAC", macKey, macData)).slice(0, keySize >> 3));
  return { ciphertext, tag };
}
async function gcmEncrypt(enc, plaintext, cek, iv, aad) {
  let encKey;
  if (cek instanceof Uint8Array) {
    encKey = await webcrypto_default.subtle.importKey("raw", cek, "AES-GCM", false, ["encrypt"]);
  } else {
    checkEncCryptoKey(cek, enc, "encrypt");
    encKey = cek;
  }
  const encrypted = new Uint8Array(await webcrypto_default.subtle.encrypt({
    additionalData: aad,
    iv,
    name: "AES-GCM",
    tagLength: 128
  }, encKey, plaintext));
  const tag = encrypted.slice(-16);
  const ciphertext = encrypted.slice(0, -16);
  return { ciphertext, tag };
}
var encrypt3, encrypt_default;
var init_encrypt = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/encrypt.js"() {
    init_buffer_utils();
    init_check_iv_length();
    init_check_cek_length();
    init_webcrypto();
    init_crypto_key();
    init_invalid_key_input();
    init_errors();
    init_is_key_like();
    encrypt3 = async (enc, plaintext, cek, iv, aad) => {
      if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {
        throw new TypeError(invalid_key_input_default(cek, ...types, "Uint8Array"));
      }
      check_iv_length_default(enc, iv);
      switch (enc) {
        case "A128CBC-HS256":
        case "A192CBC-HS384":
        case "A256CBC-HS512":
          if (cek instanceof Uint8Array)
            check_cek_length_default(cek, parseInt(enc.slice(-3), 10));
          return cbcEncrypt(enc, plaintext, cek, iv, aad);
        case "A128GCM":
        case "A192GCM":
        case "A256GCM":
          if (cek instanceof Uint8Array)
            check_cek_length_default(cek, parseInt(enc.slice(1, 4), 10));
          return gcmEncrypt(enc, plaintext, cek, iv, aad);
        default:
          throw new JOSENotSupported("Unsupported JWE Content Encryption Algorithm");
      }
    };
    encrypt_default = encrypt3;
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/aesgcmkw.js
async function wrap2(alg, key, cek, iv) {
  const jweAlgorithm = alg.slice(0, 7);
  iv || (iv = iv_default(jweAlgorithm));
  const { ciphertext: encryptedKey, tag } = await encrypt_default(jweAlgorithm, cek, key, iv, new Uint8Array(0));
  return { encryptedKey, iv: encode(iv), tag: encode(tag) };
}
async function unwrap2(alg, key, encryptedKey, iv, tag) {
  const jweAlgorithm = alg.slice(0, 7);
  return decrypt_default(jweAlgorithm, key, encryptedKey, iv, tag, new Uint8Array(0));
}
var init_aesgcmkw = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/aesgcmkw.js"() {
    init_encrypt();
    init_decrypt();
    init_iv();
    init_base64url();
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/decrypt_key_management.js
async function decryptKeyManagement(alg, key, encryptedKey, joseHeader, options) {
  check_key_type_default(alg, key, "decrypt");
  switch (alg) {
    case "dir": {
      if (encryptedKey !== void 0)
        throw new JWEInvalid("Encountered unexpected JWE Encrypted Key");
      return key;
    }
    case "ECDH-ES":
      if (encryptedKey !== void 0)
        throw new JWEInvalid("Encountered unexpected JWE Encrypted Key");
    case "ECDH-ES+A128KW":
    case "ECDH-ES+A192KW":
    case "ECDH-ES+A256KW": {
      if (!isObject(joseHeader.epk))
        throw new JWEInvalid(`JOSE Header "epk" (Ephemeral Public Key) missing or invalid`);
      if (!ecdhAllowed(key))
        throw new JOSENotSupported("ECDH with the provided key is not allowed or not supported by your javascript runtime");
      const epk = await importJWK(joseHeader.epk, alg);
      let partyUInfo;
      let partyVInfo;
      if (joseHeader.apu !== void 0) {
        if (typeof joseHeader.apu !== "string")
          throw new JWEInvalid(`JOSE Header "apu" (Agreement PartyUInfo) invalid`);
        partyUInfo = decode(joseHeader.apu);
      }
      if (joseHeader.apv !== void 0) {
        if (typeof joseHeader.apv !== "string")
          throw new JWEInvalid(`JOSE Header "apv" (Agreement PartyVInfo) invalid`);
        partyVInfo = decode(joseHeader.apv);
      }
      const sharedSecret = await deriveKey(epk, key, alg === "ECDH-ES" ? joseHeader.enc : alg, alg === "ECDH-ES" ? bitLength2(joseHeader.enc) : parseInt(alg.slice(-5, -2), 10), partyUInfo, partyVInfo);
      if (alg === "ECDH-ES")
        return sharedSecret;
      if (encryptedKey === void 0)
        throw new JWEInvalid("JWE Encrypted Key missing");
      return unwrap(alg.slice(-6), sharedSecret, encryptedKey);
    }
    case "RSA1_5":
    case "RSA-OAEP":
    case "RSA-OAEP-256":
    case "RSA-OAEP-384":
    case "RSA-OAEP-512": {
      if (encryptedKey === void 0)
        throw new JWEInvalid("JWE Encrypted Key missing");
      return decrypt3(alg, key, encryptedKey);
    }
    case "PBES2-HS256+A128KW":
    case "PBES2-HS384+A192KW":
    case "PBES2-HS512+A256KW": {
      if (encryptedKey === void 0)
        throw new JWEInvalid("JWE Encrypted Key missing");
      if (typeof joseHeader.p2c !== "number")
        throw new JWEInvalid(`JOSE Header "p2c" (PBES2 Count) missing or invalid`);
      const p2cLimit = (options === null || options === void 0 ? void 0 : options.maxPBES2Count) || 1e4;
      if (joseHeader.p2c > p2cLimit)
        throw new JWEInvalid(`JOSE Header "p2c" (PBES2 Count) out is of acceptable bounds`);
      if (typeof joseHeader.p2s !== "string")
        throw new JWEInvalid(`JOSE Header "p2s" (PBES2 Salt) missing or invalid`);
      return decrypt2(alg, key, encryptedKey, joseHeader.p2c, decode(joseHeader.p2s));
    }
    case "A128KW":
    case "A192KW":
    case "A256KW": {
      if (encryptedKey === void 0)
        throw new JWEInvalid("JWE Encrypted Key missing");
      return unwrap(alg, key, encryptedKey);
    }
    case "A128GCMKW":
    case "A192GCMKW":
    case "A256GCMKW": {
      if (encryptedKey === void 0)
        throw new JWEInvalid("JWE Encrypted Key missing");
      if (typeof joseHeader.iv !== "string")
        throw new JWEInvalid(`JOSE Header "iv" (Initialization Vector) missing or invalid`);
      if (typeof joseHeader.tag !== "string")
        throw new JWEInvalid(`JOSE Header "tag" (Authentication Tag) missing or invalid`);
      const iv = decode(joseHeader.iv);
      const tag = decode(joseHeader.tag);
      return unwrap2(alg, key, encryptedKey, iv, tag);
    }
    default: {
      throw new JOSENotSupported('Invalid or unsupported "alg" (JWE Algorithm) header value');
    }
  }
}
var decrypt_key_management_default;
var init_decrypt_key_management = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/decrypt_key_management.js"() {
    init_aeskw();
    init_ecdhes();
    init_pbes2kw();
    init_rsaes();
    init_base64url();
    init_errors();
    init_cek();
    init_import();
    init_check_key_type();
    init_is_object();
    init_aesgcmkw();
    decrypt_key_management_default = decryptKeyManagement;
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/validate_crit.js
function validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {
  if (joseHeader.crit !== void 0 && protectedHeader.crit === void 0) {
    throw new Err('"crit" (Critical) Header Parameter MUST be integrity protected');
  }
  if (!protectedHeader || protectedHeader.crit === void 0) {
    return /* @__PURE__ */ new Set();
  }
  if (!Array.isArray(protectedHeader.crit) || protectedHeader.crit.length === 0 || protectedHeader.crit.some((input) => typeof input !== "string" || input.length === 0)) {
    throw new Err('"crit" (Critical) Header Parameter MUST be an array of non-empty strings when present');
  }
  let recognized;
  if (recognizedOption !== void 0) {
    recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);
  } else {
    recognized = recognizedDefault;
  }
  for (const parameter of protectedHeader.crit) {
    if (!recognized.has(parameter)) {
      throw new JOSENotSupported(`Extension Header Parameter "${parameter}" is not recognized`);
    }
    if (joseHeader[parameter] === void 0) {
      throw new Err(`Extension Header Parameter "${parameter}" is missing`);
    } else if (recognized.get(parameter) && protectedHeader[parameter] === void 0) {
      throw new Err(`Extension Header Parameter "${parameter}" MUST be integrity protected`);
    }
  }
  return new Set(protectedHeader.crit);
}
var validate_crit_default;
var init_validate_crit = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/validate_crit.js"() {
    init_errors();
    validate_crit_default = validateCrit;
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/validate_algorithms.js
var validateAlgorithms, validate_algorithms_default;
var init_validate_algorithms = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/validate_algorithms.js"() {
    validateAlgorithms = (option, algorithms) => {
      if (algorithms !== void 0 && (!Array.isArray(algorithms) || algorithms.some((s) => typeof s !== "string"))) {
        throw new TypeError(`"${option}" option must be an array of strings`);
      }
      if (!algorithms) {
        return void 0;
      }
      return new Set(algorithms);
    };
    validate_algorithms_default = validateAlgorithms;
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwe/flattened/decrypt.js
async function flattenedDecrypt(jwe, key, options) {
  var _a;
  if (!isObject(jwe)) {
    throw new JWEInvalid("Flattened JWE must be an object");
  }
  if (jwe.protected === void 0 && jwe.header === void 0 && jwe.unprotected === void 0) {
    throw new JWEInvalid("JOSE Header missing");
  }
  if (typeof jwe.iv !== "string") {
    throw new JWEInvalid("JWE Initialization Vector missing or incorrect type");
  }
  if (typeof jwe.ciphertext !== "string") {
    throw new JWEInvalid("JWE Ciphertext missing or incorrect type");
  }
  if (typeof jwe.tag !== "string") {
    throw new JWEInvalid("JWE Authentication Tag missing or incorrect type");
  }
  if (jwe.protected !== void 0 && typeof jwe.protected !== "string") {
    throw new JWEInvalid("JWE Protected Header incorrect type");
  }
  if (jwe.encrypted_key !== void 0 && typeof jwe.encrypted_key !== "string") {
    throw new JWEInvalid("JWE Encrypted Key incorrect type");
  }
  if (jwe.aad !== void 0 && typeof jwe.aad !== "string") {
    throw new JWEInvalid("JWE AAD incorrect type");
  }
  if (jwe.header !== void 0 && !isObject(jwe.header)) {
    throw new JWEInvalid("JWE Shared Unprotected Header incorrect type");
  }
  if (jwe.unprotected !== void 0 && !isObject(jwe.unprotected)) {
    throw new JWEInvalid("JWE Per-Recipient Unprotected Header incorrect type");
  }
  let parsedProt;
  if (jwe.protected) {
    try {
      const protectedHeader2 = decode(jwe.protected);
      parsedProt = JSON.parse(decoder.decode(protectedHeader2));
    } catch (_b) {
      throw new JWEInvalid("JWE Protected Header is invalid");
    }
  }
  if (!is_disjoint_default(parsedProt, jwe.header, jwe.unprotected)) {
    throw new JWEInvalid("JWE Protected, JWE Unprotected Header, and JWE Per-Recipient Unprotected Header Parameter names must be disjoint");
  }
  const joseHeader = {
    ...parsedProt,
    ...jwe.header,
    ...jwe.unprotected
  };
  validate_crit_default(JWEInvalid, /* @__PURE__ */ new Map(), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);
  if (joseHeader.zip !== void 0) {
    if (!parsedProt || !parsedProt.zip) {
      throw new JWEInvalid('JWE "zip" (Compression Algorithm) Header MUST be integrity protected');
    }
    if (joseHeader.zip !== "DEF") {
      throw new JOSENotSupported('Unsupported JWE "zip" (Compression Algorithm) Header Parameter value');
    }
  }
  const { alg, enc } = joseHeader;
  if (typeof alg !== "string" || !alg) {
    throw new JWEInvalid("missing JWE Algorithm (alg) in JWE Header");
  }
  if (typeof enc !== "string" || !enc) {
    throw new JWEInvalid("missing JWE Encryption Algorithm (enc) in JWE Header");
  }
  const keyManagementAlgorithms = options && validate_algorithms_default("keyManagementAlgorithms", options.keyManagementAlgorithms);
  const contentEncryptionAlgorithms = options && validate_algorithms_default("contentEncryptionAlgorithms", options.contentEncryptionAlgorithms);
  if (keyManagementAlgorithms && !keyManagementAlgorithms.has(alg)) {
    throw new JOSEAlgNotAllowed('"alg" (Algorithm) Header Parameter not allowed');
  }
  if (contentEncryptionAlgorithms && !contentEncryptionAlgorithms.has(enc)) {
    throw new JOSEAlgNotAllowed('"enc" (Encryption Algorithm) Header Parameter not allowed');
  }
  let encryptedKey;
  if (jwe.encrypted_key !== void 0) {
    encryptedKey = decode(jwe.encrypted_key);
  }
  let resolvedKey = false;
  if (typeof key === "function") {
    key = await key(parsedProt, jwe);
    resolvedKey = true;
  }
  let cek;
  try {
    cek = await decrypt_key_management_default(alg, key, encryptedKey, joseHeader, options);
  } catch (err) {
    if (err instanceof TypeError || err instanceof JWEInvalid || err instanceof JOSENotSupported) {
      throw err;
    }
    cek = cek_default(enc);
  }
  const iv = decode(jwe.iv);
  const tag = decode(jwe.tag);
  const protectedHeader = encoder.encode((_a = jwe.protected) !== null && _a !== void 0 ? _a : "");
  let additionalData;
  if (jwe.aad !== void 0) {
    additionalData = concat(protectedHeader, encoder.encode("."), encoder.encode(jwe.aad));
  } else {
    additionalData = protectedHeader;
  }
  let plaintext = await decrypt_default(enc, cek, decode(jwe.ciphertext), iv, tag, additionalData);
  if (joseHeader.zip === "DEF") {
    plaintext = await ((options === null || options === void 0 ? void 0 : options.inflateRaw) || inflate)(plaintext);
  }
  const result = { plaintext };
  if (jwe.protected !== void 0) {
    result.protectedHeader = parsedProt;
  }
  if (jwe.aad !== void 0) {
    result.additionalAuthenticatedData = decode(jwe.aad);
  }
  if (jwe.unprotected !== void 0) {
    result.sharedUnprotectedHeader = jwe.unprotected;
  }
  if (jwe.header !== void 0) {
    result.unprotectedHeader = jwe.header;
  }
  if (resolvedKey) {
    return { ...result, key };
  }
  return result;
}
var init_decrypt2 = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwe/flattened/decrypt.js"() {
    init_base64url();
    init_decrypt();
    init_zlib();
    init_errors();
    init_is_disjoint();
    init_is_object();
    init_decrypt_key_management();
    init_buffer_utils();
    init_cek();
    init_validate_crit();
    init_validate_algorithms();
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwe/compact/decrypt.js
async function compactDecrypt(jwe, key, options) {
  if (jwe instanceof Uint8Array) {
    jwe = decoder.decode(jwe);
  }
  if (typeof jwe !== "string") {
    throw new JWEInvalid("Compact JWE must be a string or Uint8Array");
  }
  const { 0: protectedHeader, 1: encryptedKey, 2: iv, 3: ciphertext, 4: tag, length } = jwe.split(".");
  if (length !== 5) {
    throw new JWEInvalid("Invalid Compact JWE");
  }
  const decrypted = await flattenedDecrypt({
    ciphertext,
    iv: iv || void 0,
    protected: protectedHeader || void 0,
    tag: tag || void 0,
    encrypted_key: encryptedKey || void 0
  }, key, options);
  const result = { plaintext: decrypted.plaintext, protectedHeader: decrypted.protectedHeader };
  if (typeof key === "function") {
    return { ...result, key: decrypted.key };
  }
  return result;
}
var init_decrypt3 = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwe/compact/decrypt.js"() {
    init_decrypt2();
    init_errors();
    init_buffer_utils();
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwe/general/decrypt.js
async function generalDecrypt(jwe, key, options) {
  if (!isObject(jwe)) {
    throw new JWEInvalid("General JWE must be an object");
  }
  if (!Array.isArray(jwe.recipients) || !jwe.recipients.every(isObject)) {
    throw new JWEInvalid("JWE Recipients missing or incorrect type");
  }
  if (!jwe.recipients.length) {
    throw new JWEInvalid("JWE Recipients has no members");
  }
  for (const recipient of jwe.recipients) {
    try {
      return await flattenedDecrypt({
        aad: jwe.aad,
        ciphertext: jwe.ciphertext,
        encrypted_key: recipient.encrypted_key,
        header: recipient.header,
        iv: jwe.iv,
        protected: jwe.protected,
        tag: jwe.tag,
        unprotected: jwe.unprotected
      }, key, options);
    } catch (_a) {
    }
  }
  throw new JWEDecryptionFailed();
}
var init_decrypt4 = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwe/general/decrypt.js"() {
    init_decrypt2();
    init_errors();
    init_is_object();
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/key_to_jwk.js
var keyToJWK, key_to_jwk_default;
var init_key_to_jwk = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/key_to_jwk.js"() {
    init_webcrypto();
    init_invalid_key_input();
    init_base64url();
    init_is_key_like();
    keyToJWK = async (key) => {
      if (key instanceof Uint8Array) {
        return {
          kty: "oct",
          k: encode(key)
        };
      }
      if (!isCryptoKey(key)) {
        throw new TypeError(invalid_key_input_default(key, ...types, "Uint8Array"));
      }
      if (!key.extractable) {
        throw new TypeError("non-extractable CryptoKey cannot be exported as a JWK");
      }
      const { ext, key_ops, alg, use, ...jwk } = await webcrypto_default.subtle.exportKey("jwk", key);
      return jwk;
    };
    key_to_jwk_default = keyToJWK;
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/key/export.js
async function exportSPKI(key) {
  return toSPKI(key);
}
async function exportPKCS8(key) {
  return toPKCS8(key);
}
async function exportJWK(key) {
  return key_to_jwk_default(key);
}
var init_export = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/key/export.js"() {
    init_asn1();
    init_asn1();
    init_key_to_jwk();
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/encrypt_key_management.js
async function encryptKeyManagement(alg, enc, key, providedCek, providedParameters = {}) {
  let encryptedKey;
  let parameters;
  let cek;
  check_key_type_default(alg, key, "encrypt");
  switch (alg) {
    case "dir": {
      cek = key;
      break;
    }
    case "ECDH-ES":
    case "ECDH-ES+A128KW":
    case "ECDH-ES+A192KW":
    case "ECDH-ES+A256KW": {
      if (!ecdhAllowed(key)) {
        throw new JOSENotSupported("ECDH with the provided key is not allowed or not supported by your javascript runtime");
      }
      const { apu, apv } = providedParameters;
      let { epk: ephemeralKey } = providedParameters;
      ephemeralKey || (ephemeralKey = (await generateEpk(key)).privateKey);
      const { x, y, crv, kty } = await exportJWK(ephemeralKey);
      const sharedSecret = await deriveKey(key, ephemeralKey, alg === "ECDH-ES" ? enc : alg, alg === "ECDH-ES" ? bitLength2(enc) : parseInt(alg.slice(-5, -2), 10), apu, apv);
      parameters = { epk: { x, crv, kty } };
      if (kty === "EC")
        parameters.epk.y = y;
      if (apu)
        parameters.apu = encode(apu);
      if (apv)
        parameters.apv = encode(apv);
      if (alg === "ECDH-ES") {
        cek = sharedSecret;
        break;
      }
      cek = providedCek || cek_default(enc);
      const kwAlg = alg.slice(-6);
      encryptedKey = await wrap(kwAlg, sharedSecret, cek);
      break;
    }
    case "RSA1_5":
    case "RSA-OAEP":
    case "RSA-OAEP-256":
    case "RSA-OAEP-384":
    case "RSA-OAEP-512": {
      cek = providedCek || cek_default(enc);
      encryptedKey = await encrypt2(alg, key, cek);
      break;
    }
    case "PBES2-HS256+A128KW":
    case "PBES2-HS384+A192KW":
    case "PBES2-HS512+A256KW": {
      cek = providedCek || cek_default(enc);
      const { p2c, p2s: p2s2 } = providedParameters;
      ({ encryptedKey, ...parameters } = await encrypt(alg, key, cek, p2c, p2s2));
      break;
    }
    case "A128KW":
    case "A192KW":
    case "A256KW": {
      cek = providedCek || cek_default(enc);
      encryptedKey = await wrap(alg, key, cek);
      break;
    }
    case "A128GCMKW":
    case "A192GCMKW":
    case "A256GCMKW": {
      cek = providedCek || cek_default(enc);
      const { iv } = providedParameters;
      ({ encryptedKey, ...parameters } = await wrap2(alg, key, cek, iv));
      break;
    }
    default: {
      throw new JOSENotSupported('Invalid or unsupported "alg" (JWE Algorithm) header value');
    }
  }
  return { cek, encryptedKey, parameters };
}
var encrypt_key_management_default;
var init_encrypt_key_management = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/encrypt_key_management.js"() {
    init_aeskw();
    init_ecdhes();
    init_pbes2kw();
    init_rsaes();
    init_base64url();
    init_cek();
    init_errors();
    init_export();
    init_check_key_type();
    init_aesgcmkw();
    encrypt_key_management_default = encryptKeyManagement;
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwe/flattened/encrypt.js
var unprotected, FlattenedEncrypt;
var init_encrypt2 = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwe/flattened/encrypt.js"() {
    init_base64url();
    init_encrypt();
    init_zlib();
    init_iv();
    init_encrypt_key_management();
    init_errors();
    init_is_disjoint();
    init_buffer_utils();
    init_validate_crit();
    unprotected = Symbol();
    FlattenedEncrypt = class {
      constructor(plaintext) {
        if (!(plaintext instanceof Uint8Array)) {
          throw new TypeError("plaintext must be an instance of Uint8Array");
        }
        this._plaintext = plaintext;
      }
      setKeyManagementParameters(parameters) {
        if (this._keyManagementParameters) {
          throw new TypeError("setKeyManagementParameters can only be called once");
        }
        this._keyManagementParameters = parameters;
        return this;
      }
      setProtectedHeader(protectedHeader) {
        if (this._protectedHeader) {
          throw new TypeError("setProtectedHeader can only be called once");
        }
        this._protectedHeader = protectedHeader;
        return this;
      }
      setSharedUnprotectedHeader(sharedUnprotectedHeader) {
        if (this._sharedUnprotectedHeader) {
          throw new TypeError("setSharedUnprotectedHeader can only be called once");
        }
        this._sharedUnprotectedHeader = sharedUnprotectedHeader;
        return this;
      }
      setUnprotectedHeader(unprotectedHeader) {
        if (this._unprotectedHeader) {
          throw new TypeError("setUnprotectedHeader can only be called once");
        }
        this._unprotectedHeader = unprotectedHeader;
        return this;
      }
      setAdditionalAuthenticatedData(aad) {
        this._aad = aad;
        return this;
      }
      setContentEncryptionKey(cek) {
        if (this._cek) {
          throw new TypeError("setContentEncryptionKey can only be called once");
        }
        this._cek = cek;
        return this;
      }
      setInitializationVector(iv) {
        if (this._iv) {
          throw new TypeError("setInitializationVector can only be called once");
        }
        this._iv = iv;
        return this;
      }
      async encrypt(key, options) {
        if (!this._protectedHeader && !this._unprotectedHeader && !this._sharedUnprotectedHeader) {
          throw new JWEInvalid("either setProtectedHeader, setUnprotectedHeader, or sharedUnprotectedHeader must be called before #encrypt()");
        }
        if (!is_disjoint_default(this._protectedHeader, this._unprotectedHeader, this._sharedUnprotectedHeader)) {
          throw new JWEInvalid("JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint");
        }
        const joseHeader = {
          ...this._protectedHeader,
          ...this._unprotectedHeader,
          ...this._sharedUnprotectedHeader
        };
        validate_crit_default(JWEInvalid, /* @__PURE__ */ new Map(), options === null || options === void 0 ? void 0 : options.crit, this._protectedHeader, joseHeader);
        if (joseHeader.zip !== void 0) {
          if (!this._protectedHeader || !this._protectedHeader.zip) {
            throw new JWEInvalid('JWE "zip" (Compression Algorithm) Header MUST be integrity protected');
          }
          if (joseHeader.zip !== "DEF") {
            throw new JOSENotSupported('Unsupported JWE "zip" (Compression Algorithm) Header Parameter value');
          }
        }
        const { alg, enc } = joseHeader;
        if (typeof alg !== "string" || !alg) {
          throw new JWEInvalid('JWE "alg" (Algorithm) Header Parameter missing or invalid');
        }
        if (typeof enc !== "string" || !enc) {
          throw new JWEInvalid('JWE "enc" (Encryption Algorithm) Header Parameter missing or invalid');
        }
        let encryptedKey;
        if (alg === "dir") {
          if (this._cek) {
            throw new TypeError("setContentEncryptionKey cannot be called when using Direct Encryption");
          }
        } else if (alg === "ECDH-ES") {
          if (this._cek) {
            throw new TypeError("setContentEncryptionKey cannot be called when using Direct Key Agreement");
          }
        }
        let cek;
        {
          let parameters;
          ({ cek, encryptedKey, parameters } = await encrypt_key_management_default(alg, enc, key, this._cek, this._keyManagementParameters));
          if (parameters) {
            if (options && unprotected in options) {
              if (!this._unprotectedHeader) {
                this.setUnprotectedHeader(parameters);
              } else {
                this._unprotectedHeader = { ...this._unprotectedHeader, ...parameters };
              }
            } else {
              if (!this._protectedHeader) {
                this.setProtectedHeader(parameters);
              } else {
                this._protectedHeader = { ...this._protectedHeader, ...parameters };
              }
            }
          }
        }
        this._iv || (this._iv = iv_default(enc));
        let additionalData;
        let protectedHeader;
        let aadMember;
        if (this._protectedHeader) {
          protectedHeader = encoder.encode(encode(JSON.stringify(this._protectedHeader)));
        } else {
          protectedHeader = encoder.encode("");
        }
        if (this._aad) {
          aadMember = encode(this._aad);
          additionalData = concat(protectedHeader, encoder.encode("."), encoder.encode(aadMember));
        } else {
          additionalData = protectedHeader;
        }
        let ciphertext;
        let tag;
        if (joseHeader.zip === "DEF") {
          const deflated = await ((options === null || options === void 0 ? void 0 : options.deflateRaw) || deflate)(this._plaintext);
          ({ ciphertext, tag } = await encrypt_default(enc, deflated, cek, this._iv, additionalData));
        } else {
          ;
          ({ ciphertext, tag } = await encrypt_default(enc, this._plaintext, cek, this._iv, additionalData));
        }
        const jwe = {
          ciphertext: encode(ciphertext),
          iv: encode(this._iv),
          tag: encode(tag)
        };
        if (encryptedKey) {
          jwe.encrypted_key = encode(encryptedKey);
        }
        if (aadMember) {
          jwe.aad = aadMember;
        }
        if (this._protectedHeader) {
          jwe.protected = decoder.decode(protectedHeader);
        }
        if (this._sharedUnprotectedHeader) {
          jwe.unprotected = this._sharedUnprotectedHeader;
        }
        if (this._unprotectedHeader) {
          jwe.header = this._unprotectedHeader;
        }
        return jwe;
      }
    };
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwe/general/encrypt.js
var IndividualRecipient, GeneralEncrypt;
var init_encrypt3 = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwe/general/encrypt.js"() {
    init_encrypt2();
    init_errors();
    init_cek();
    init_is_disjoint();
    init_encrypt_key_management();
    init_base64url();
    init_validate_crit();
    IndividualRecipient = class {
      constructor(enc, key, options) {
        this.parent = enc;
        this.key = key;
        this.options = options;
      }
      setUnprotectedHeader(unprotectedHeader) {
        if (this.unprotectedHeader) {
          throw new TypeError("setUnprotectedHeader can only be called once");
        }
        this.unprotectedHeader = unprotectedHeader;
        return this;
      }
      addRecipient(...args) {
        return this.parent.addRecipient(...args);
      }
      encrypt(...args) {
        return this.parent.encrypt(...args);
      }
      done() {
        return this.parent;
      }
    };
    GeneralEncrypt = class {
      constructor(plaintext) {
        this._recipients = [];
        this._plaintext = plaintext;
      }
      addRecipient(key, options) {
        const recipient = new IndividualRecipient(this, key, { crit: options === null || options === void 0 ? void 0 : options.crit });
        this._recipients.push(recipient);
        return recipient;
      }
      setProtectedHeader(protectedHeader) {
        if (this._protectedHeader) {
          throw new TypeError("setProtectedHeader can only be called once");
        }
        this._protectedHeader = protectedHeader;
        return this;
      }
      setSharedUnprotectedHeader(sharedUnprotectedHeader) {
        if (this._unprotectedHeader) {
          throw new TypeError("setSharedUnprotectedHeader can only be called once");
        }
        this._unprotectedHeader = sharedUnprotectedHeader;
        return this;
      }
      setAdditionalAuthenticatedData(aad) {
        this._aad = aad;
        return this;
      }
      async encrypt(options) {
        var _a, _b, _c;
        if (!this._recipients.length) {
          throw new JWEInvalid("at least one recipient must be added");
        }
        options = { deflateRaw: options === null || options === void 0 ? void 0 : options.deflateRaw };
        if (this._recipients.length === 1) {
          const [recipient] = this._recipients;
          const flattened = await new FlattenedEncrypt(this._plaintext).setAdditionalAuthenticatedData(this._aad).setProtectedHeader(this._protectedHeader).setSharedUnprotectedHeader(this._unprotectedHeader).setUnprotectedHeader(recipient.unprotectedHeader).encrypt(recipient.key, { ...recipient.options, ...options });
          let jwe2 = {
            ciphertext: flattened.ciphertext,
            iv: flattened.iv,
            recipients: [{}],
            tag: flattened.tag
          };
          if (flattened.aad)
            jwe2.aad = flattened.aad;
          if (flattened.protected)
            jwe2.protected = flattened.protected;
          if (flattened.unprotected)
            jwe2.unprotected = flattened.unprotected;
          if (flattened.encrypted_key)
            jwe2.recipients[0].encrypted_key = flattened.encrypted_key;
          if (flattened.header)
            jwe2.recipients[0].header = flattened.header;
          return jwe2;
        }
        let enc;
        for (let i = 0; i < this._recipients.length; i++) {
          const recipient = this._recipients[i];
          if (!is_disjoint_default(this._protectedHeader, this._unprotectedHeader, recipient.unprotectedHeader)) {
            throw new JWEInvalid("JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint");
          }
          const joseHeader = {
            ...this._protectedHeader,
            ...this._unprotectedHeader,
            ...recipient.unprotectedHeader
          };
          const { alg } = joseHeader;
          if (typeof alg !== "string" || !alg) {
            throw new JWEInvalid('JWE "alg" (Algorithm) Header Parameter missing or invalid');
          }
          if (alg === "dir" || alg === "ECDH-ES") {
            throw new JWEInvalid('"dir" and "ECDH-ES" alg may only be used with a single recipient');
          }
          if (typeof joseHeader.enc !== "string" || !joseHeader.enc) {
            throw new JWEInvalid('JWE "enc" (Encryption Algorithm) Header Parameter missing or invalid');
          }
          if (!enc) {
            enc = joseHeader.enc;
          } else if (enc !== joseHeader.enc) {
            throw new JWEInvalid('JWE "enc" (Encryption Algorithm) Header Parameter must be the same for all recipients');
          }
          validate_crit_default(JWEInvalid, /* @__PURE__ */ new Map(), recipient.options.crit, this._protectedHeader, joseHeader);
          if (joseHeader.zip !== void 0) {
            if (!this._protectedHeader || !this._protectedHeader.zip) {
              throw new JWEInvalid('JWE "zip" (Compression Algorithm) Header MUST be integrity protected');
            }
          }
        }
        const cek = cek_default(enc);
        let jwe = {
          ciphertext: "",
          iv: "",
          recipients: [],
          tag: ""
        };
        for (let i = 0; i < this._recipients.length; i++) {
          const recipient = this._recipients[i];
          const target = {};
          jwe.recipients.push(target);
          const joseHeader = {
            ...this._protectedHeader,
            ...this._unprotectedHeader,
            ...recipient.unprotectedHeader
          };
          const p2c = joseHeader.alg.startsWith("PBES2") ? 2048 + i : void 0;
          if (i === 0) {
            const flattened = await new FlattenedEncrypt(this._plaintext).setAdditionalAuthenticatedData(this._aad).setContentEncryptionKey(cek).setProtectedHeader(this._protectedHeader).setSharedUnprotectedHeader(this._unprotectedHeader).setUnprotectedHeader(recipient.unprotectedHeader).setKeyManagementParameters({ p2c }).encrypt(recipient.key, {
              ...recipient.options,
              ...options,
              [unprotected]: true
            });
            jwe.ciphertext = flattened.ciphertext;
            jwe.iv = flattened.iv;
            jwe.tag = flattened.tag;
            if (flattened.aad)
              jwe.aad = flattened.aad;
            if (flattened.protected)
              jwe.protected = flattened.protected;
            if (flattened.unprotected)
              jwe.unprotected = flattened.unprotected;
            target.encrypted_key = flattened.encrypted_key;
            if (flattened.header)
              target.header = flattened.header;
            continue;
          }
          const { encryptedKey, parameters } = await encrypt_key_management_default(((_a = recipient.unprotectedHeader) === null || _a === void 0 ? void 0 : _a.alg) || ((_b = this._protectedHeader) === null || _b === void 0 ? void 0 : _b.alg) || ((_c = this._unprotectedHeader) === null || _c === void 0 ? void 0 : _c.alg), enc, recipient.key, cek, { p2c });
          target.encrypted_key = encode(encryptedKey);
          if (recipient.unprotectedHeader || parameters)
            target.header = { ...recipient.unprotectedHeader, ...parameters };
        }
        return jwe;
      }
    };
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/subtle_dsa.js
function subtleDsa(alg, algorithm) {
  const hash = `SHA-${alg.slice(-3)}`;
  switch (alg) {
    case "HS256":
    case "HS384":
    case "HS512":
      return { hash, name: "HMAC" };
    case "PS256":
    case "PS384":
    case "PS512":
      return { hash, name: "RSA-PSS", saltLength: alg.slice(-3) >> 3 };
    case "RS256":
    case "RS384":
    case "RS512":
      return { hash, name: "RSASSA-PKCS1-v1_5" };
    case "ES256":
    case "ES384":
    case "ES512":
      return { hash, name: "ECDSA", namedCurve: algorithm.namedCurve };
    case (isCloudflareWorkers() && "EdDSA"):
      const { namedCurve } = algorithm;
      return { name: namedCurve, namedCurve };
    case "EdDSA":
      return { name: algorithm.name };
    default:
      throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);
  }
}
var init_subtle_dsa = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/subtle_dsa.js"() {
    init_env();
    init_errors();
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/get_sign_verify_key.js
function getCryptoKey3(alg, key, usage) {
  if (isCryptoKey(key)) {
    checkSigCryptoKey(key, alg, usage);
    return key;
  }
  if (key instanceof Uint8Array) {
    if (!alg.startsWith("HS")) {
      throw new TypeError(invalid_key_input_default(key, ...types));
    }
    return webcrypto_default.subtle.importKey("raw", key, { hash: `SHA-${alg.slice(-3)}`, name: "HMAC" }, false, [usage]);
  }
  throw new TypeError(invalid_key_input_default(key, ...types, "Uint8Array"));
}
var init_get_sign_verify_key = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/get_sign_verify_key.js"() {
    init_webcrypto();
    init_crypto_key();
    init_invalid_key_input();
    init_is_key_like();
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/verify.js
var verify, verify_default;
var init_verify = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/verify.js"() {
    init_subtle_dsa();
    init_webcrypto();
    init_check_key_length();
    init_get_sign_verify_key();
    verify = async (alg, key, signature, data) => {
      const cryptoKey = await getCryptoKey3(alg, key, "verify");
      check_key_length_default(alg, cryptoKey);
      const algorithm = subtleDsa(alg, cryptoKey.algorithm);
      try {
        return await webcrypto_default.subtle.verify(algorithm, cryptoKey, signature, data);
      } catch (_a) {
        return false;
      }
    };
    verify_default = verify;
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jws/flattened/verify.js
async function flattenedVerify(jws, key, options) {
  var _a;
  if (!isObject(jws)) {
    throw new JWSInvalid("Flattened JWS must be an object");
  }
  if (jws.protected === void 0 && jws.header === void 0) {
    throw new JWSInvalid('Flattened JWS must have either of the "protected" or "header" members');
  }
  if (jws.protected !== void 0 && typeof jws.protected !== "string") {
    throw new JWSInvalid("JWS Protected Header incorrect type");
  }
  if (jws.payload === void 0) {
    throw new JWSInvalid("JWS Payload missing");
  }
  if (typeof jws.signature !== "string") {
    throw new JWSInvalid("JWS Signature missing or incorrect type");
  }
  if (jws.header !== void 0 && !isObject(jws.header)) {
    throw new JWSInvalid("JWS Unprotected Header incorrect type");
  }
  let parsedProt = {};
  if (jws.protected) {
    try {
      const protectedHeader = decode(jws.protected);
      parsedProt = JSON.parse(decoder.decode(protectedHeader));
    } catch (_b) {
      throw new JWSInvalid("JWS Protected Header is invalid");
    }
  }
  if (!is_disjoint_default(parsedProt, jws.header)) {
    throw new JWSInvalid("JWS Protected and JWS Unprotected Header Parameter names must be disjoint");
  }
  const joseHeader = {
    ...parsedProt,
    ...jws.header
  };
  const extensions = validate_crit_default(JWSInvalid, /* @__PURE__ */ new Map([["b64", true]]), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);
  let b64 = true;
  if (extensions.has("b64")) {
    b64 = parsedProt.b64;
    if (typeof b64 !== "boolean") {
      throw new JWSInvalid('The "b64" (base64url-encode payload) Header Parameter must be a boolean');
    }
  }
  const { alg } = joseHeader;
  if (typeof alg !== "string" || !alg) {
    throw new JWSInvalid('JWS "alg" (Algorithm) Header Parameter missing or invalid');
  }
  const algorithms = options && validate_algorithms_default("algorithms", options.algorithms);
  if (algorithms && !algorithms.has(alg)) {
    throw new JOSEAlgNotAllowed('"alg" (Algorithm) Header Parameter not allowed');
  }
  if (b64) {
    if (typeof jws.payload !== "string") {
      throw new JWSInvalid("JWS Payload must be a string");
    }
  } else if (typeof jws.payload !== "string" && !(jws.payload instanceof Uint8Array)) {
    throw new JWSInvalid("JWS Payload must be a string or an Uint8Array instance");
  }
  let resolvedKey = false;
  if (typeof key === "function") {
    key = await key(parsedProt, jws);
    resolvedKey = true;
  }
  check_key_type_default(alg, key, "verify");
  const data = concat(encoder.encode((_a = jws.protected) !== null && _a !== void 0 ? _a : ""), encoder.encode("."), typeof jws.payload === "string" ? encoder.encode(jws.payload) : jws.payload);
  const signature = decode(jws.signature);
  const verified = await verify_default(alg, key, signature, data);
  if (!verified) {
    throw new JWSSignatureVerificationFailed();
  }
  let payload;
  if (b64) {
    payload = decode(jws.payload);
  } else if (typeof jws.payload === "string") {
    payload = encoder.encode(jws.payload);
  } else {
    payload = jws.payload;
  }
  const result = { payload };
  if (jws.protected !== void 0) {
    result.protectedHeader = parsedProt;
  }
  if (jws.header !== void 0) {
    result.unprotectedHeader = jws.header;
  }
  if (resolvedKey) {
    return { ...result, key };
  }
  return result;
}
var init_verify2 = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jws/flattened/verify.js"() {
    init_base64url();
    init_verify();
    init_errors();
    init_buffer_utils();
    init_is_disjoint();
    init_is_object();
    init_check_key_type();
    init_validate_crit();
    init_validate_algorithms();
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jws/compact/verify.js
async function compactVerify(jws, key, options) {
  if (jws instanceof Uint8Array) {
    jws = decoder.decode(jws);
  }
  if (typeof jws !== "string") {
    throw new JWSInvalid("Compact JWS must be a string or Uint8Array");
  }
  const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split(".");
  if (length !== 3) {
    throw new JWSInvalid("Invalid Compact JWS");
  }
  const verified = await flattenedVerify({ payload, protected: protectedHeader, signature }, key, options);
  const result = { payload: verified.payload, protectedHeader: verified.protectedHeader };
  if (typeof key === "function") {
    return { ...result, key: verified.key };
  }
  return result;
}
var init_verify3 = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jws/compact/verify.js"() {
    init_verify2();
    init_errors();
    init_buffer_utils();
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jws/general/verify.js
async function generalVerify(jws, key, options) {
  if (!isObject(jws)) {
    throw new JWSInvalid("General JWS must be an object");
  }
  if (!Array.isArray(jws.signatures) || !jws.signatures.every(isObject)) {
    throw new JWSInvalid("JWS Signatures missing or incorrect type");
  }
  for (const signature of jws.signatures) {
    try {
      return await flattenedVerify({
        header: signature.header,
        payload: jws.payload,
        protected: signature.protected,
        signature: signature.signature
      }, key, options);
    } catch (_a) {
    }
  }
  throw new JWSSignatureVerificationFailed();
}
var init_verify4 = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jws/general/verify.js"() {
    init_verify2();
    init_errors();
    init_is_object();
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/epoch.js
var epoch_default;
var init_epoch = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/epoch.js"() {
    epoch_default = (date) => Math.floor(date.getTime() / 1e3);
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/secs.js
var minute, hour, day, week, year, REGEX, secs_default;
var init_secs = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/secs.js"() {
    minute = 60;
    hour = minute * 60;
    day = hour * 24;
    week = day * 7;
    year = day * 365.25;
    REGEX = /^(\d+|\d+\.\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)$/i;
    secs_default = (str) => {
      const matched = REGEX.exec(str);
      if (!matched) {
        throw new TypeError("Invalid time period format");
      }
      const value = parseFloat(matched[1]);
      const unit = matched[2].toLowerCase();
      switch (unit) {
        case "sec":
        case "secs":
        case "second":
        case "seconds":
        case "s":
          return Math.round(value);
        case "minute":
        case "minutes":
        case "min":
        case "mins":
        case "m":
          return Math.round(value * minute);
        case "hour":
        case "hours":
        case "hr":
        case "hrs":
        case "h":
          return Math.round(value * hour);
        case "day":
        case "days":
        case "d":
          return Math.round(value * day);
        case "week":
        case "weeks":
        case "w":
          return Math.round(value * week);
        default:
          return Math.round(value * year);
      }
    };
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/jwt_claims_set.js
var normalizeTyp, checkAudiencePresence, jwt_claims_set_default;
var init_jwt_claims_set = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/lib/jwt_claims_set.js"() {
    init_errors();
    init_buffer_utils();
    init_epoch();
    init_secs();
    init_is_object();
    normalizeTyp = (value) => value.toLowerCase().replace(/^application\//, "");
    checkAudiencePresence = (audPayload, audOption) => {
      if (typeof audPayload === "string") {
        return audOption.includes(audPayload);
      }
      if (Array.isArray(audPayload)) {
        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));
      }
      return false;
    };
    jwt_claims_set_default = (protectedHeader, encodedPayload, options = {}) => {
      const { typ } = options;
      if (typ && (typeof protectedHeader.typ !== "string" || normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {
        throw new JWTClaimValidationFailed('unexpected "typ" JWT header value', "typ", "check_failed");
      }
      let payload;
      try {
        payload = JSON.parse(decoder.decode(encodedPayload));
      } catch (_a) {
      }
      if (!isObject(payload)) {
        throw new JWTInvalid("JWT Claims Set must be a top-level JSON object");
      }
      const { issuer } = options;
      if (issuer && !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {
        throw new JWTClaimValidationFailed('unexpected "iss" claim value', "iss", "check_failed");
      }
      const { subject } = options;
      if (subject && payload.sub !== subject) {
        throw new JWTClaimValidationFailed('unexpected "sub" claim value', "sub", "check_failed");
      }
      const { audience } = options;
      if (audience && !checkAudiencePresence(payload.aud, typeof audience === "string" ? [audience] : audience)) {
        throw new JWTClaimValidationFailed('unexpected "aud" claim value', "aud", "check_failed");
      }
      let tolerance;
      switch (typeof options.clockTolerance) {
        case "string":
          tolerance = secs_default(options.clockTolerance);
          break;
        case "number":
          tolerance = options.clockTolerance;
          break;
        case "undefined":
          tolerance = 0;
          break;
        default:
          throw new TypeError("Invalid clockTolerance option type");
      }
      const { currentDate } = options;
      const now = epoch_default(currentDate || /* @__PURE__ */ new Date());
      if ((payload.iat !== void 0 || options.maxTokenAge) && typeof payload.iat !== "number") {
        throw new JWTClaimValidationFailed('"iat" claim must be a number', "iat", "invalid");
      }
      if (payload.nbf !== void 0) {
        if (typeof payload.nbf !== "number") {
          throw new JWTClaimValidationFailed('"nbf" claim must be a number', "nbf", "invalid");
        }
        if (payload.nbf > now + tolerance) {
          throw new JWTClaimValidationFailed('"nbf" claim timestamp check failed', "nbf", "check_failed");
        }
      }
      if (payload.exp !== void 0) {
        if (typeof payload.exp !== "number") {
          throw new JWTClaimValidationFailed('"exp" claim must be a number', "exp", "invalid");
        }
        if (payload.exp <= now - tolerance) {
          throw new JWTExpired('"exp" claim timestamp check failed', "exp", "check_failed");
        }
      }
      if (options.maxTokenAge) {
        const age = now - payload.iat;
        const max = typeof options.maxTokenAge === "number" ? options.maxTokenAge : secs_default(options.maxTokenAge);
        if (age - tolerance > max) {
          throw new JWTExpired('"iat" claim timestamp check failed (too far in the past)', "iat", "check_failed");
        }
        if (age < 0 - tolerance) {
          throw new JWTClaimValidationFailed('"iat" claim timestamp check failed (it should be in the past)', "iat", "check_failed");
        }
      }
      return payload;
    };
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwt/verify.js
async function jwtVerify(jwt, key, options) {
  var _a;
  const verified = await compactVerify(jwt, key, options);
  if (((_a = verified.protectedHeader.crit) === null || _a === void 0 ? void 0 : _a.includes("b64")) && verified.protectedHeader.b64 === false) {
    throw new JWTInvalid("JWTs MUST NOT use unencoded payload");
  }
  const payload = jwt_claims_set_default(verified.protectedHeader, verified.payload, options);
  const result = { payload, protectedHeader: verified.protectedHeader };
  if (typeof key === "function") {
    return { ...result, key: verified.key };
  }
  return result;
}
var init_verify5 = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwt/verify.js"() {
    init_verify3();
    init_jwt_claims_set();
    init_errors();
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwt/decrypt.js
async function jwtDecrypt(jwt, key, options) {
  const decrypted = await compactDecrypt(jwt, key, options);
  const payload = jwt_claims_set_default(decrypted.protectedHeader, decrypted.plaintext, options);
  const { protectedHeader } = decrypted;
  if (protectedHeader.iss !== void 0 && protectedHeader.iss !== payload.iss) {
    throw new JWTClaimValidationFailed('replicated "iss" claim header parameter mismatch', "iss", "mismatch");
  }
  if (protectedHeader.sub !== void 0 && protectedHeader.sub !== payload.sub) {
    throw new JWTClaimValidationFailed('replicated "sub" claim header parameter mismatch', "sub", "mismatch");
  }
  if (protectedHeader.aud !== void 0 && JSON.stringify(protectedHeader.aud) !== JSON.stringify(payload.aud)) {
    throw new JWTClaimValidationFailed('replicated "aud" claim header parameter mismatch', "aud", "mismatch");
  }
  const result = { payload, protectedHeader };
  if (typeof key === "function") {
    return { ...result, key: decrypted.key };
  }
  return result;
}
var init_decrypt5 = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwt/decrypt.js"() {
    init_decrypt3();
    init_jwt_claims_set();
    init_errors();
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwe/compact/encrypt.js
var CompactEncrypt;
var init_encrypt4 = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwe/compact/encrypt.js"() {
    init_encrypt2();
    CompactEncrypt = class {
      constructor(plaintext) {
        this._flattened = new FlattenedEncrypt(plaintext);
      }
      setContentEncryptionKey(cek) {
        this._flattened.setContentEncryptionKey(cek);
        return this;
      }
      setInitializationVector(iv) {
        this._flattened.setInitializationVector(iv);
        return this;
      }
      setProtectedHeader(protectedHeader) {
        this._flattened.setProtectedHeader(protectedHeader);
        return this;
      }
      setKeyManagementParameters(parameters) {
        this._flattened.setKeyManagementParameters(parameters);
        return this;
      }
      async encrypt(key, options) {
        const jwe = await this._flattened.encrypt(key, options);
        return [jwe.protected, jwe.encrypted_key, jwe.iv, jwe.ciphertext, jwe.tag].join(".");
      }
    };
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/sign.js
var sign, sign_default;
var init_sign = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/sign.js"() {
    init_subtle_dsa();
    init_webcrypto();
    init_check_key_length();
    init_get_sign_verify_key();
    sign = async (alg, key, data) => {
      const cryptoKey = await getCryptoKey3(alg, key, "sign");
      check_key_length_default(alg, cryptoKey);
      const signature = await webcrypto_default.subtle.sign(subtleDsa(alg, cryptoKey.algorithm), cryptoKey, data);
      return new Uint8Array(signature);
    };
    sign_default = sign;
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jws/flattened/sign.js
var FlattenedSign;
var init_sign2 = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jws/flattened/sign.js"() {
    init_base64url();
    init_sign();
    init_is_disjoint();
    init_errors();
    init_buffer_utils();
    init_check_key_type();
    init_validate_crit();
    FlattenedSign = class {
      constructor(payload) {
        if (!(payload instanceof Uint8Array)) {
          throw new TypeError("payload must be an instance of Uint8Array");
        }
        this._payload = payload;
      }
      setProtectedHeader(protectedHeader) {
        if (this._protectedHeader) {
          throw new TypeError("setProtectedHeader can only be called once");
        }
        this._protectedHeader = protectedHeader;
        return this;
      }
      setUnprotectedHeader(unprotectedHeader) {
        if (this._unprotectedHeader) {
          throw new TypeError("setUnprotectedHeader can only be called once");
        }
        this._unprotectedHeader = unprotectedHeader;
        return this;
      }
      async sign(key, options) {
        if (!this._protectedHeader && !this._unprotectedHeader) {
          throw new JWSInvalid("either setProtectedHeader or setUnprotectedHeader must be called before #sign()");
        }
        if (!is_disjoint_default(this._protectedHeader, this._unprotectedHeader)) {
          throw new JWSInvalid("JWS Protected and JWS Unprotected Header Parameter names must be disjoint");
        }
        const joseHeader = {
          ...this._protectedHeader,
          ...this._unprotectedHeader
        };
        const extensions = validate_crit_default(JWSInvalid, /* @__PURE__ */ new Map([["b64", true]]), options === null || options === void 0 ? void 0 : options.crit, this._protectedHeader, joseHeader);
        let b64 = true;
        if (extensions.has("b64")) {
          b64 = this._protectedHeader.b64;
          if (typeof b64 !== "boolean") {
            throw new JWSInvalid('The "b64" (base64url-encode payload) Header Parameter must be a boolean');
          }
        }
        const { alg } = joseHeader;
        if (typeof alg !== "string" || !alg) {
          throw new JWSInvalid('JWS "alg" (Algorithm) Header Parameter missing or invalid');
        }
        check_key_type_default(alg, key, "sign");
        let payload = this._payload;
        if (b64) {
          payload = encoder.encode(encode(payload));
        }
        let protectedHeader;
        if (this._protectedHeader) {
          protectedHeader = encoder.encode(encode(JSON.stringify(this._protectedHeader)));
        } else {
          protectedHeader = encoder.encode("");
        }
        const data = concat(protectedHeader, encoder.encode("."), payload);
        const signature = await sign_default(alg, key, data);
        const jws = {
          signature: encode(signature),
          payload: ""
        };
        if (b64) {
          jws.payload = decoder.decode(payload);
        }
        if (this._unprotectedHeader) {
          jws.header = this._unprotectedHeader;
        }
        if (this._protectedHeader) {
          jws.protected = decoder.decode(protectedHeader);
        }
        return jws;
      }
    };
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jws/compact/sign.js
var CompactSign;
var init_sign3 = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jws/compact/sign.js"() {
    init_sign2();
    CompactSign = class {
      constructor(payload) {
        this._flattened = new FlattenedSign(payload);
      }
      setProtectedHeader(protectedHeader) {
        this._flattened.setProtectedHeader(protectedHeader);
        return this;
      }
      async sign(key, options) {
        const jws = await this._flattened.sign(key, options);
        if (jws.payload === void 0) {
          throw new TypeError("use the flattened module for creating JWS with b64: false");
        }
        return `${jws.protected}.${jws.payload}.${jws.signature}`;
      }
    };
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jws/general/sign.js
var IndividualSignature, GeneralSign;
var init_sign4 = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jws/general/sign.js"() {
    init_sign2();
    init_errors();
    IndividualSignature = class {
      constructor(sig, key, options) {
        this.parent = sig;
        this.key = key;
        this.options = options;
      }
      setProtectedHeader(protectedHeader) {
        if (this.protectedHeader) {
          throw new TypeError("setProtectedHeader can only be called once");
        }
        this.protectedHeader = protectedHeader;
        return this;
      }
      setUnprotectedHeader(unprotectedHeader) {
        if (this.unprotectedHeader) {
          throw new TypeError("setUnprotectedHeader can only be called once");
        }
        this.unprotectedHeader = unprotectedHeader;
        return this;
      }
      addSignature(...args) {
        return this.parent.addSignature(...args);
      }
      sign(...args) {
        return this.parent.sign(...args);
      }
      done() {
        return this.parent;
      }
    };
    GeneralSign = class {
      constructor(payload) {
        this._signatures = [];
        this._payload = payload;
      }
      addSignature(key, options) {
        const signature = new IndividualSignature(this, key, options);
        this._signatures.push(signature);
        return signature;
      }
      async sign() {
        if (!this._signatures.length) {
          throw new JWSInvalid("at least one signature must be added");
        }
        const jws = {
          signatures: [],
          payload: ""
        };
        for (let i = 0; i < this._signatures.length; i++) {
          const signature = this._signatures[i];
          const flattened = new FlattenedSign(this._payload);
          flattened.setProtectedHeader(signature.protectedHeader);
          flattened.setUnprotectedHeader(signature.unprotectedHeader);
          const { payload, ...rest } = await flattened.sign(signature.key, signature.options);
          if (i === 0) {
            jws.payload = payload;
          } else if (jws.payload !== payload) {
            throw new JWSInvalid("inconsistent use of JWS Unencoded Payload Option (RFC7797)");
          }
          jws.signatures.push(rest);
        }
        return jws;
      }
    };
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwt/produce.js
var ProduceJWT;
var init_produce = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwt/produce.js"() {
    init_epoch();
    init_is_object();
    init_secs();
    ProduceJWT = class {
      constructor(payload) {
        if (!isObject(payload)) {
          throw new TypeError("JWT Claims Set MUST be an object");
        }
        this._payload = payload;
      }
      setIssuer(issuer) {
        this._payload = { ...this._payload, iss: issuer };
        return this;
      }
      setSubject(subject) {
        this._payload = { ...this._payload, sub: subject };
        return this;
      }
      setAudience(audience) {
        this._payload = { ...this._payload, aud: audience };
        return this;
      }
      setJti(jwtId) {
        this._payload = { ...this._payload, jti: jwtId };
        return this;
      }
      setNotBefore(input) {
        if (typeof input === "number") {
          this._payload = { ...this._payload, nbf: input };
        } else {
          this._payload = { ...this._payload, nbf: epoch_default(/* @__PURE__ */ new Date()) + secs_default(input) };
        }
        return this;
      }
      setExpirationTime(input) {
        if (typeof input === "number") {
          this._payload = { ...this._payload, exp: input };
        } else {
          this._payload = { ...this._payload, exp: epoch_default(/* @__PURE__ */ new Date()) + secs_default(input) };
        }
        return this;
      }
      setIssuedAt(input) {
        if (typeof input === "undefined") {
          this._payload = { ...this._payload, iat: epoch_default(/* @__PURE__ */ new Date()) };
        } else {
          this._payload = { ...this._payload, iat: input };
        }
        return this;
      }
    };
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwt/sign.js
var SignJWT;
var init_sign5 = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwt/sign.js"() {
    init_sign3();
    init_errors();
    init_buffer_utils();
    init_produce();
    SignJWT = class extends ProduceJWT {
      setProtectedHeader(protectedHeader) {
        this._protectedHeader = protectedHeader;
        return this;
      }
      async sign(key, options) {
        var _a;
        const sig = new CompactSign(encoder.encode(JSON.stringify(this._payload)));
        sig.setProtectedHeader(this._protectedHeader);
        if (Array.isArray((_a = this._protectedHeader) === null || _a === void 0 ? void 0 : _a.crit) && this._protectedHeader.crit.includes("b64") && this._protectedHeader.b64 === false) {
          throw new JWTInvalid("JWTs MUST NOT use unencoded payload");
        }
        return sig.sign(key, options);
      }
    };
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwt/encrypt.js
var EncryptJWT;
var init_encrypt5 = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwt/encrypt.js"() {
    init_encrypt4();
    init_buffer_utils();
    init_produce();
    EncryptJWT = class extends ProduceJWT {
      setProtectedHeader(protectedHeader) {
        if (this._protectedHeader) {
          throw new TypeError("setProtectedHeader can only be called once");
        }
        this._protectedHeader = protectedHeader;
        return this;
      }
      setKeyManagementParameters(parameters) {
        if (this._keyManagementParameters) {
          throw new TypeError("setKeyManagementParameters can only be called once");
        }
        this._keyManagementParameters = parameters;
        return this;
      }
      setContentEncryptionKey(cek) {
        if (this._cek) {
          throw new TypeError("setContentEncryptionKey can only be called once");
        }
        this._cek = cek;
        return this;
      }
      setInitializationVector(iv) {
        if (this._iv) {
          throw new TypeError("setInitializationVector can only be called once");
        }
        this._iv = iv;
        return this;
      }
      replicateIssuerAsHeader() {
        this._replicateIssuerAsHeader = true;
        return this;
      }
      replicateSubjectAsHeader() {
        this._replicateSubjectAsHeader = true;
        return this;
      }
      replicateAudienceAsHeader() {
        this._replicateAudienceAsHeader = true;
        return this;
      }
      async encrypt(key, options) {
        const enc = new CompactEncrypt(encoder.encode(JSON.stringify(this._payload)));
        if (this._replicateIssuerAsHeader) {
          this._protectedHeader = { ...this._protectedHeader, iss: this._payload.iss };
        }
        if (this._replicateSubjectAsHeader) {
          this._protectedHeader = { ...this._protectedHeader, sub: this._payload.sub };
        }
        if (this._replicateAudienceAsHeader) {
          this._protectedHeader = { ...this._protectedHeader, aud: this._payload.aud };
        }
        enc.setProtectedHeader(this._protectedHeader);
        if (this._iv) {
          enc.setInitializationVector(this._iv);
        }
        if (this._cek) {
          enc.setContentEncryptionKey(this._cek);
        }
        if (this._keyManagementParameters) {
          enc.setKeyManagementParameters(this._keyManagementParameters);
        }
        return enc.encrypt(key, options);
      }
    };
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwk/thumbprint.js
async function calculateJwkThumbprint(jwk, digestAlgorithm) {
  if (!isObject(jwk)) {
    throw new TypeError("JWK must be an object");
  }
  digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : digestAlgorithm = "sha256";
  if (digestAlgorithm !== "sha256" && digestAlgorithm !== "sha384" && digestAlgorithm !== "sha512") {
    throw new TypeError('digestAlgorithm must one of "sha256", "sha384", or "sha512"');
  }
  let components;
  switch (jwk.kty) {
    case "EC":
      check(jwk.crv, '"crv" (Curve) Parameter');
      check(jwk.x, '"x" (X Coordinate) Parameter');
      check(jwk.y, '"y" (Y Coordinate) Parameter');
      components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x, y: jwk.y };
      break;
    case "OKP":
      check(jwk.crv, '"crv" (Subtype of Key Pair) Parameter');
      check(jwk.x, '"x" (Public Key) Parameter');
      components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x };
      break;
    case "RSA":
      check(jwk.e, '"e" (Exponent) Parameter');
      check(jwk.n, '"n" (Modulus) Parameter');
      components = { e: jwk.e, kty: jwk.kty, n: jwk.n };
      break;
    case "oct":
      check(jwk.k, '"k" (Key Value) Parameter');
      components = { k: jwk.k, kty: jwk.kty };
      break;
    default:
      throw new JOSENotSupported('"kty" (Key Type) Parameter missing or unsupported');
  }
  const data = encoder.encode(JSON.stringify(components));
  return encode(await digest_default(digestAlgorithm, data));
}
async function calculateJwkThumbprintUri(jwk, digestAlgorithm) {
  digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : digestAlgorithm = "sha256";
  const thumbprint = await calculateJwkThumbprint(jwk, digestAlgorithm);
  return `urn:ietf:params:oauth:jwk-thumbprint:sha-${digestAlgorithm.slice(-3)}:${thumbprint}`;
}
var check;
var init_thumbprint = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwk/thumbprint.js"() {
    init_digest();
    init_base64url();
    init_errors();
    init_buffer_utils();
    init_is_object();
    check = (value, description) => {
      if (typeof value !== "string" || !value) {
        throw new JWKInvalid(`${description} missing or invalid`);
      }
    };
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwk/embedded.js
async function EmbeddedJWK(protectedHeader, token) {
  const joseHeader = {
    ...protectedHeader,
    ...token.header
  };
  if (!isObject(joseHeader.jwk)) {
    throw new JWSInvalid('"jwk" (JSON Web Key) Header Parameter must be a JSON object');
  }
  const key = await importJWK({ ...joseHeader.jwk, ext: true }, joseHeader.alg, true);
  if (key instanceof Uint8Array || key.type !== "public") {
    throw new JWSInvalid('"jwk" (JSON Web Key) Header Parameter must be a public key');
  }
  return key;
}
var init_embedded = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwk/embedded.js"() {
    init_import();
    init_is_object();
    init_errors();
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwks/local.js
function getKtyFromAlg(alg) {
  switch (typeof alg === "string" && alg.slice(0, 2)) {
    case "RS":
    case "PS":
      return "RSA";
    case "ES":
      return "EC";
    case "Ed":
      return "OKP";
    default:
      throw new JOSENotSupported('Unsupported "alg" value for a JSON Web Key Set');
  }
}
function isJWKSLike(jwks) {
  return jwks && typeof jwks === "object" && Array.isArray(jwks.keys) && jwks.keys.every(isJWKLike);
}
function isJWKLike(key) {
  return isObject(key);
}
function clone(obj) {
  if (typeof structuredClone === "function") {
    return structuredClone(obj);
  }
  return JSON.parse(JSON.stringify(obj));
}
function createLocalJWKSet(jwks) {
  return LocalJWKSet.prototype.getKey.bind(new LocalJWKSet(jwks));
}
var LocalJWKSet;
var init_local = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwks/local.js"() {
    init_import();
    init_errors();
    init_is_object();
    LocalJWKSet = class {
      constructor(jwks) {
        this._cached = /* @__PURE__ */ new WeakMap();
        if (!isJWKSLike(jwks)) {
          throw new JWKSInvalid("JSON Web Key Set malformed");
        }
        this._jwks = clone(jwks);
      }
      async getKey(protectedHeader, token) {
        const { alg, kid } = { ...protectedHeader, ...token.header };
        const kty = getKtyFromAlg(alg);
        const candidates = this._jwks.keys.filter((jwk2) => {
          let candidate = kty === jwk2.kty;
          if (candidate && typeof kid === "string") {
            candidate = kid === jwk2.kid;
          }
          if (candidate && typeof jwk2.alg === "string") {
            candidate = alg === jwk2.alg;
          }
          if (candidate && typeof jwk2.use === "string") {
            candidate = jwk2.use === "sig";
          }
          if (candidate && Array.isArray(jwk2.key_ops)) {
            candidate = jwk2.key_ops.includes("verify");
          }
          if (candidate && alg === "EdDSA") {
            candidate = jwk2.crv === "Ed25519" || jwk2.crv === "Ed448";
          }
          if (candidate) {
            switch (alg) {
              case "ES256":
                candidate = jwk2.crv === "P-256";
                break;
              case "ES256K":
                candidate = jwk2.crv === "secp256k1";
                break;
              case "ES384":
                candidate = jwk2.crv === "P-384";
                break;
              case "ES512":
                candidate = jwk2.crv === "P-521";
                break;
            }
          }
          return candidate;
        });
        const { 0: jwk, length } = candidates;
        if (length === 0) {
          throw new JWKSNoMatchingKey();
        } else if (length !== 1) {
          throw new JWKSMultipleMatchingKeys();
        }
        const cached = this._cached.get(jwk) || this._cached.set(jwk, {}).get(jwk);
        if (cached[alg] === void 0) {
          const keyObject = await importJWK({ ...jwk, ext: true }, alg);
          if (keyObject instanceof Uint8Array || keyObject.type !== "public") {
            throw new JWKSInvalid("JSON Web Key Set members must be public keys");
          }
          cached[alg] = keyObject;
        }
        return cached[alg];
      }
    };
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/fetch_jwks.js
var fetchJwks, fetch_jwks_default;
var init_fetch_jwks = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/fetch_jwks.js"() {
    init_errors();
    fetchJwks = async (url, timeout, options) => {
      let controller;
      let id;
      let timedOut = false;
      if (typeof AbortController === "function") {
        controller = new AbortController();
        id = setTimeout(() => {
          timedOut = true;
          controller.abort();
        }, timeout);
      }
      const response = await fetch(url.href, {
        signal: controller ? controller.signal : void 0,
        redirect: "manual",
        headers: options.headers
      }).catch((err) => {
        if (timedOut)
          throw new JWKSTimeout();
        throw err;
      });
      if (id !== void 0)
        clearTimeout(id);
      if (response.status !== 200) {
        throw new JOSEError("Expected 200 OK from the JSON Web Key Set HTTP response");
      }
      try {
        return await response.json();
      } catch (_a) {
        throw new JOSEError("Failed to parse the JSON Web Key Set HTTP response as JSON");
      }
    };
    fetch_jwks_default = fetchJwks;
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwks/remote.js
function createRemoteJWKSet(url, options) {
  return RemoteJWKSet.prototype.getKey.bind(new RemoteJWKSet(url, options));
}
var RemoteJWKSet;
var init_remote = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwks/remote.js"() {
    init_fetch_jwks();
    init_env();
    init_errors();
    init_local();
    RemoteJWKSet = class extends LocalJWKSet {
      constructor(url, options) {
        super({ keys: [] });
        this._jwks = void 0;
        if (!(url instanceof URL)) {
          throw new TypeError("url must be an instance of URL");
        }
        this._url = new URL(url.href);
        this._options = { agent: options === null || options === void 0 ? void 0 : options.agent, headers: options === null || options === void 0 ? void 0 : options.headers };
        this._timeoutDuration = typeof (options === null || options === void 0 ? void 0 : options.timeoutDuration) === "number" ? options === null || options === void 0 ? void 0 : options.timeoutDuration : 5e3;
        this._cooldownDuration = typeof (options === null || options === void 0 ? void 0 : options.cooldownDuration) === "number" ? options === null || options === void 0 ? void 0 : options.cooldownDuration : 3e4;
        this._cacheMaxAge = typeof (options === null || options === void 0 ? void 0 : options.cacheMaxAge) === "number" ? options === null || options === void 0 ? void 0 : options.cacheMaxAge : 6e5;
      }
      coolingDown() {
        return typeof this._jwksTimestamp === "number" ? Date.now() < this._jwksTimestamp + this._cooldownDuration : false;
      }
      fresh() {
        return typeof this._jwksTimestamp === "number" ? Date.now() < this._jwksTimestamp + this._cacheMaxAge : false;
      }
      async getKey(protectedHeader, token) {
        if (!this._jwks || !this.fresh()) {
          await this.reload();
        }
        try {
          return await super.getKey(protectedHeader, token);
        } catch (err) {
          if (err instanceof JWKSNoMatchingKey) {
            if (this.coolingDown() === false) {
              await this.reload();
              return super.getKey(protectedHeader, token);
            }
          }
          throw err;
        }
      }
      async reload() {
        if (this._pendingFetch && isCloudflareWorkers()) {
          return new Promise((resolve) => {
            const isDone = () => {
              if (this._pendingFetch === void 0) {
                resolve();
              } else {
                setTimeout(isDone, 5);
              }
            };
            isDone();
          });
        }
        if (!this._pendingFetch) {
          this._pendingFetch = fetch_jwks_default(this._url, this._timeoutDuration, this._options).then((json) => {
            if (!isJWKSLike(json)) {
              throw new JWKSInvalid("JSON Web Key Set malformed");
            }
            this._jwks = { keys: json.keys };
            this._jwksTimestamp = Date.now();
            this._pendingFetch = void 0;
          }).catch((err) => {
            this._pendingFetch = void 0;
            throw err;
          });
        }
        await this._pendingFetch;
      }
    };
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwt/unsecured.js
var UnsecuredJWT;
var init_unsecured = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/jwt/unsecured.js"() {
    init_base64url();
    init_buffer_utils();
    init_errors();
    init_jwt_claims_set();
    init_produce();
    UnsecuredJWT = class extends ProduceJWT {
      encode() {
        const header = encode(JSON.stringify({ alg: "none" }));
        const payload = encode(JSON.stringify(this._payload));
        return `${header}.${payload}.`;
      }
      static decode(jwt, options) {
        if (typeof jwt !== "string") {
          throw new JWTInvalid("Unsecured JWT must be a string");
        }
        const { 0: encodedHeader, 1: encodedPayload, 2: signature, length } = jwt.split(".");
        if (length !== 3 || signature !== "") {
          throw new JWTInvalid("Invalid Unsecured JWT");
        }
        let header;
        try {
          header = JSON.parse(decoder.decode(decode(encodedHeader)));
          if (header.alg !== "none")
            throw new Error();
        } catch (_a) {
          throw new JWTInvalid("Invalid Unsecured JWT");
        }
        const payload = jwt_claims_set_default(header, decode(encodedPayload), options);
        return { payload, header };
      }
    };
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/util/base64url.js
var base64url_exports2 = {};
__export(base64url_exports2, {
  decode: () => decode2,
  encode: () => encode2
});
var encode2, decode2;
var init_base64url2 = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/util/base64url.js"() {
    init_base64url();
    encode2 = encode;
    decode2 = decode;
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/util/decode_protected_header.js
function decodeProtectedHeader(token) {
  let protectedB64u;
  if (typeof token === "string") {
    const parts = token.split(".");
    if (parts.length === 3 || parts.length === 5) {
      ;
      [protectedB64u] = parts;
    }
  } else if (typeof token === "object" && token) {
    if ("protected" in token) {
      protectedB64u = token.protected;
    } else {
      throw new TypeError("Token does not contain a Protected Header");
    }
  }
  try {
    if (typeof protectedB64u !== "string" || !protectedB64u) {
      throw new Error();
    }
    const result = JSON.parse(decoder.decode(decode2(protectedB64u)));
    if (!isObject(result)) {
      throw new Error();
    }
    return result;
  } catch (_a) {
    throw new TypeError("Invalid Token or Protected Header formatting");
  }
}
var init_decode_protected_header = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/util/decode_protected_header.js"() {
    init_base64url2();
    init_buffer_utils();
    init_is_object();
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/util/decode_jwt.js
function decodeJwt(jwt) {
  if (typeof jwt !== "string")
    throw new JWTInvalid("JWTs must use Compact JWS serialization, JWT must be a string");
  const { 1: payload, length } = jwt.split(".");
  if (length === 5)
    throw new JWTInvalid("Only JWTs using Compact JWS serialization can be decoded");
  if (length !== 3)
    throw new JWTInvalid("Invalid JWT");
  if (!payload)
    throw new JWTInvalid("JWTs must contain a payload");
  let decoded;
  try {
    decoded = decode2(payload);
  } catch (_a) {
    throw new JWTInvalid("Failed to parse the base64url encoded payload");
  }
  let result;
  try {
    result = JSON.parse(decoder.decode(decoded));
  } catch (_b) {
    throw new JWTInvalid("Failed to parse the decoded payload as JSON");
  }
  if (!isObject(result))
    throw new JWTInvalid("Invalid JWT Claims Set");
  return result;
}
var init_decode_jwt = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/util/decode_jwt.js"() {
    init_base64url2();
    init_buffer_utils();
    init_is_object();
    init_errors();
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/generate.js
async function generateSecret(alg, options) {
  var _a;
  let length;
  let algorithm;
  let keyUsages;
  switch (alg) {
    case "HS256":
    case "HS384":
    case "HS512":
      length = parseInt(alg.slice(-3), 10);
      algorithm = { name: "HMAC", hash: `SHA-${length}`, length };
      keyUsages = ["sign", "verify"];
      break;
    case "A128CBC-HS256":
    case "A192CBC-HS384":
    case "A256CBC-HS512":
      length = parseInt(alg.slice(-3), 10);
      return random_default(new Uint8Array(length >> 3));
    case "A128KW":
    case "A192KW":
    case "A256KW":
      length = parseInt(alg.slice(1, 4), 10);
      algorithm = { name: "AES-KW", length };
      keyUsages = ["wrapKey", "unwrapKey"];
      break;
    case "A128GCMKW":
    case "A192GCMKW":
    case "A256GCMKW":
    case "A128GCM":
    case "A192GCM":
    case "A256GCM":
      length = parseInt(alg.slice(1, 4), 10);
      algorithm = { name: "AES-GCM", length };
      keyUsages = ["encrypt", "decrypt"];
      break;
    default:
      throw new JOSENotSupported('Invalid or unsupported JWK "alg" (Algorithm) Parameter value');
  }
  return webcrypto_default.subtle.generateKey(algorithm, (_a = options === null || options === void 0 ? void 0 : options.extractable) !== null && _a !== void 0 ? _a : false, keyUsages);
}
function getModulusLengthOption(options) {
  var _a;
  const modulusLength = (_a = options === null || options === void 0 ? void 0 : options.modulusLength) !== null && _a !== void 0 ? _a : 2048;
  if (typeof modulusLength !== "number" || modulusLength < 2048) {
    throw new JOSENotSupported("Invalid or unsupported modulusLength option provided, 2048 bits or larger keys must be used");
  }
  return modulusLength;
}
async function generateKeyPair(alg, options) {
  var _a, _b, _c;
  let algorithm;
  let keyUsages;
  switch (alg) {
    case "PS256":
    case "PS384":
    case "PS512":
      algorithm = {
        name: "RSA-PSS",
        hash: `SHA-${alg.slice(-3)}`,
        publicExponent: new Uint8Array([1, 0, 1]),
        modulusLength: getModulusLengthOption(options)
      };
      keyUsages = ["sign", "verify"];
      break;
    case "RS256":
    case "RS384":
    case "RS512":
      algorithm = {
        name: "RSASSA-PKCS1-v1_5",
        hash: `SHA-${alg.slice(-3)}`,
        publicExponent: new Uint8Array([1, 0, 1]),
        modulusLength: getModulusLengthOption(options)
      };
      keyUsages = ["sign", "verify"];
      break;
    case "RSA-OAEP":
    case "RSA-OAEP-256":
    case "RSA-OAEP-384":
    case "RSA-OAEP-512":
      algorithm = {
        name: "RSA-OAEP",
        hash: `SHA-${parseInt(alg.slice(-3), 10) || 1}`,
        publicExponent: new Uint8Array([1, 0, 1]),
        modulusLength: getModulusLengthOption(options)
      };
      keyUsages = ["decrypt", "unwrapKey", "encrypt", "wrapKey"];
      break;
    case "ES256":
      algorithm = { name: "ECDSA", namedCurve: "P-256" };
      keyUsages = ["sign", "verify"];
      break;
    case "ES384":
      algorithm = { name: "ECDSA", namedCurve: "P-384" };
      keyUsages = ["sign", "verify"];
      break;
    case "ES512":
      algorithm = { name: "ECDSA", namedCurve: "P-521" };
      keyUsages = ["sign", "verify"];
      break;
    case (isCloudflareWorkers() && "EdDSA"):
      switch (options === null || options === void 0 ? void 0 : options.crv) {
        case void 0:
        case "Ed25519":
          algorithm = { name: "NODE-ED25519", namedCurve: "NODE-ED25519" };
          keyUsages = ["sign", "verify"];
          break;
        default:
          throw new JOSENotSupported("Invalid or unsupported crv option provided");
      }
      break;
    case "EdDSA":
      keyUsages = ["sign", "verify"];
      const crv = (_a = options === null || options === void 0 ? void 0 : options.crv) !== null && _a !== void 0 ? _a : "Ed25519";
      switch (crv) {
        case "Ed25519":
        case "Ed448":
          algorithm = { name: crv };
          break;
        default:
          throw new JOSENotSupported("Invalid or unsupported crv option provided");
      }
      break;
    case "ECDH-ES":
    case "ECDH-ES+A128KW":
    case "ECDH-ES+A192KW":
    case "ECDH-ES+A256KW": {
      keyUsages = ["deriveKey", "deriveBits"];
      const crv2 = (_b = options === null || options === void 0 ? void 0 : options.crv) !== null && _b !== void 0 ? _b : "P-256";
      switch (crv2) {
        case "P-256":
        case "P-384":
        case "P-521": {
          algorithm = { name: "ECDH", namedCurve: crv2 };
          break;
        }
        case "X25519":
        case "X448":
          algorithm = { name: crv2 };
          break;
        default:
          throw new JOSENotSupported("Invalid or unsupported crv option provided, supported values are P-256, P-384, P-521, X25519, and X448");
      }
      break;
    }
    default:
      throw new JOSENotSupported('Invalid or unsupported JWK "alg" (Algorithm) Parameter value');
  }
  return webcrypto_default.subtle.generateKey(algorithm, (_c = options === null || options === void 0 ? void 0 : options.extractable) !== null && _c !== void 0 ? _c : false, keyUsages);
}
var init_generate = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/runtime/generate.js"() {
    init_env();
    init_webcrypto();
    init_errors();
    init_random();
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/key/generate_key_pair.js
async function generateKeyPair2(alg, options) {
  return generateKeyPair(alg, options);
}
var init_generate_key_pair = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/key/generate_key_pair.js"() {
    init_generate();
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/key/generate_secret.js
async function generateSecret2(alg, options) {
  return generateSecret(alg, options);
}
var init_generate_secret = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/key/generate_secret.js"() {
    init_generate();
  }
});

// ../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/index.js
var browser_exports = {};
__export(browser_exports, {
  CompactEncrypt: () => CompactEncrypt,
  CompactSign: () => CompactSign,
  EmbeddedJWK: () => EmbeddedJWK,
  EncryptJWT: () => EncryptJWT,
  FlattenedEncrypt: () => FlattenedEncrypt,
  FlattenedSign: () => FlattenedSign,
  GeneralEncrypt: () => GeneralEncrypt,
  GeneralSign: () => GeneralSign,
  SignJWT: () => SignJWT,
  UnsecuredJWT: () => UnsecuredJWT,
  base64url: () => base64url_exports2,
  calculateJwkThumbprint: () => calculateJwkThumbprint,
  calculateJwkThumbprintUri: () => calculateJwkThumbprintUri,
  compactDecrypt: () => compactDecrypt,
  compactVerify: () => compactVerify,
  createLocalJWKSet: () => createLocalJWKSet,
  createRemoteJWKSet: () => createRemoteJWKSet,
  decodeJwt: () => decodeJwt,
  decodeProtectedHeader: () => decodeProtectedHeader,
  errors: () => errors_exports,
  exportJWK: () => exportJWK,
  exportPKCS8: () => exportPKCS8,
  exportSPKI: () => exportSPKI,
  flattenedDecrypt: () => flattenedDecrypt,
  flattenedVerify: () => flattenedVerify,
  generalDecrypt: () => generalDecrypt,
  generalVerify: () => generalVerify,
  generateKeyPair: () => generateKeyPair2,
  generateSecret: () => generateSecret2,
  importJWK: () => importJWK,
  importPKCS8: () => importPKCS8,
  importSPKI: () => importSPKI,
  importX509: () => importX509,
  jwtDecrypt: () => jwtDecrypt,
  jwtVerify: () => jwtVerify
});
var init_browser = __esm({
  "../../node_modules/.pnpm/jose@4.11.2/node_modules/jose/dist/browser/index.js"() {
    init_decrypt3();
    init_decrypt2();
    init_decrypt4();
    init_encrypt3();
    init_verify3();
    init_verify2();
    init_verify4();
    init_verify5();
    init_decrypt5();
    init_encrypt4();
    init_encrypt2();
    init_sign3();
    init_sign2();
    init_sign4();
    init_sign5();
    init_encrypt5();
    init_thumbprint();
    init_embedded();
    init_local();
    init_remote();
    init_unsecured();
    init_export();
    init_import();
    init_decode_protected_header();
    init_decode_jwt();
    init_errors();
    init_generate_key_pair();
    init_generate_secret();
    init_base64url2();
  }
});

// ../auth/dist/createToken.js
var require_createToken = __commonJS({
  "../auth/dist/createToken.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createToken = void 0;
    var jose_1 = (init_browser(), __toCommonJS(browser_exports));
    var textEncoder = new TextEncoder();
    var createToken = async ({ payload, secret, expiration }) => {
      const secretKey = textEncoder.encode(secret);
      const jwt = new jose_1.SignJWT(payload).setProtectedHeader({ alg: "HS256" });
      if (expiration) {
        jwt.setExpirationTime(expiration);
      }
      return jwt.sign(secretKey);
    };
    exports.createToken = createToken;
  }
});

// ../auth/dist/createAccessToken.js
var require_createAccessToken = __commonJS({
  "../auth/dist/createAccessToken.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createAccessToken = void 0;
    var createToken_1 = require_createToken();
    var createAccessToken = async (args) => (0, createToken_1.createToken)(args);
    exports.createAccessToken = createAccessToken;
  }
});

// ../auth/dist/createAssetsAccessToken.js
var require_createAssetsAccessToken = __commonJS({
  "../auth/dist/createAssetsAccessToken.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createAssetsAccessToken = void 0;
    var createToken_1 = require_createToken();
    var createAssetsAccessToken = async (args) => (0, createToken_1.createToken)(args);
    exports.createAssetsAccessToken = createAssetsAccessToken;
  }
});

// ../auth/dist/createMigrationToken.js
var require_createMigrationToken = __commonJS({
  "../auth/dist/createMigrationToken.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createMigrationToken = void 0;
    var createToken_1 = require_createToken();
    var createMigrationToken = async (args) => (0, createToken_1.createToken)(args);
    exports.createMigrationToken = createMigrationToken;
  }
});

// ../errors/dist/FleekError.js
var require_FleekError = __commonJS({
  "../errors/dist/FleekError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.FleekError = void 0;
    var FleekError2 = class extends Error {
      // eslint-disable-next-line fleek-custom/valid-argument-types
      constructor(data) {
        super();
        this.data = data;
      }
      get message() {
        return this.toString();
      }
    };
    exports.FleekError = FleekError2;
  }
});

// ../errors/dist/BunnyPullZoneNotFoundError.js
var require_BunnyPullZoneNotFoundError = __commonJS({
  "../errors/dist/BunnyPullZoneNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BunnyPullZoneNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var BunnyPullZoneNotFoundError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "BunnyPullZoneNotFoundError";
        this.toString = () => `PullZone with name ${this.data.name} was not found on BunnyCDN.`;
      }
    };
    exports.BunnyPullZoneNotFoundError = BunnyPullZoneNotFoundError;
  }
});

// ../errors/dist/DomainNotFoundError.js
var require_DomainNotFoundError = __commonJS({
  "../errors/dist/DomainNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DomainNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var DomainNotFoundError2 = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "DomainNotFoundError";
        this.toString = () => {
          if (this.data.domain.hostname) {
            return `Domain ${this.data.domain.hostname} was not found.`;
          }
          return "Domain was not found.";
        };
      }
    };
    exports.DomainNotFoundError = DomainNotFoundError2;
  }
});

// ../errors/dist/DomainsNotFoundError.js
var require_DomainsNotFoundError = __commonJS({
  "../errors/dist/DomainsNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DomainsNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var DomainsNotFoundError2 = class extends FleekError_1.FleekError {
      constructor() {
        super({});
        this.name = "DomainsNotFoundError";
        this.toString = () => "No domains found.";
      }
    };
    exports.DomainsNotFoundError = DomainsNotFoundError2;
  }
});

// ../errors/dist/DomainAlreadyExistsInProjectError.js
var require_DomainAlreadyExistsInProjectError = __commonJS({
  "../errors/dist/DomainAlreadyExistsInProjectError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DomainAlreadyExistsInProjectError = void 0;
    var FleekError_1 = require_FleekError();
    var DomainAlreadyExistsInProjectError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "DomainAlreadyExistsInProjectError";
        this.toString = () => {
          return `Domain ${this.data.domain.hostname} already exists under the project.`;
        };
      }
    };
    exports.DomainAlreadyExistsInProjectError = DomainAlreadyExistsInProjectError;
  }
});

// ../errors/dist/DomainInPendingStateError.js
var require_DomainInPendingStateError = __commonJS({
  "../errors/dist/DomainInPendingStateError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DomainInPendingStateError = void 0;
    var FleekError_1 = require_FleekError();
    var DomainInPendingStateError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "DomainInPendingStateError";
        this.toString = () => {
          return "Domain is in pending state. Please wait and try action again later.";
        };
      }
    };
    exports.DomainInPendingStateError = DomainInPendingStateError;
  }
});

// ../errors/dist/DomainHostnameInvalidError.js
var require_DomainHostnameInvalidError = __commonJS({
  "../errors/dist/DomainHostnameInvalidError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DomainHostnameInvalidError = void 0;
    var FleekError_1 = require_FleekError();
    var DomainHostnameInvalidError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "DomainHostnameInvalidError";
        this.toString = () => {
          return `The domain ${this.data.hostname} is invalid`;
        };
      }
    };
    exports.DomainHostnameInvalidError = DomainHostnameInvalidError;
  }
});

// ../errors/dist/UnknownError.js
var require_UnknownError = __commonJS({
  "../errors/dist/UnknownError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.UnknownError = void 0;
    var FleekError_1 = require_FleekError();
    var UnknownError3 = class extends FleekError_1.FleekError {
      constructor() {
        super({});
        this.name = "UnknownError";
        this.toString = () => `Unexpected error. Repeat the action or contact support.`;
      }
    };
    exports.UnknownError = UnknownError3;
  }
});

// ../errors/dist/SiteNotFoundError.js
var require_SiteNotFoundError = __commonJS({
  "../errors/dist/SiteNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SiteNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var SiteNotFoundError3 = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "SiteNotFoundError";
        this.toString = () => {
          if (this.data.site.slug) {
            return `Site ${this.data.site.slug} not found.`;
          }
          return `Site not found.`;
        };
      }
    };
    exports.SiteNotFoundError = SiteNotFoundError3;
  }
});

// ../errors/dist/SitesNotFoundError.js
var require_SitesNotFoundError = __commonJS({
  "../errors/dist/SitesNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SitesNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var SitesNotFoundError2 = class extends FleekError_1.FleekError {
      constructor() {
        super({});
        this.name = "SitesNotFoundError";
        this.toString = () => "No sites found.";
      }
    };
    exports.SitesNotFoundError = SitesNotFoundError2;
  }
});

// ../errors/dist/SiteAlreadyExistsError.js
var require_SiteAlreadyExistsError = __commonJS({
  "../errors/dist/SiteAlreadyExistsError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SiteAlreadyExistsError = void 0;
    var FleekError_1 = require_FleekError();
    var SiteAlreadyExistsError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "SiteAlreadyExistsError";
        this.toString = () => {
          if ("name" in this.data.site) {
            return `Site ${this.data.site.name} already exists in the project.`;
          }
          return `Site slug must be unique within Fleek but ${this.data.site.slug} already exists.`;
        };
      }
    };
    exports.SiteAlreadyExistsError = SiteAlreadyExistsError;
  }
});

// ../errors/dist/SiteDeploymentNotFoundError.js
var require_SiteDeploymentNotFoundError = __commonJS({
  "../errors/dist/SiteDeploymentNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SiteDeploymentNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var SiteDeploymentNotFoundError2 = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "SiteDeploymentNotFoundError";
        this.toString = () => `Deployment not found.`;
      }
    };
    exports.SiteDeploymentNotFoundError = SiteDeploymentNotFoundError2;
  }
});

// ../errors/dist/SiteHasDependentsError.js
var require_SiteHasDependentsError = __commonJS({
  "../errors/dist/SiteHasDependentsError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SiteHasDependentsError = void 0;
    var FleekError_1 = require_FleekError();
    var SiteHasDependentsError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "SiteHasDependentsError";
        this.toString = () => {
          const dependentsInfo = [];
          if (this.data.domains.length > 0) {
            dependentsInfo.push(`${this.data.domains.length} domains`);
          }
          if (this.data.ipnsRecords.length > 0) {
            dependentsInfo.push(`${this.data.ipnsRecords.length} IPNS records`);
          }
          return `Site has assigned ${dependentsInfo}. You have to delete them first.`;
        };
      }
    };
    exports.SiteHasDependentsError = SiteHasDependentsError;
  }
});

// ../errors/dist/SiteHasNoSourceProviderError.js
var require_SiteHasNoSourceProviderError = __commonJS({
  "../errors/dist/SiteHasNoSourceProviderError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SiteHasNoSourceProviderError = void 0;
    var FleekError_1 = require_FleekError();
    var SiteHasNoSourceProviderError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "SiteHasNoSourceProviderError";
        this.toString = () => {
          if (this.data.site.slug) {
            return `Site ${this.data.site.slug} does not have a source provider.`;
          }
          return `Site does not have a source provider.`;
        };
      }
    };
    exports.SiteHasNoSourceProviderError = SiteHasNoSourceProviderError;
  }
});

// ../errors/dist/SiteNotDeployedError.js
var require_SiteNotDeployedError = __commonJS({
  "../errors/dist/SiteNotDeployedError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SiteNotDeployedError = void 0;
    var FleekError_1 = require_FleekError();
    var SiteNotDeployedError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "SiteNotDeployedError";
        this.toString = () => {
          if (this.data.site.slug) {
            return `Site ${this.data.site.slug} does not have released deployments.`;
          }
          return `Site does not have released deployments.`;
        };
      }
    };
    exports.SiteNotDeployedError = SiteNotDeployedError;
  }
});

// ../errors/dist/IpnsRecordNotFoundError.js
var require_IpnsRecordNotFoundError = __commonJS({
  "../errors/dist/IpnsRecordNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.IpnsRecordNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var IpnsRecordNotFoundError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "IpnsRecordNotFoundError";
        this.toString = () => `IPNS record not found.`;
      }
    };
    exports.IpnsRecordNotFoundError = IpnsRecordNotFoundError;
  }
});

// ../errors/dist/IpnsRecordsNotFoundError.js
var require_IpnsRecordsNotFoundError = __commonJS({
  "../errors/dist/IpnsRecordsNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.IpnsRecordsNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var IpnsRecordsNotFoundError = class extends FleekError_1.FleekError {
      constructor() {
        super({});
        this.name = "IpnsRecordsNotFoundError";
        this.toString = () => "No IPNS records found.";
      }
    };
    exports.IpnsRecordsNotFoundError = IpnsRecordsNotFoundError;
  }
});

// ../errors/dist/IpnsFailToDecryptKeyError.js
var require_IpnsFailToDecryptKeyError = __commonJS({
  "../errors/dist/IpnsFailToDecryptKeyError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.IpnsFailToDecryptKeyError = void 0;
    var FleekError_1 = require_FleekError();
    var IpnsFailToDecryptKeyError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "IpnsFailToDecryptKeyError";
        this.toString = () => `Failed to decrypt IPNS key.`;
      }
    };
    exports.IpnsFailToDecryptKeyError = IpnsFailToDecryptKeyError;
  }
});

// ../errors/dist/IpnsRecordsForSiteLimitError.js
var require_IpnsRecordsForSiteLimitError = __commonJS({
  "../errors/dist/IpnsRecordsForSiteLimitError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.IpnsRecordsForSiteLimitError = void 0;
    var FleekError_1 = require_FleekError();
    var IpnsRecordsForSiteLimitError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "IpnsRecordsForSiteLimitError";
        this.toString = () => {
          if (this.data.site.name) {
            return `Maximum amount of IPNS records that may be assigned to the ${this.data.site.name} site was exceeded.`;
          }
          return `Maximum amount of IPNS records that may be assigned to the site was exceeded.`;
        };
      }
    };
    exports.IpnsRecordsForSiteLimitError = IpnsRecordsForSiteLimitError;
  }
});

// ../errors/dist/StorageIpfsUploadFailedError.js
var require_StorageIpfsUploadFailedError = __commonJS({
  "../errors/dist/StorageIpfsUploadFailedError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.StorageIpfsUploadFailedError = void 0;
    var FleekError_1 = require_FleekError();
    var StorageIpfsUploadFailedError3 = class extends FleekError_1.FleekError {
      constructor() {
        super({});
        this.name = "StorageIpfsUploadFailedError";
        this.toString = () => `Upload failed.`;
      }
    };
    exports.StorageIpfsUploadFailedError = StorageIpfsUploadFailedError3;
  }
});

// ../errors/dist/SdkRequiredNodeRuntimeError.js
var require_SdkRequiredNodeRuntimeError = __commonJS({
  "../errors/dist/SdkRequiredNodeRuntimeError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SdkRequiredNodeRuntimeError = void 0;
    var FleekError_1 = require_FleekError();
    var SdkRequiredNodeRuntimeError6 = class extends FleekError_1.FleekError {
      constructor() {
        super({});
        this.name = "SdkRequiredNodeRuntimeError";
        this.toString = () => `The functionality of this SDK feature is dependent on the Node.js runtime.`;
      }
    };
    exports.SdkRequiredNodeRuntimeError = SdkRequiredNodeRuntimeError6;
  }
});

// ../errors/dist/AuthorizationError.js
var require_AuthorizationError = __commonJS({
  "../errors/dist/AuthorizationError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.AuthorizationError = void 0;
    var FleekError_1 = require_FleekError();
    var AuthorizationError5 = class extends FleekError_1.FleekError {
      constructor() {
        super({});
        this.name = "AuthorizationError";
        this.toString = () => `Authorization with provided credentials is invalid.`;
      }
    };
    exports.AuthorizationError = AuthorizationError5;
  }
});

// ../errors/dist/ProjectMembershipNotFoundError.js
var require_ProjectMembershipNotFoundError = __commonJS({
  "../errors/dist/ProjectMembershipNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProjectMembershipNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var ProjectMembershipNotFoundError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "ProjectMembershipNotFoundError";
        this.toString = () => `Membership not found for project.`;
      }
    };
    exports.ProjectMembershipNotFoundError = ProjectMembershipNotFoundError;
  }
});

// ../errors/dist/GithubAppInstallationNotFoundError.js
var require_GithubAppInstallationNotFoundError = __commonJS({
  "../errors/dist/GithubAppInstallationNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.GithubAppInstallationNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var GithubAppInstallationNotFoundError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "GithubAppInstallationNotFoundError";
        this.toString = () => {
          return "No GitHub App installation found for given project.";
        };
      }
    };
    exports.GithubAppInstallationNotFoundError = GithubAppInstallationNotFoundError;
  }
});

// ../errors/dist/UserNotFoundError.js
var require_UserNotFoundError = __commonJS({
  "../errors/dist/UserNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.UserNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var UserNotFoundError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "UserNotFoundError";
        this.toString = () => {
          if (this.data.email) {
            return `User with email ${this.data.email} not found.`;
          }
          return `User not found.`;
        };
      }
    };
    exports.UserNotFoundError = UserNotFoundError;
  }
});

// ../errors/dist/UserAlreadyExistsError.js
var require_UserAlreadyExistsError = __commonJS({
  "../errors/dist/UserAlreadyExistsError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.UserAlreadyExistsError = void 0;
    var FleekError_1 = require_FleekError();
    var UserAlreadyExistsError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "UserAlreadyExistsError";
        this.toString = () => "The username is already in use, please select another one";
      }
    };
    exports.UserAlreadyExistsError = UserAlreadyExistsError;
  }
});

// ../errors/dist/ProjectNotFoundError.js
var require_ProjectNotFoundError = __commonJS({
  "../errors/dist/ProjectNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProjectNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var ProjectNotFoundError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "ProjectNotFoundError";
        this.toString = () => "Project not found.";
      }
    };
    exports.ProjectNotFoundError = ProjectNotFoundError;
  }
});

// ../errors/dist/ProjectsNotFoundError.js
var require_ProjectsNotFoundError = __commonJS({
  "../errors/dist/ProjectsNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProjectsNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var ProjectsNotFoundError = class extends FleekError_1.FleekError {
      constructor() {
        super({});
        this.name = "ProjectsNotFoundError";
        this.toString = () => "No projects found.";
      }
    };
    exports.ProjectsNotFoundError = ProjectsNotFoundError;
  }
});

// ../errors/dist/ProjectHasDependentsError.js
var require_ProjectHasDependentsError = __commonJS({
  "../errors/dist/ProjectHasDependentsError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProjectHasDependentsError = void 0;
    var FleekError_1 = require_FleekError();
    var ProjectHasDependentsError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "ProjectHasDependentsError";
        this.toString = () => {
          const dependentsInfo = [];
          if (this.data.sites.length > 0) {
            dependentsInfo.push(`${this.data.sites.length} sites`);
          }
          if (this.data.privateGateways.length > 0) {
            dependentsInfo.push(`${this.data.privateGateways.length} private gateways`);
          }
          if (this.data.ipnsRecords.length > 0) {
            dependentsInfo.push(`${this.data.ipnsRecords.length} IPNS records`);
          }
          return `Project has assigned ${dependentsInfo.join(", ")}. You have to delete them first.`;
        };
      }
    };
    exports.ProjectHasDependentsError = ProjectHasDependentsError;
  }
});

// ../errors/dist/ProjectInvalidNameError.js
var require_ProjectInvalidNameError = __commonJS({
  "../errors/dist/ProjectInvalidNameError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProjectInvalidNameError = void 0;
    var FleekError_1 = require_FleekError();
    var ProjectInvalidNameError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "ProjectInvalidNameError";
        this.toString = () => `The project name ${this.data.name} is invalid.`;
      }
    };
    exports.ProjectInvalidNameError = ProjectInvalidNameError;
  }
});

// ../errors/dist/PublicKeyAlreadyExistsError.js
var require_PublicKeyAlreadyExistsError = __commonJS({
  "../errors/dist/PublicKeyAlreadyExistsError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PublicKeyAlreadyExistsError = void 0;
    var FleekError_1 = require_FleekError();
    var PublicKeyAlreadyExistsError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "PublicKeyAlreadyExistsError";
        this.toString = () => `Public key already exists.`;
      }
    };
    exports.PublicKeyAlreadyExistsError = PublicKeyAlreadyExistsError;
  }
});

// ../errors/dist/VerificationSessionAlreadyExistsError.js
var require_VerificationSessionAlreadyExistsError = __commonJS({
  "../errors/dist/VerificationSessionAlreadyExistsError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.VerificationSessionAlreadyExistsError = void 0;
    var FleekError_1 = require_FleekError();
    var VerificationSessionAlreadyExistsError = class extends FleekError_1.FleekError {
      constructor() {
        super({});
        this.name = "VerificationSessionAlreadyExistsError";
        this.toString = () => `Verification session already exists.`;
      }
    };
    exports.VerificationSessionAlreadyExistsError = VerificationSessionAlreadyExistsError;
  }
});

// ../errors/dist/UnauthenticatedError.js
var require_UnauthenticatedError = __commonJS({
  "../errors/dist/UnauthenticatedError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.UnauthenticatedError = void 0;
    var FleekError_1 = require_FleekError();
    var UnauthenticatedError = class extends FleekError_1.FleekError {
      constructor() {
        super({});
        this.name = "UnauthenticatedError";
        this.toString = () => `The request is not authenticated.`;
      }
    };
    exports.UnauthenticatedError = UnauthenticatedError;
  }
});

// ../errors/dist/DomainZoneNotFoundError.js
var require_DomainZoneNotFoundError = __commonJS({
  "../errors/dist/DomainZoneNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DomainZoneNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var DomainZoneNotFoundError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "DomainZoneNotFoundError";
        this.toString = () => {
          return "Domain zone not found.";
        };
      }
    };
    exports.DomainZoneNotFoundError = DomainZoneNotFoundError;
  }
});

// ../errors/dist/DomainZoneHasDependentsError.js
var require_DomainZoneHasDependentsError = __commonJS({
  "../errors/dist/DomainZoneHasDependentsError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DomainZoneHasDependentsError = void 0;
    var FleekError_1 = require_FleekError();
    var DomainZoneHasDependentsError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "DomainZoneHasDependentsError";
        this.toString = () => "Domain zone has assigned domains or private gateways. You have to delete them first.";
      }
    };
    exports.DomainZoneHasDependentsError = DomainZoneHasDependentsError;
  }
});

// ../errors/dist/DomainZoneInPendingStateError.js
var require_DomainZoneInPendingStateError = __commonJS({
  "../errors/dist/DomainZoneInPendingStateError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DomainZoneInPendingStateError = void 0;
    var FleekError_1 = require_FleekError();
    var DomainZoneInPendingStateError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "ZoneInPendingStateError";
        this.toString = () => {
          return "Domain zone is in pending state. Please wait and try action again later.";
        };
      }
    };
    exports.DomainZoneInPendingStateError = DomainZoneInPendingStateError;
  }
});

// ../errors/dist/DomainNotFoundUnderPullzoneError.js
var require_DomainNotFoundUnderPullzoneError = __commonJS({
  "../errors/dist/DomainNotFoundUnderPullzoneError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DomainNotFoundUnderPullzoneError = void 0;
    var FleekError_1 = require_FleekError();
    var DomainNotFoundUnderPullzoneError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "DomainNotFoundUnderPullzoneError";
        this.toString = () => {
          return "Domain zone not found.";
        };
      }
    };
    exports.DomainNotFoundUnderPullzoneError = DomainNotFoundUnderPullzoneError;
  }
});

// ../errors/dist/DomainZoneInvalidTypeError.js
var require_DomainZoneInvalidTypeError = __commonJS({
  "../errors/dist/DomainZoneInvalidTypeError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DomainZoneInvalidTypeError = void 0;
    var FleekError_1 = require_FleekError();
    var DomainZoneInvalidTypeError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "DomainZoneInvalidTypeError";
        this.toString = () => "Domain zone has different purpose of use.";
      }
    };
    exports.DomainZoneInvalidTypeError = DomainZoneInvalidTypeError;
  }
});

// ../errors/dist/UnauthorizedError.js
var require_UnauthorizedError = __commonJS({
  "../errors/dist/UnauthorizedError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.UnauthorizedError = void 0;
    var FleekError_1 = require_FleekError();
    var UnauthorizedError2 = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "UnauthorizedError";
        this.toString = () => {
          if (this.data.scopes) {
            return `You are not authorized to access this resource because of missing permissions: ${this.data.scopes.join(", ")}.`;
          }
          return `You are not authorized to access this resource.`;
        };
      }
    };
    exports.UnauthorizedError = UnauthorizedError2;
  }
});

// ../errors/dist/FleekConfigInvalidContentError.js
var require_FleekConfigInvalidContentError = __commonJS({
  "../errors/dist/FleekConfigInvalidContentError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.FleekConfigInvalidContentError = void 0;
    var FleekError_1 = require_FleekError();
    var FleekConfigInvalidContentError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "FleekConfigInvalidContentError";
        this.toString = () => {
          if (this.data.validationResult) {
            return `Validation of loaded ${this.data.configPath} failed. ${this.data.validationResult}`;
          }
          return `Loaded ${this.data.configPath} file is corrupted.`;
        };
      }
    };
    exports.FleekConfigInvalidContentError = FleekConfigInvalidContentError;
  }
});

// ../errors/dist/FleekConfigMissingFileError.js
var require_FleekConfigMissingFileError = __commonJS({
  "../errors/dist/FleekConfigMissingFileError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.FleekConfigMissingFileError = void 0;
    var FleekError_1 = require_FleekError();
    var FleekConfigMissingFileError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "FleekConfigMissingFileError";
        this.toString = () => {
          return `Unable to access or find the configuration file${this.data.configPath && " " + this.data.configPath + "." || "."}`;
        };
      }
    };
    exports.FleekConfigMissingFileError = FleekConfigMissingFileError;
  }
});

// ../errors/dist/ApplicationWhitelistDomainDuplicityError.js
var require_ApplicationWhitelistDomainDuplicityError = __commonJS({
  "../errors/dist/ApplicationWhitelistDomainDuplicityError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ApplicationWhitelistDomainDuplicityError = void 0;
    var FleekError_1 = require_FleekError();
    var ApplicationWhitelistDomainDuplicityError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "ApplicationWhitelistDomainDuplicityError";
        this.toString = () => `Application ${this.data.application.name} doesn't have unique white label domains.`;
      }
    };
    exports.ApplicationWhitelistDomainDuplicityError = ApplicationWhitelistDomainDuplicityError;
  }
});

// ../errors/dist/ApplicationAlreadyExistsError.js
var require_ApplicationAlreadyExistsError = __commonJS({
  "../errors/dist/ApplicationAlreadyExistsError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ApplicationAlreadyExistsError = void 0;
    var FleekError_1 = require_FleekError();
    var ApplicationAlreadyExistsError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "ApplicationAlreadyExistsError";
        this.toString = () => `Application ${this.data.application.name} already exists.`;
      }
    };
    exports.ApplicationAlreadyExistsError = ApplicationAlreadyExistsError;
  }
});

// ../errors/dist/ApplicationsNotFoundError.js
var require_ApplicationsNotFoundError = __commonJS({
  "../errors/dist/ApplicationsNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ApplicationsNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var ApplicationsNotFoundError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "ApplicationsNotFoundError";
        this.toString = () => "No applications found.";
      }
    };
    exports.ApplicationsNotFoundError = ApplicationsNotFoundError;
  }
});

// ../errors/dist/ApplicationNotFoundError.js
var require_ApplicationNotFoundError = __commonJS({
  "../errors/dist/ApplicationNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ApplicationNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var ApplicationNotFoundError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "ApplicationNotFoundError";
        this.toString = () => "Application not found.";
      }
    };
    exports.ApplicationNotFoundError = ApplicationNotFoundError;
  }
});

// ../errors/dist/ApplicationNameInvalidError.js
var require_ApplicationNameInvalidError = __commonJS({
  "../errors/dist/ApplicationNameInvalidError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ApplicationNameInvalidError = void 0;
    var FleekError_1 = require_FleekError();
    var ApplicationNameInvalidError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "ApplicationNameInvalidError";
        this.toString = () => `The application name ${this.data.name} is invalid.`;
      }
    };
    exports.ApplicationNameInvalidError = ApplicationNameInvalidError;
  }
});

// ../errors/dist/EnsRecordNotFoundError.js
var require_EnsRecordNotFoundError = __commonJS({
  "../errors/dist/EnsRecordNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.EnsRecordNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var EnsRecordNotFoundError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "EnsRecordNotFoundError";
        this.toString = () => {
          if (this.data.site?.id) {
            return `No site associated with this ENS record.`;
          }
          return `ENS record was not found.`;
        };
      }
    };
    exports.EnsRecordNotFoundError = EnsRecordNotFoundError;
  }
});

// ../errors/dist/EnsRecordAlreadyExistsInProjectError.js
var require_EnsRecordAlreadyExistsInProjectError = __commonJS({
  "../errors/dist/EnsRecordAlreadyExistsInProjectError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.EnsRecordAlreadyExistsInProjectError = void 0;
    var FleekError_1 = require_FleekError();
    var EnsRecordAlreadyExistsInProjectError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "EnsRecordAlreadyExistsInProjectError";
        this.toString = () => {
          return `ENS record already exists under the project.`;
        };
      }
    };
    exports.EnsRecordAlreadyExistsInProjectError = EnsRecordAlreadyExistsInProjectError;
  }
});

// ../errors/dist/EnsNameInvalidError.js
var require_EnsNameInvalidError = __commonJS({
  "../errors/dist/EnsNameInvalidError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.EnsNameInvalidError = void 0;
    var FleekError_1 = require_FleekError();
    var EnsNameInvalidError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "EnsNameInvalidError";
        this.toString = () => {
          return `ENS record name "${this.data.ensRecord.name}" is invalid.`;
        };
      }
    };
    exports.EnsNameInvalidError = EnsNameInvalidError;
  }
});

// ../errors/dist/EnsRecordInPendingStateError.js
var require_EnsRecordInPendingStateError = __commonJS({
  "../errors/dist/EnsRecordInPendingStateError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.EnsRecordInPendingStateError = void 0;
    var FleekError_1 = require_FleekError();
    var EnsRecordInPendingStateError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "EnsRecordInPendingStateError";
        this.toString = () => {
          return "ENS Record is in pending state. Please wait and try action again later.";
        };
      }
    };
    exports.EnsRecordInPendingStateError = EnsRecordInPendingStateError;
  }
});

// ../errors/dist/InvalidPersonalAccessTokenError.js
var require_InvalidPersonalAccessTokenError = __commonJS({
  "../errors/dist/InvalidPersonalAccessTokenError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.InvalidPersonalAccessTokenError = void 0;
    var FleekError_1 = require_FleekError();
    var InvalidPersonalAccessTokenError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "InvalidPersonalAccessTokenError";
        this.toString = () => "Personal access token is invalid.";
      }
    };
    exports.InvalidPersonalAccessTokenError = InvalidPersonalAccessTokenError;
  }
});

// ../errors/dist/PersonalAccessTokenNotFoundError.js
var require_PersonalAccessTokenNotFoundError = __commonJS({
  "../errors/dist/PersonalAccessTokenNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PersonalAccessTokenNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var PersonalAccessTokenNotFoundError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "PersonalAccessTokenNotFoundError";
        this.toString = () => `Personal access token with ID ${this.data.personalAccessToken.id} not found.`;
      }
    };
    exports.PersonalAccessTokenNotFoundError = PersonalAccessTokenNotFoundError;
  }
});

// ../errors/dist/PrivateGatewayNotFoundError.js
var require_PrivateGatewayNotFoundError = __commonJS({
  "../errors/dist/PrivateGatewayNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PrivateGatewayNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var PrivateGatewayNotFoundError2 = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "PrivateGatewayNotFoundError";
        this.toString = () => `Private gateway not found.`;
      }
    };
    exports.PrivateGatewayNotFoundError = PrivateGatewayNotFoundError2;
  }
});

// ../errors/dist/PrivateGatewayAlreadyExistsError.js
var require_PrivateGatewayAlreadyExistsError = __commonJS({
  "../errors/dist/PrivateGatewayAlreadyExistsError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PrivateGatewayAlreadyExistsError = void 0;
    var FleekError_1 = require_FleekError();
    var PrivateGatewayAlreadyExistsError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "PrivateGatewayAlreadyExistsError";
        this.toString = () => `Private gateway already exists. Please choose different name for the private gateway.`;
      }
    };
    exports.PrivateGatewayAlreadyExistsError = PrivateGatewayAlreadyExistsError;
  }
});

// ../errors/dist/PrivateGatewayNameInvalidError.js
var require_PrivateGatewayNameInvalidError = __commonJS({
  "../errors/dist/PrivateGatewayNameInvalidError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PrivateGatewayNameInvalidError = void 0;
    var FleekError_1 = require_FleekError();
    var PrivateGatewayNameInvalidError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "PrivateGatewayNameInvalidError";
        this.toString = () => `The private gateway name ${this.data.name} is invalid.`;
      }
    };
    exports.PrivateGatewayNameInvalidError = PrivateGatewayNameInvalidError;
  }
});

// ../errors/dist/PrivateGatewaysNotFoundError.js
var require_PrivateGatewaysNotFoundError = __commonJS({
  "../errors/dist/PrivateGatewaysNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PrivateGatewaysNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var PrivateGatewaysNotFoundError2 = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "PrivateGatewaysNotFoundError";
        this.toString = () => "No private gateways found.";
      }
    };
    exports.PrivateGatewaysNotFoundError = PrivateGatewaysNotFoundError2;
  }
});

// ../errors/dist/TemplateAlreadyExistsError.js
var require_TemplateAlreadyExistsError = __commonJS({
  "../errors/dist/TemplateAlreadyExistsError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TemplateAlreadyExistsError = void 0;
    var FleekError_1 = require_FleekError();
    var TemplateAlreadyExistsError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "TemplateAlreadyExistsError";
        this.toString = () => `Template already exists.`;
      }
    };
    exports.TemplateAlreadyExistsError = TemplateAlreadyExistsError;
  }
});

// ../errors/dist/TemplateNotFoundError.js
var require_TemplateNotFoundError = __commonJS({
  "../errors/dist/TemplateNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TemplateNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var TemplateNotFoundError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "TemplateNotFoundError";
        this.toString = () => `Template not found.`;
      }
    };
    exports.TemplateNotFoundError = TemplateNotFoundError;
  }
});

// ../errors/dist/UserHasNoAccessToAnotherUserError.js
var require_UserHasNoAccessToAnotherUserError = __commonJS({
  "../errors/dist/UserHasNoAccessToAnotherUserError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.UserHasNoAccessToAnotherUserError = void 0;
    var FleekError_1 = require_FleekError();
    var UserHasNoAccessToAnotherUserError = class extends FleekError_1.FleekError {
      constructor() {
        super({});
        this.name = "UserHasNoAccessToAnotherUserError";
        this.toString = () => "You don`t have access to user you try to fetch data for.";
      }
    };
    exports.UserHasNoAccessToAnotherUserError = UserHasNoAccessToAnotherUserError;
  }
});

// ../errors/dist/SiteFrameworkAlreadyExistsError.js
var require_SiteFrameworkAlreadyExistsError = __commonJS({
  "../errors/dist/SiteFrameworkAlreadyExistsError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SiteFrameworkAlreadyExistsError = void 0;
    var FleekError_1 = require_FleekError();
    var SiteFrameworkAlreadyExistsError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "SiteFrameworkAlreadyExistsError";
        this.toString = () => `Site framework already exists.`;
      }
    };
    exports.SiteFrameworkAlreadyExistsError = SiteFrameworkAlreadyExistsError;
  }
});

// ../errors/dist/SiteFrameworkNotFoundError.js
var require_SiteFrameworkNotFoundError = __commonJS({
  "../errors/dist/SiteFrameworkNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SiteFrameworkNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var SiteFrameworkNotFoundError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "SiteFrameworkNotFoundError";
        this.toString = () => `Site framework not found.`;
      }
    };
    exports.SiteFrameworkNotFoundError = SiteFrameworkNotFoundError;
  }
});

// ../errors/dist/TemplateCategoryNotFoundError.js
var require_TemplateCategoryNotFoundError = __commonJS({
  "../errors/dist/TemplateCategoryNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TemplateCategoryNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var TemplateCategoryNotFoundError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "TemplateCategoryNotFoundError";
        this.toString = () => `Template category not found.`;
      }
    };
    exports.TemplateCategoryNotFoundError = TemplateCategoryNotFoundError;
  }
});

// ../errors/dist/TemplateDeploymentNotFoundError.js
var require_TemplateDeploymentNotFoundError = __commonJS({
  "../errors/dist/TemplateDeploymentNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TemplateDeploymentNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var TemplateDeploymentNotFoundError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "TemplateDeploymentNotFoundError";
        this.toString = () => `Template deployment not found.`;
      }
    };
    exports.TemplateDeploymentNotFoundError = TemplateDeploymentNotFoundError;
  }
});

// ../errors/dist/ProjectMembershipHasInefficientRoleError.js
var require_ProjectMembershipHasInefficientRoleError = __commonJS({
  "../errors/dist/ProjectMembershipHasInefficientRoleError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProjectMembershipHasInefficientRoleError = void 0;
    var FleekError_1 = require_FleekError();
    var ProjectMembershipHasInefficientRoleError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "ProjectMembershipHasInefficientRoleError";
        this.toString = () => `Membership has inefficient role for this action.`;
      }
    };
    exports.ProjectMembershipHasInefficientRoleError = ProjectMembershipHasInefficientRoleError;
  }
});

// ../errors/dist/SecretGroupNotFoundError.js
var require_SecretGroupNotFoundError = __commonJS({
  "../errors/dist/SecretGroupNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SecretGroupNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var SecretGroupNotFoundError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "SecretGroupNotFoundError";
        this.toString = () => {
          return "Secret group was not found.";
        };
      }
    };
    exports.SecretGroupNotFoundError = SecretGroupNotFoundError;
  }
});

// ../errors/dist/SecretNotFoundError.js
var require_SecretNotFoundError = __commonJS({
  "../errors/dist/SecretNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SecretNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var SecretNotFoundError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "SecretNotFoundError";
        this.toString = () => {
          return "Secret was not found.";
        };
      }
    };
    exports.SecretNotFoundError = SecretNotFoundError;
  }
});

// ../errors/dist/SecretVisibilityAlreadyEncryptedError.js
var require_SecretVisibilityAlreadyEncryptedError = __commonJS({
  "../errors/dist/SecretVisibilityAlreadyEncryptedError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SecretVisibilityAlreadyEncryptedError = void 0;
    var FleekError_1 = require_FleekError();
    var SecretVisibilityAlreadyEncryptedError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "SecretVisibilityAlreadyEncryptedError";
        this.toString = () => {
          return "You cannot change visibility of already encrypted secret.";
        };
      }
    };
    exports.SecretVisibilityAlreadyEncryptedError = SecretVisibilityAlreadyEncryptedError;
  }
});

// ../errors/dist/SecretKeyAlreadyExistsError.js
var require_SecretKeyAlreadyExistsError = __commonJS({
  "../errors/dist/SecretKeyAlreadyExistsError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SecretKeyAlreadyExistsError = void 0;
    var FleekError_1 = require_FleekError();
    var SecretKeyAlreadyExistsError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "SecretKeyAlreadyExistsError";
        this.toString = () => {
          return "Variable with this key is already set.";
        };
      }
    };
    exports.SecretKeyAlreadyExistsError = SecretKeyAlreadyExistsError;
  }
});

// ../errors/dist/SecretFailToEncryptError.js
var require_SecretFailToEncryptError = __commonJS({
  "../errors/dist/SecretFailToEncryptError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SecretFailToEncryptError = void 0;
    var FleekError_1 = require_FleekError();
    var SecretFailToEncryptError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "SecretFailToEncryptError";
        this.toString = () => {
          return "Failed to encrypt secret.";
        };
      }
    };
    exports.SecretFailToEncryptError = SecretFailToEncryptError;
  }
});

// ../errors/dist/PinNotFoundError.js
var require_PinNotFoundError = __commonJS({
  "../errors/dist/PinNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PinNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var PinNotFoundError2 = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "PinNotFoundError";
        this.toString = () => {
          return "Pin was not found.";
        };
      }
    };
    exports.PinNotFoundError = PinNotFoundError2;
  }
});

// ../errors/dist/PinAlreadyExistsInProjectError.js
var require_PinAlreadyExistsInProjectError = __commonJS({
  "../errors/dist/PinAlreadyExistsInProjectError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PinAlreadyExistsInProjectError = void 0;
    var FleekError_1 = require_FleekError();
    var PinAlreadyExistsInProjectError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "PinAlreadyExistsInProjectError";
        this.toString = () => {
          return `Pin with the same '${this.data.pin.cid ? "cid" : "path"}' already exists within the project.`;
        };
      }
    };
    exports.PinAlreadyExistsInProjectError = PinAlreadyExistsInProjectError;
  }
});

// ../errors/dist/UnstoppableDeploymentError.js
var require_UnstoppableDeploymentError = __commonJS({
  "../errors/dist/UnstoppableDeploymentError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.UnstoppableDeploymentError = void 0;
    var FleekError_1 = require_FleekError();
    var UnstoppableDeploymentError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "UnstoppableDeploymentError";
        this.toString = () => `Deployment cannot be stopped.`;
      }
    };
    exports.UnstoppableDeploymentError = UnstoppableDeploymentError;
  }
});

// ../errors/dist/SiteDeploymentNotReleasedError.js
var require_SiteDeploymentNotReleasedError = __commonJS({
  "../errors/dist/SiteDeploymentNotReleasedError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SiteDeploymentNotReleasedError = void 0;
    var FleekError_1 = require_FleekError();
    var SiteDeploymentNotReleasedError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "SiteDeploymentNotReleasedError";
        this.toString = () => `Deployment not released.`;
      }
    };
    exports.SiteDeploymentNotReleasedError = SiteDeploymentNotReleasedError;
  }
});

// ../errors/dist/InvalidDeploymentTriggerError.js
var require_InvalidDeploymentTriggerError = __commonJS({
  "../errors/dist/InvalidDeploymentTriggerError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.InvalidDeploymentTriggerError = void 0;
    var FleekError_1 = require_FleekError();
    var InvalidDeploymentTriggerError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "InvalidDeploymentTriggerError";
        this.toString = () => `Deployment can not be triggered, source provider integrations missing.`;
      }
    };
    exports.InvalidDeploymentTriggerError = InvalidDeploymentTriggerError;
  }
});

// ../errors/dist/IpfsGatewayContentUnreachableError.js
var require_IpfsGatewayContentUnreachableError = __commonJS({
  "../errors/dist/IpfsGatewayContentUnreachableError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.IpfsGatewayContentUnreachableError = void 0;
    var FleekError_1 = require_FleekError();
    var IpfsGatewayContentUnreachableError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "IpfsGatewayContentUnreachableError";
        this.toString = () => "Cannot get IPFS content through Fleek gateway.";
      }
    };
    exports.IpfsGatewayContentUnreachableError = IpfsGatewayContentUnreachableError;
  }
});

// ../errors/dist/InvitationNotFoundError.js
var require_InvitationNotFoundError = __commonJS({
  "../errors/dist/InvitationNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.InvitationNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var InvitationNotFoundError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "InvitationNotFoundError";
        this.toString = () => {
          return "Invitation was not found.";
        };
      }
    };
    exports.InvitationNotFoundError = InvitationNotFoundError;
  }
});

// ../errors/dist/MigrationTokenInvalidError.js
var require_MigrationTokenInvalidError = __commonJS({
  "../errors/dist/MigrationTokenInvalidError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MigrationTokenInvalidError = void 0;
    var FleekError_1 = require_FleekError();
    var MigrationTokenInvalidError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "MigrationTokenInvalidError";
        this.toString = () => "Migration token is invalid or expired.";
      }
    };
    exports.MigrationTokenInvalidError = MigrationTokenInvalidError;
  }
});

// ../errors/dist/MigrationRequestsAlreadyExistError.js
var require_MigrationRequestsAlreadyExistError = __commonJS({
  "../errors/dist/MigrationRequestsAlreadyExistError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MigrationRequestsAlreadyExistError = void 0;
    var FleekError_1 = require_FleekError();
    var MigrationRequestsAlreadyExistError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "MigrationRequestsAlreadyExistError";
        this.toString = () => `All migration requests specified in token are either completed or in progress.`;
      }
    };
    exports.MigrationRequestsAlreadyExistError = MigrationRequestsAlreadyExistError;
  }
});

// ../errors/dist/MigrationRequestNotFoundError.js
var require_MigrationRequestNotFoundError = __commonJS({
  "../errors/dist/MigrationRequestNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MigrationRequestNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var MigrationRequestNotFoundError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "MigrationRequestNotFoundError";
        this.toString = () => `Migration request ${this.data.migrationRequest.id} not found.`;
      }
    };
    exports.MigrationRequestNotFoundError = MigrationRequestNotFoundError;
  }
});

// ../errors/dist/MigrationRequestInPendingStateError.js
var require_MigrationRequestInPendingStateError = __commonJS({
  "../errors/dist/MigrationRequestInPendingStateError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MigrationRequestInPendingStateError = void 0;
    var FleekError_1 = require_FleekError();
    var MigrationRequestInPendingStateError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "MigrationRequestInPendingStateError";
        this.toString = () => "Migration request is in pending state. Please wait and try action again later.";
      }
    };
    exports.MigrationRequestInPendingStateError = MigrationRequestInPendingStateError;
  }
});

// ../errors/dist/ProjectInvitationAlreadyExistError.js
var require_ProjectInvitationAlreadyExistError = __commonJS({
  "../errors/dist/ProjectInvitationAlreadyExistError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProjectInvitationAlreadyExistError = void 0;
    var FleekError_1 = require_FleekError();
    var ProjectInvitationAlreadyExistError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "ProjectInvitationAlreadyExistError";
        this.toString = () => `Project invitation with email ${this.data.user.email} for this project already exist.`;
      }
    };
    exports.ProjectInvitationAlreadyExistError = ProjectInvitationAlreadyExistError;
  }
});

// ../errors/dist/ProjectMembershipAlreadyExistError.js
var require_ProjectMembershipAlreadyExistError = __commonJS({
  "../errors/dist/ProjectMembershipAlreadyExistError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProjectMembershipAlreadyExistError = void 0;
    var FleekError_1 = require_FleekError();
    var ProjectMembershipAlreadyExistError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "ProjectMembershipAlreadyExistError";
        this.toString = () => `Project membership already exists.`;
      }
    };
    exports.ProjectMembershipAlreadyExistError = ProjectMembershipAlreadyExistError;
  }
});

// ../errors/dist/ProjectMembershipNoOwnersError.js
var require_ProjectMembershipNoOwnersError = __commonJS({
  "../errors/dist/ProjectMembershipNoOwnersError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ProjectMembershipNoOwnersError = void 0;
    var FleekError_1 = require_FleekError();
    var ProjectMembershipNoOwnersError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "ProjectMembershipNoOwnersError";
        this.toString = () => `Each project must have at least OWNER-role one membership.`;
      }
    };
    exports.ProjectMembershipNoOwnersError = ProjectMembershipNoOwnersError;
  }
});

// ../errors/dist/UploadedS3KeyNotFoundError.js
var require_UploadedS3KeyNotFoundError = __commonJS({
  "../errors/dist/UploadedS3KeyNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.UploadedS3KeyNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var UploadedS3KeyNotFoundError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "UploadedS3KeyNotFoundError";
        this.toString = () => "Uploaded S3 Key not found.";
      }
    };
    exports.UploadedS3KeyNotFoundError = UploadedS3KeyNotFoundError;
  }
});

// ../errors/dist/PathIsNotADirectoryError.js
var require_PathIsNotADirectoryError = __commonJS({
  "../errors/dist/PathIsNotADirectoryError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PathIsNotADirectoryError = void 0;
    var FleekError_1 = require_FleekError();
    var PathIsNotADirectoryError2 = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "PathIsNotADirectoryError";
        this.toString = () => {
          return `Given path ${this.data.path} is not a directory.`;
        };
      }
    };
    exports.PathIsNotADirectoryError = PathIsNotADirectoryError2;
  }
});

// ../errors/dist/FleekFunctionAlreadyExistsError.js
var require_FleekFunctionAlreadyExistsError = __commonJS({
  "../errors/dist/FleekFunctionAlreadyExistsError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.FleekFunctionAlreadyExistsError = void 0;
    var FleekError_1 = require_FleekError();
    var FleekFunctionAlreadyExistsError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "FleekFunctionAlreadyExistsError";
        this.toString = () => {
          if ("name" in this.data.function || "slug" in this.data.function) {
            return `Function ${this.data.function.name || this.data.function.slug} already exists.`;
          }
          return `Unexpected Function data structure ${JSON.stringify(this.data.function)}`;
        };
      }
    };
    exports.FleekFunctionAlreadyExistsError = FleekFunctionAlreadyExistsError;
  }
});

// ../errors/dist/FleekFunctionNotFoundError.js
var require_FleekFunctionNotFoundError = __commonJS({
  "../errors/dist/FleekFunctionNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.FleekFunctionNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var FleekFunctionNotFoundError2 = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "FleekFunctionNotFoundError";
        this.toString = () => {
          if (this.data.function?.name) {
            return `Function ${this.data.function.name} not found.`;
          }
          return `Function not found.`;
        };
      }
    };
    exports.FleekFunctionNotFoundError = FleekFunctionNotFoundError2;
  }
});

// ../errors/dist/FleekFunctionDeploymentNotFoundError.js
var require_FleekFunctionDeploymentNotFoundError = __commonJS({
  "../errors/dist/FleekFunctionDeploymentNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.FleekFunctionDeploymentNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var FleekFunctionDeploymentNotFoundError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "FleekFunctionDeploymentNotFoundError";
        this.toString = () => {
          return `Deployment not found.`;
        };
      }
    };
    exports.FleekFunctionDeploymentNotFoundError = FleekFunctionDeploymentNotFoundError;
  }
});

// ../errors/dist/FleekFunctionsNotFoundError.js
var require_FleekFunctionsNotFoundError = __commonJS({
  "../errors/dist/FleekFunctionsNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.FleekFunctionsNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var FleekFunctionsNotFoundError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "FleekFunctionsNotFoundError";
        this.toString = () => "No functions found.";
      }
    };
    exports.FleekFunctionsNotFoundError = FleekFunctionsNotFoundError;
  }
});

// ../errors/dist/FleekFunctionPathNotValidError.js
var require_FleekFunctionPathNotValidError = __commonJS({
  "../errors/dist/FleekFunctionPathNotValidError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.FleekFunctionPathNotValidError = void 0;
    var FleekError_1 = require_FleekError();
    var FleekFunctionPathNotValidError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "FleekFunctionPathNotValidError";
        this.toString = () => {
          return `File or folder at path, ${this.data.path} is invalid. Please refer to our documentation for more information on function file conventions.`;
        };
      }
    };
    exports.FleekFunctionPathNotValidError = FleekFunctionPathNotValidError;
  }
});

// ../errors/dist/FleekFunctionNameNotValidError.js
var require_FleekFunctionNameNotValidError = __commonJS({
  "../errors/dist/FleekFunctionNameNotValidError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.FleekFunctionNameNotValidError = void 0;
    var FleekError_1 = require_FleekError();
    var FleekFunctionNameNotValidError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "FleekFunctionNameNotValidError";
        this.toString = () => {
          return `The name, ${this.data.name}, is invalid`;
        };
      }
    };
    exports.FleekFunctionNameNotValidError = FleekFunctionNameNotValidError;
  }
});

// ../errors/dist/FleekFunctionStatusNotValidError.js
var require_FleekFunctionStatusNotValidError = __commonJS({
  "../errors/dist/FleekFunctionStatusNotValidError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.FleekFunctionStatusNotValidError = void 0;
    var FleekError_1 = require_FleekError();
    var FleekFunctionStatusNotValidError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "FleekFunctionStatusNotValidError";
        this.toString = () => {
          return `The function status is invalid. Must be one of ACTIVE and INACTIVE`;
        };
      }
    };
    exports.FleekFunctionStatusNotValidError = FleekFunctionStatusNotValidError;
  }
});

// ../errors/dist/FleekFunctionSlugNotValidError.js
var require_FleekFunctionSlugNotValidError = __commonJS({
  "../errors/dist/FleekFunctionSlugNotValidError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.FleekFunctionSlugNotValidError = void 0;
    var FleekError_1 = require_FleekError();
    var FleekFunctionSlugNotValidError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "FleekFunctionSlugNotValidError";
        this.toString = () => {
          return `The slug, ${this.data.slug}, is invalid`;
        };
      }
    };
    exports.FleekFunctionSlugNotValidError = FleekFunctionSlugNotValidError;
  }
});

// ../errors/dist/MaintenanceError.js
var require_MaintenanceError = __commonJS({
  "../errors/dist/MaintenanceError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MaintenanceError = void 0;
    var FleekError_1 = require_FleekError();
    var MaintenanceError = class extends FleekError_1.FleekError {
      constructor() {
        super({});
        this.name = "MaintenanceError";
        this.extensions = {
          http: {
            status: 503
            // Service Unavailable
          }
        };
        this.toString = () => "The platform is under maintenance. Please try again later.";
      }
    };
    exports.MaintenanceError = MaintenanceError;
  }
});

// ../errors/dist/UserHasNoAccessToFeatureError.js
var require_UserHasNoAccessToFeatureError = __commonJS({
  "../errors/dist/UserHasNoAccessToFeatureError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.UserHasNoAccessToFeatureError = void 0;
    var FleekError_1 = require_FleekError();
    var UserHasNoAccessToFeatureError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "UserHasNoAccessToFeatureError";
        this.toString = () => `User has no access to this feature.`;
      }
    };
    exports.UserHasNoAccessToFeatureError = UserHasNoAccessToFeatureError;
  }
});

// ../errors/dist/InvalidCidError.js
var require_InvalidCidError = __commonJS({
  "../errors/dist/InvalidCidError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.InvalidCidError = void 0;
    var FleekError_1 = require_FleekError();
    var InvalidCidError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "InvalidCidError";
        this.toString = () => `The cid ${this.data.name} is invalid.`;
      }
    };
    exports.InvalidCidError = InvalidCidError;
  }
});

// ../errors/dist/ValidationError.js
var require_ValidationError = __commonJS({
  "../errors/dist/ValidationError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ValidationError = void 0;
    var FleekError_1 = require_FleekError();
    var ValidationError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "ValidationError";
        this.toString = () => `${JSON.stringify(this.data)}`;
      }
    };
    exports.ValidationError = ValidationError;
  }
});

// ../errors/dist/UserInBlocklistError.js
var require_UserInBlocklistError = __commonJS({
  "../errors/dist/UserInBlocklistError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.UserInBlocklistError = void 0;
    var FleekError_1 = require_FleekError();
    var UserInBlocklistError = class extends FleekError_1.FleekError {
      constructor() {
        super({});
        this.name = "UserInBlocklistError";
        this.toString = () => "User is in the blocklist.";
      }
    };
    exports.UserInBlocklistError = UserInBlocklistError;
  }
});

// ../errors/dist/EnsNameContentHashCodecMistmatchError.js
var require_EnsNameContentHashCodecMistmatchError = __commonJS({
  "../errors/dist/EnsNameContentHashCodecMistmatchError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.EnsNameContentHashCodecMistmatchError = void 0;
    var FleekError_1 = require_FleekError();
    var EnsNameContentHashCodecMistmatchError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "EnsNameContentHashCodecMistmatchError";
        this.toString = () => {
          return `The content hash does not match or does not corresponds to ${this.data.codec} protocol`;
        };
      }
    };
    exports.EnsNameContentHashCodecMistmatchError = EnsNameContentHashCodecMistmatchError;
  }
});

// ../errors/dist/EnsNameContentHashUndefinedError.js
var require_EnsNameContentHashUndefinedError = __commonJS({
  "../errors/dist/EnsNameContentHashUndefinedError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.EnsNameContentHashUndefinedError = void 0;
    var FleekError_1 = require_FleekError();
    var EnsNameContentHashUndefinedError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "EnsNameContentHashUndefinedError";
        this.toString = () => {
          return `The content hash for ENS record name "${this.data.ensRecord.name}" is undefined.`;
        };
      }
    };
    exports.EnsNameContentHashUndefinedError = EnsNameContentHashUndefinedError;
  }
});

// ../errors/dist/DnsConfigAlreadyExistsError.js
var require_DnsConfigAlreadyExistsError = __commonJS({
  "../errors/dist/DnsConfigAlreadyExistsError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DnsConfigAlreadyExistsError = void 0;
    var FleekError_1 = require_FleekError();
    var DnsConfigAlreadyExistsError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "DnsConfigAlreadyExistsError";
        this.toString = () => `DNS config already exists for "${this.data.name}".`;
      }
    };
    exports.DnsConfigAlreadyExistsError = DnsConfigAlreadyExistsError;
  }
});

// ../errors/dist/DnsConfigNotFoundError.js
var require_DnsConfigNotFoundError = __commonJS({
  "../errors/dist/DnsConfigNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DnsConfigNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var DnsConfigNotFoundError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "DnsConfigNotFoundError";
        this.toString = () => `DNS config for the "${this.data.name}" name doesn't exist.`;
      }
    };
    exports.DnsConfigNotFoundError = DnsConfigNotFoundError;
  }
});

// ../errors/dist/TwoFactorSecretKeyFailedToEncryptError.js
var require_TwoFactorSecretKeyFailedToEncryptError = __commonJS({
  "../errors/dist/TwoFactorSecretKeyFailedToEncryptError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TwoFactorSecretKeyFailedToEncryptError = void 0;
    var FleekError_1 = require_FleekError();
    var TwoFactorSecretKeyFailedToEncryptError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "TwoFactorSecretKeyFailedToEncryptError";
        this.toString = () => "Failed to encrypt 2FA secret key.";
      }
    };
    exports.TwoFactorSecretKeyFailedToEncryptError = TwoFactorSecretKeyFailedToEncryptError;
  }
});

// ../errors/dist/UserSecretKeyAlreadyExistsError.js
var require_UserSecretKeyAlreadyExistsError = __commonJS({
  "../errors/dist/UserSecretKeyAlreadyExistsError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.UserSecretKeyAlreadyExistsError = void 0;
    var FleekError_1 = require_FleekError();
    var UserSecretKeyAlreadyExistsError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "UserSecretKeyAlreadyExistsError";
        this.toString = () => "A secret key for this user already exists.";
      }
    };
    exports.UserSecretKeyAlreadyExistsError = UserSecretKeyAlreadyExistsError;
  }
});

// ../errors/dist/UserSecretKeyNotFoundError.js
var require_UserSecretKeyNotFoundError = __commonJS({
  "../errors/dist/UserSecretKeyNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.UserSecretKeyNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var UserSecretKeyNotFoundError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "UserSecretKeyNotFoundError";
        this.toString = () => "A secret key for this user not found.";
      }
    };
    exports.UserSecretKeyNotFoundError = UserSecretKeyNotFoundError;
  }
});

// ../errors/dist/TwoFactorSecretKeyFailedToDecryptError.js
var require_TwoFactorSecretKeyFailedToDecryptError = __commonJS({
  "../errors/dist/TwoFactorSecretKeyFailedToDecryptError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TwoFactorSecretKeyFailedToDecryptError = void 0;
    var FleekError_1 = require_FleekError();
    var TwoFactorSecretKeyFailedToDecryptError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "TwoFactorSecretKeyFailedToDecryptError";
        this.toString = () => "Failed to decrypt 2FA secret key.";
      }
    };
    exports.TwoFactorSecretKeyFailedToDecryptError = TwoFactorSecretKeyFailedToDecryptError;
  }
});

// ../errors/dist/RecoveryCodesAlreadyExistsError.js
var require_RecoveryCodesAlreadyExistsError = __commonJS({
  "../errors/dist/RecoveryCodesAlreadyExistsError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.RecoveryCodesAlreadyExistsError = void 0;
    var FleekError_1 = require_FleekError();
    var RecoveryCodesAlreadyExistsError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "RecoveryCodesAlreadyExistsError";
        this.toString = () => "Recovery codes already exists.";
      }
    };
    exports.RecoveryCodesAlreadyExistsError = RecoveryCodesAlreadyExistsError;
  }
});

// ../errors/dist/WriteFileFromStreamError.js
var require_WriteFileFromStreamError = __commonJS({
  "../errors/dist/WriteFileFromStreamError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.WriteFileFromStreamError = void 0;
    var FleekError_1 = require_FleekError();
    var WriteFileFromStreamError2 = class extends FleekError_1.FleekError {
      constructor() {
        super({});
        this.name = "WriteFileFromStreamError";
        this.toString = () => `There was an error while writing file from stream in globSource`;
      }
    };
    exports.WriteFileFromStreamError = WriteFileFromStreamError2;
  }
});

// ../errors/dist/InvalidTOTPTokenError.js
var require_InvalidTOTPTokenError = __commonJS({
  "../errors/dist/InvalidTOTPTokenError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.InvalidTOTPTokenError = void 0;
    var FleekError_1 = require_FleekError();
    var InvalidTOTPTokenError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "InvalidTOTPTokenError";
        this.toString = () => "TOTP token is invalid.";
      }
    };
    exports.InvalidTOTPTokenError = InvalidTOTPTokenError;
  }
});

// ../errors/dist/InvalidRecoveryCodeError.js
var require_InvalidRecoveryCodeError = __commonJS({
  "../errors/dist/InvalidRecoveryCodeError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.InvalidRecoveryCodeError = void 0;
    var FleekError_1 = require_FleekError();
    var InvalidRecoveryCodeError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "InvalidRecoveryCodeError";
        this.toString = () => "Recovery code is invalid.";
      }
    };
    exports.InvalidRecoveryCodeError = InvalidRecoveryCodeError;
  }
});

// ../errors/dist/MissingTwoFactorProtectionCredentialsError.js
var require_MissingTwoFactorProtectionCredentialsError = __commonJS({
  "../errors/dist/MissingTwoFactorProtectionCredentialsError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MissingTwoFactorProtectionCredentialsError = void 0;
    var FleekError_1 = require_FleekError();
    var MissingTwoFactorProtectionCredentialsError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "MissingTwoFactorProtectionCredentialsError";
        this.toString = () => "Missing two factor protection credentials. Either a token or a recovery key should be provided.";
      }
    };
    exports.MissingTwoFactorProtectionCredentialsError = MissingTwoFactorProtectionCredentialsError;
  }
});

// ../errors/dist/DeploymentInProgressError.js
var require_DeploymentInProgressError = __commonJS({
  "../errors/dist/DeploymentInProgressError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DeploymentInProgressError = void 0;
    var FleekError_1 = require_FleekError();
    var DeploymentInProgressError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "DeploymentInProgressError";
        this.toString = () => "Deployment is already in progress.";
      }
    };
    exports.DeploymentInProgressError = DeploymentInProgressError;
  }
});

// ../errors/dist/PullzoneNotFoundForZoneIdError.js
var require_PullzoneNotFoundForZoneIdError = __commonJS({
  "../errors/dist/PullzoneNotFoundForZoneIdError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PullzoneNotFoundForZoneIdError = void 0;
    var FleekError_1 = require_FleekError();
    var PullzoneNotFoundForZoneIdError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "PullzoneNotFoundForZoneIdError";
        this.toString = () => {
          return `The pullzone is not found for zone id: ${this.data.id}`;
        };
      }
    };
    exports.PullzoneNotFoundForZoneIdError = PullzoneNotFoundForZoneIdError;
  }
});

// ../errors/dist/RecoveryCodeFailedToEncryptError.js
var require_RecoveryCodeFailedToEncryptError = __commonJS({
  "../errors/dist/RecoveryCodeFailedToEncryptError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.RecoveryCodeFailedToEncryptError = void 0;
    var FleekError_1 = require_FleekError();
    var RecoveryCodeFailedToEncryptError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "RecoveryCodeFailedToEncryptError";
        this.toString = () => "Failed to encrypt recovery code.";
      }
    };
    exports.RecoveryCodeFailedToEncryptError = RecoveryCodeFailedToEncryptError;
  }
});

// ../errors/dist/RecoveryCodeFailedToDecryptError.js
var require_RecoveryCodeFailedToDecryptError = __commonJS({
  "../errors/dist/RecoveryCodeFailedToDecryptError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.RecoveryCodeFailedToDecryptError = void 0;
    var FleekError_1 = require_FleekError();
    var RecoveryCodeFailedToDecryptError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "RecoveryCodeFailedToDecryptError";
        this.toString = () => "Failed to decrypt recovery code.";
      }
    };
    exports.RecoveryCodeFailedToDecryptError = RecoveryCodeFailedToDecryptError;
  }
});

// ../errors/dist/PermissionGroupNotFoundError.js
var require_PermissionGroupNotFoundError = __commonJS({
  "../errors/dist/PermissionGroupNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PermissionGroupNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var PermissionGroupNotFoundError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "PermissionGroupNotFoundError";
        this.toString = () => "Permission group not found";
      }
    };
    exports.PermissionGroupNotFoundError = PermissionGroupNotFoundError;
  }
});

// ../errors/dist/PermissionScopeError.js
var require_PermissionScopeError = __commonJS({
  "../errors/dist/PermissionScopeError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PermissionScopeError = void 0;
    var FleekError_1 = require_FleekError();
    var PermissionScopeError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "PermissionScopeError";
        this.toString = () => `Permission scope ${this.data.scope} doesn't exist.`;
      }
    };
    exports.PermissionScopeError = PermissionScopeError;
  }
});

// ../errors/dist/InvalidAdminAccessTokenError.js
var require_InvalidAdminAccessTokenError = __commonJS({
  "../errors/dist/InvalidAdminAccessTokenError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.InvalidAdminAccessTokenError = void 0;
    var FleekError_1 = require_FleekError();
    var InvalidAdminAccessTokenError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "InvalidAdminAccessTokenError";
        this.toString = () => "Admin access token is invalid.";
      }
    };
    exports.InvalidAdminAccessTokenError = InvalidAdminAccessTokenError;
  }
});

// ../errors/dist/MissingExpectedDataError.js
var require_MissingExpectedDataError = __commonJS({
  "../errors/dist/MissingExpectedDataError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MissingExpectedDataError = void 0;
    var FleekError_1 = require_FleekError();
    var MissingExpectedDataError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "MissingExpectedDataError";
        this.toString = () => "Oops! This is embarassing but the app is missing important data. Please report this issue to the team.";
      }
    };
    exports.MissingExpectedDataError = MissingExpectedDataError;
  }
});

// ../errors/dist/EnvNotSetError.js
var require_EnvNotSetError = __commonJS({
  "../errors/dist/EnvNotSetError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.EnvNotSetError = void 0;
    var FleekError_1 = require_FleekError();
    var EnvNotSetError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "EnvNotSetError";
        this.toString = () => this.data ? `Environment variable "${this.data}" is not set.` : `Missing the defined object key pair values.`;
      }
    };
    exports.EnvNotSetError = EnvNotSetError;
  }
});

// ../errors/dist/GitSecretsFailedToEncryptError.js
var require_GitSecretsFailedToEncryptError = __commonJS({
  "../errors/dist/GitSecretsFailedToEncryptError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.GitSecretsFailedToEncryptError = void 0;
    var FleekError_1 = require_FleekError();
    var GitSecretsFailedToEncryptError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "GitSecretsFailedToEncryptError";
        this.toString = () => "Failed to encrypt Git Secrets.";
      }
    };
    exports.GitSecretsFailedToEncryptError = GitSecretsFailedToEncryptError;
  }
});

// ../errors/dist/GitConfigFailedToParseError.js
var require_GitConfigFailedToParseError = __commonJS({
  "../errors/dist/GitConfigFailedToParseError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.GitConfigFailedToParseError = void 0;
    var FleekError_1 = require_FleekError();
    var GitConfigFailedToParseError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "GitSecretsFailedToEncryptError";
        this.toString = () => "Failed to parse Git Configs.";
      }
    };
    exports.GitConfigFailedToParseError = GitConfigFailedToParseError;
  }
});

// ../errors/dist/PathIsNotAFileError.js
var require_PathIsNotAFileError = __commonJS({
  "../errors/dist/PathIsNotAFileError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PathIsNotAFileError = void 0;
    var FleekError_1 = require_FleekError();
    var PathIsNotAFileError2 = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "PathIsNotAFileError";
        this.toString = () => {
          return `Given path ${this.data.path} is not a file.`;
        };
      }
    };
    exports.PathIsNotAFileError = PathIsNotAFileError2;
  }
});

// ../errors/dist/FleekFunctionBundlingFailedError.js
var require_FleekFunctionBundlingFailedError = __commonJS({
  "../errors/dist/FleekFunctionBundlingFailedError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.FleekFunctionBundlingFailedError = void 0;
    var FleekError_1 = require_FleekError();
    var FleekFunctionBundlingFailedError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "FleekFunctionBundlingFailedError";
        this.toString = () => {
          return `Bundle creation failed. For information on supported packages, please consult our documentation.
Error: ${this.data.error}`;
        };
      }
    };
    exports.FleekFunctionBundlingFailedError = FleekFunctionBundlingFailedError;
  }
});

// ../errors/dist/GitIntegrationNotFoundError.js
var require_GitIntegrationNotFoundError = __commonJS({
  "../errors/dist/GitIntegrationNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.GitIntegrationNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var GitIntegrationNotFoundError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "GitIntegrationNotFoundError";
        this.toString = () => {
          let infix = "";
          if ("siteId" in this.data) {
            infix = `for site ${this.data.siteId}`;
          } else if ("id" in this.data) {
            infix = `with id ${this.data.id}`;
          }
          return `Git Integration ${infix} not found`;
        };
      }
    };
    exports.GitIntegrationNotFoundError = GitIntegrationNotFoundError;
  }
});

// ../errors/dist/GitProviderNotFoundError.js
var require_GitProviderNotFoundError = __commonJS({
  "../errors/dist/GitProviderNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.GitProviderNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var GitProviderNotFoundError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "GitProviderNotFoundError";
        this.toString = () => {
          return `No Git Provider found with id: ${this.data.providerId}`;
        };
      }
    };
    exports.GitProviderNotFoundError = GitProviderNotFoundError;
  }
});

// ../errors/dist/ExpectedOneOfValuesError.js
var require_ExpectedOneOfValuesError = __commonJS({
  "../errors/dist/ExpectedOneOfValuesError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ExpectedOneOfValuesError = void 0;
    var FleekError_1 = require_FleekError();
    var ExpectedOneOfValuesError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "ExpectedOneOfValuesError";
        this.toString = () => `Expected one of ${this.data.expectedValues.join(", ")} but got ${this.data.receivedValue}`;
      }
    };
    exports.ExpectedOneOfValuesError = ExpectedOneOfValuesError;
  }
});

// ../errors/dist/InvalidJSONFormat.js
var require_InvalidJSONFormat = __commonJS({
  "../errors/dist/InvalidJSONFormat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.InvalidJSONFormat = void 0;
    var FleekError_1 = require_FleekError();
    var InvalidJSONFormat = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "InvalidJSONFormat";
        this.toString = () => `Invalid JSON format.`;
      }
    };
    exports.InvalidJSONFormat = InvalidJSONFormat;
  }
});

// ../errors/dist/StorageUploadFileCountQuotaExceededError.js
var require_StorageUploadFileCountQuotaExceededError = __commonJS({
  "../errors/dist/StorageUploadFileCountQuotaExceededError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.StorageUploadFileCountQuotaExceededError = void 0;
    var FleekError_1 = require_FleekError();
    var StorageUploadFileCountQuotaExceededError2 = class extends FleekError_1.FleekError {
      constructor() {
        super({});
        this.name = "StorageUploadFileCountQuotaExceededError";
        this.toString = () => `You have exceeded your storage upload quota for total number of files for the last 24 hours.`;
      }
    };
    exports.StorageUploadFileCountQuotaExceededError = StorageUploadFileCountQuotaExceededError2;
  }
});

// ../errors/dist/StorageUploadTotalSizeQuotaExceededError.js
var require_StorageUploadTotalSizeQuotaExceededError = __commonJS({
  "../errors/dist/StorageUploadTotalSizeQuotaExceededError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.StorageUploadTotalSizeQuotaExceededError = void 0;
    var FleekError_1 = require_FleekError();
    var StorageUploadTotalSizeQuotaExceededError2 = class extends FleekError_1.FleekError {
      constructor() {
        super({});
        this.name = "StorageUploadTotalSizeQuotaExceededError";
        this.toString = () => `You have exceeded your storage upload quota for total size for the last 24 hours.`;
      }
    };
    exports.StorageUploadTotalSizeQuotaExceededError = StorageUploadTotalSizeQuotaExceededError2;
  }
});

// ../errors/dist/GitProviderNotSupportedError.js
var require_GitProviderNotSupportedError = __commonJS({
  "../errors/dist/GitProviderNotSupportedError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.GitProviderNotSupportedError = void 0;
    var FleekError_1 = require_FleekError();
    var GitProviderNotSupportedError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "GitProviderNotSupportedError";
        this.toString = () => `Git provider: ${this.data.provider} not Supported`;
      }
    };
    exports.GitProviderNotSupportedError = GitProviderNotSupportedError;
  }
});

// ../errors/dist/GitProviderNotAuthorizedError.js
var require_GitProviderNotAuthorizedError = __commonJS({
  "../errors/dist/GitProviderNotAuthorizedError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.GitProviderNotAuthorizedError = void 0;
    var FleekError_1 = require_FleekError();
    var GitProviderNotAuthorizedError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "GitProviderNotAuthorizedError";
        this.toString = () => `The user has not authorized the Git provider: ${this.data.provider}`;
      }
    };
    exports.GitProviderNotAuthorizedError = GitProviderNotAuthorizedError;
  }
});

// ../errors/dist/GitAccessTokenInvalidError.js
var require_GitAccessTokenInvalidError = __commonJS({
  "../errors/dist/GitAccessTokenInvalidError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.GitAccessTokenInvalidError = void 0;
    var FleekError_1 = require_FleekError();
    var GitAccessTokenInvalidError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "GitAccessTokenInvalidError";
        this.toString = () => {
          return "The git access token for the user is invalid";
        };
      }
    };
    exports.GitAccessTokenInvalidError = GitAccessTokenInvalidError;
  }
});

// ../errors/dist/QueuedDeploymentsLimitError.js
var require_QueuedDeploymentsLimitError = __commonJS({
  "../errors/dist/QueuedDeploymentsLimitError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.QueuedDeploymentsLimitError = void 0;
    var FleekError_1 = require_FleekError();
    var QueuedDeploymentsLimitError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "QueuedDeploymentsLimitError";
        this.toString = () => `You've reached the limit of ${this.data.limit} queued deployments.`;
      }
    };
    exports.QueuedDeploymentsLimitError = QueuedDeploymentsLimitError;
  }
});

// ../errors/dist/GitIntegrationInstallationConflictError.js
var require_GitIntegrationInstallationConflictError = __commonJS({
  "../errors/dist/GitIntegrationInstallationConflictError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.GitIntegrationInstallationConflictError = void 0;
    var FleekError_1 = require_FleekError();
    var GitIntegrationInstallationConflictError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "GitIntegrationInstallationConflictError";
        this.toString = () => `The Git Integration installation for this provider already exists in this project`;
      }
    };
    exports.GitIntegrationInstallationConflictError = GitIntegrationInstallationConflictError;
  }
});

// ../errors/dist/GitLinkMultipleAccountError.js
var require_GitLinkMultipleAccountError = __commonJS({
  "../errors/dist/GitLinkMultipleAccountError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.GitLinkMultipleAccountError = void 0;
    var FleekError_1 = require_FleekError();
    var GitLinkMultipleAccountError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "GitLinkMultipleAccountError";
        this.toString = () => `Oops! You already have a Git profile linked to your Fleek account. We don't allow multiple connections`;
      }
    };
    exports.GitLinkMultipleAccountError = GitLinkMultipleAccountError;
  }
});

// ../errors/dist/GitRepoByNameAndOwnerNotFoundError.js
var require_GitRepoByNameAndOwnerNotFoundError = __commonJS({
  "../errors/dist/GitRepoByNameAndOwnerNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.GitRepoByNameAndOwnerNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var GitRepoByNameAndOwnerNotFoundError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "GitRepoByNameAndOwnerNotFoundError";
        this.toString = () => `Git repo "${this.data.owner}/${this.data.repo}" not found`;
      }
    };
    exports.GitRepoByNameAndOwnerNotFoundError = GitRepoByNameAndOwnerNotFoundError;
  }
});

// ../errors/dist/GitAccessTokenNotFoundError.js
var require_GitAccessTokenNotFoundError = __commonJS({
  "../errors/dist/GitAccessTokenNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.GitAccessTokenNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var GitAccessTokenNotFoundError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "GitAccessTokenNotFoundError";
        this.toString = () => {
          return "The git access token for the user is not found";
        };
      }
    };
    exports.GitAccessTokenNotFoundError = GitAccessTokenNotFoundError;
  }
});

// ../errors/dist/FolderNotFoundError.js
var require_FolderNotFoundError = __commonJS({
  "../errors/dist/FolderNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.FolderNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var FolderNotFoundError2 = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "FolderNotFoundError";
        this.toString = () => `Folder was not found.`;
      }
    };
    exports.FolderNotFoundError = FolderNotFoundError2;
  }
});

// ../errors/dist/FolderAlreadyExistsError.js
var require_FolderAlreadyExistsError = __commonJS({
  "../errors/dist/FolderAlreadyExistsError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.FolderAlreadyExistsError = void 0;
    var FleekError_1 = require_FleekError();
    var FolderAlreadyExistsError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "FolderAlreadyExistsError";
        this.toString = () => `Folder ${this.data.folder.name} already exists in ${this.data.folder.parentFolderId ? "parent" : "root project"} folder.`;
      }
    };
    exports.FolderAlreadyExistsError = FolderAlreadyExistsError;
  }
});

// ../errors/dist/PinsNotFoundError.js
var require_PinsNotFoundError = __commonJS({
  "../errors/dist/PinsNotFoundError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PinsNotFoundError = void 0;
    var FleekError_1 = require_FleekError();
    var PinsNotFoundError2 = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "PinsNotFoundError";
        this.toString = () => {
          return "No pins found.";
        };
      }
    };
    exports.PinsNotFoundError = PinsNotFoundError2;
  }
});

// ../errors/dist/SiteCreationFailedError.js
var require_SiteCreationFailedError = __commonJS({
  "../errors/dist/SiteCreationFailedError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SiteCreationFailedError = void 0;
    var FleekError_1 = require_FleekError();
    var SiteCreationFailedError2 = class extends FleekError_1.FleekError {
      constructor() {
        super({});
        this.name = "SiteCreationFailedError";
        this.toString = () => `Site creation failed.`;
      }
    };
    exports.SiteCreationFailedError = SiteCreationFailedError2;
  }
});

// ../errors/dist/FleekFunctionInvalidWasmCodeError.js
var require_FleekFunctionInvalidWasmCodeError = __commonJS({
  "../errors/dist/FleekFunctionInvalidWasmCodeError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.FleekFunctionInvalidWasmCodeError = void 0;
    var FleekError_1 = require_FleekError();
    var FleekFunctionInvalidWasmCodeError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "FleekFunctionInvalidWasmCodeError";
        this.toString = () => {
          return `Fleek function encountered corrupt or invalid WASM code.`;
        };
      }
    };
    exports.FleekFunctionInvalidWasmCodeError = FleekFunctionInvalidWasmCodeError;
  }
});

// ../errors/dist/FleekFunctionWasmEncryptionFailedError.js
var require_FleekFunctionWasmEncryptionFailedError = __commonJS({
  "../errors/dist/FleekFunctionWasmEncryptionFailedError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.FleekFunctionWasmEncryptionFailedError = void 0;
    var FleekError_1 = require_FleekError();
    var FleekFunctionWasmEncryptionFailedError = class extends FleekError_1.FleekError {
      constructor() {
        super(...arguments);
        this.name = "FleekFunctionWasmEncryptionFailedError";
        this.toString = () => {
          return `Unable to encrypt WASM code for Fleek function`;
        };
      }
    };
    exports.FleekFunctionWasmEncryptionFailedError = FleekFunctionWasmEncryptionFailedError;
  }
});

// ../errors/dist/UploadProxyStoreAsCarError.js
var require_UploadProxyStoreAsCarError = __commonJS({
  "../errors/dist/UploadProxyStoreAsCarError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.UploadProxyStoreAsCarError = void 0;
    var FleekError_1 = require_FleekError();
    var UploadProxyStoreAsCarError2 = class extends FleekError_1.FleekError {
      constructor() {
        super({});
        this.name = "UploadProxyStoreAsCarError";
        this.toString = () => `Failed to Store as a CAR file.`;
      }
    };
    exports.UploadProxyStoreAsCarError = UploadProxyStoreAsCarError2;
  }
});

// ../errors/dist/UploadProxyUploadFileError.js
var require_UploadProxyUploadFileError = __commonJS({
  "../errors/dist/UploadProxyUploadFileError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.UploadProxyUploadFileError = void 0;
    var FleekError_1 = require_FleekError();
    var UploadProxyUploadFileError2 = class extends FleekError_1.FleekError {
      constructor() {
        super({});
        this.name = "UploadProxyUploadFileError";
        this.toString = () => `Failed to Upload file.`;
      }
    };
    exports.UploadProxyUploadFileError = UploadProxyUploadFileError2;
  }
});

// ../errors/dist/index.js
var require_dist = __commonJS({
  "../errors/dist/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.EnsRecordInPendingStateError = exports.EnsNameInvalidError = exports.EnsRecordAlreadyExistsInProjectError = exports.EnsRecordNotFoundError = exports.ApplicationNameInvalidError = exports.ApplicationNotFoundError = exports.ApplicationsNotFoundError = exports.ApplicationAlreadyExistsError = exports.ApplicationWhitelistDomainDuplicityError = exports.FleekConfigMissingFileError = exports.FleekConfigInvalidContentError = exports.UnauthorizedError = exports.DomainZoneInvalidTypeError = exports.DomainNotFoundUnderPullzoneError = exports.DomainZoneInPendingStateError = exports.DomainZoneHasDependentsError = exports.DomainZoneNotFoundError = exports.UnauthenticatedError = exports.VerificationSessionAlreadyExistsError = exports.PublicKeyAlreadyExistsError = exports.ProjectInvalidNameError = exports.ProjectHasDependentsError = exports.ProjectsNotFoundError = exports.ProjectNotFoundError = exports.UserAlreadyExistsError = exports.UserNotFoundError = exports.GithubAppInstallationNotFoundError = exports.ProjectMembershipNotFoundError = exports.AuthorizationError = exports.SdkRequiredNodeRuntimeError = exports.StorageIpfsUploadFailedError = exports.IpnsRecordsForSiteLimitError = exports.IpnsFailToDecryptKeyError = exports.IpnsRecordsNotFoundError = exports.IpnsRecordNotFoundError = exports.SiteNotDeployedError = exports.SiteHasNoSourceProviderError = exports.SiteHasDependentsError = exports.SiteDeploymentNotFoundError = exports.SiteAlreadyExistsError = exports.SitesNotFoundError = exports.SiteNotFoundError = exports.UnknownError = exports.DomainHostnameInvalidError = exports.DomainInPendingStateError = exports.DomainAlreadyExistsInProjectError = exports.DomainsNotFoundError = exports.DomainNotFoundError = exports.BunnyPullZoneNotFoundError = exports.FleekError = void 0;
    exports.EnsNameContentHashUndefinedError = exports.EnsNameContentHashCodecMistmatchError = exports.UserInBlocklistError = exports.ValidationError = exports.InvalidCidError = exports.UserHasNoAccessToFeatureError = exports.MaintenanceError = exports.FleekFunctionSlugNotValidError = exports.FleekFunctionStatusNotValidError = exports.FleekFunctionNameNotValidError = exports.FleekFunctionPathNotValidError = exports.FleekFunctionsNotFoundError = exports.FleekFunctionDeploymentNotFoundError = exports.FleekFunctionNotFoundError = exports.FleekFunctionAlreadyExistsError = exports.PathIsNotADirectoryError = exports.UploadedS3KeyNotFoundError = exports.ProjectMembershipNoOwnersError = exports.ProjectMembershipAlreadyExistError = exports.ProjectInvitationAlreadyExistError = exports.MigrationRequestInPendingStateError = exports.MigrationRequestNotFoundError = exports.MigrationRequestsAlreadyExistError = exports.MigrationTokenInvalidError = exports.InvitationNotFoundError = exports.IpfsGatewayContentUnreachableError = exports.InvalidDeploymentTriggerError = exports.SiteDeploymentNotReleasedError = exports.UnstoppableDeploymentError = exports.PinAlreadyExistsInProjectError = exports.PinNotFoundError = exports.SecretFailToEncryptError = exports.SecretKeyAlreadyExistsError = exports.SecretVisibilityAlreadyEncryptedError = exports.SecretNotFoundError = exports.SecretGroupNotFoundError = exports.ProjectMembershipHasInefficientRoleError = exports.TemplateDeploymentNotFoundError = exports.TemplateCategoryNotFoundError = exports.SiteFrameworkNotFoundError = exports.SiteFrameworkAlreadyExistsError = exports.UserHasNoAccessToAnotherUserError = exports.TemplateNotFoundError = exports.TemplateAlreadyExistsError = exports.PrivateGatewaysNotFoundError = exports.PrivateGatewayNameInvalidError = exports.PrivateGatewayAlreadyExistsError = exports.PrivateGatewayNotFoundError = exports.PersonalAccessTokenNotFoundError = exports.InvalidPersonalAccessTokenError = void 0;
    exports.UploadProxyUploadFileError = exports.UploadProxyStoreAsCarError = exports.FleekFunctionWasmEncryptionFailedError = exports.FleekFunctionInvalidWasmCodeError = exports.SiteCreationFailedError = exports.PinsNotFoundError = exports.FolderAlreadyExistsError = exports.FolderNotFoundError = exports.GitAccessTokenNotFoundError = exports.GitRepoByNameAndOwnerNotFoundError = exports.GitLinkMultipleAccountError = exports.GitIntegrationInstallationConflictError = exports.QueuedDeploymentsLimitError = exports.GitAccessTokenInvalidError = exports.GitProviderNotAuthorizedError = exports.GitProviderNotSupportedError = exports.StorageUploadTotalSizeQuotaExceededError = exports.StorageUploadFileCountQuotaExceededError = exports.InvalidJSONFormat = exports.ExpectedOneOfValuesError = exports.GitProviderNotFoundError = exports.GitIntegrationNotFoundError = exports.FleekFunctionBundlingFailedError = exports.PathIsNotAFileError = exports.GitConfigFailedToParseError = exports.GitSecretsFailedToEncryptError = exports.EnvNotSetError = exports.MissingExpectedDataError = exports.InvalidAdminAccessTokenError = exports.PermissionScopeError = exports.PermissionGroupNotFoundError = exports.RecoveryCodeFailedToDecryptError = exports.RecoveryCodeFailedToEncryptError = exports.PullzoneNotFoundForZoneIdError = exports.DeploymentInProgressError = exports.MissingTwoFactorProtectionCredentialsError = exports.InvalidRecoveryCodeError = exports.InvalidTOTPTokenError = exports.WriteFileFromStreamError = exports.RecoveryCodesAlreadyExistsError = exports.TwoFactorSecretKeyFailedToDecryptError = exports.UserSecretKeyNotFoundError = exports.UserSecretKeyAlreadyExistsError = exports.TwoFactorSecretKeyFailedToEncryptError = exports.DnsConfigNotFoundError = exports.DnsConfigAlreadyExistsError = void 0;
    var FleekError_1 = require_FleekError();
    Object.defineProperty(exports, "FleekError", { enumerable: true, get: function() {
      return FleekError_1.FleekError;
    } });
    var BunnyPullZoneNotFoundError_1 = require_BunnyPullZoneNotFoundError();
    Object.defineProperty(exports, "BunnyPullZoneNotFoundError", { enumerable: true, get: function() {
      return BunnyPullZoneNotFoundError_1.BunnyPullZoneNotFoundError;
    } });
    var DomainNotFoundError_1 = require_DomainNotFoundError();
    Object.defineProperty(exports, "DomainNotFoundError", { enumerable: true, get: function() {
      return DomainNotFoundError_1.DomainNotFoundError;
    } });
    var DomainsNotFoundError_1 = require_DomainsNotFoundError();
    Object.defineProperty(exports, "DomainsNotFoundError", { enumerable: true, get: function() {
      return DomainsNotFoundError_1.DomainsNotFoundError;
    } });
    var DomainAlreadyExistsInProjectError_1 = require_DomainAlreadyExistsInProjectError();
    Object.defineProperty(exports, "DomainAlreadyExistsInProjectError", { enumerable: true, get: function() {
      return DomainAlreadyExistsInProjectError_1.DomainAlreadyExistsInProjectError;
    } });
    var DomainInPendingStateError_1 = require_DomainInPendingStateError();
    Object.defineProperty(exports, "DomainInPendingStateError", { enumerable: true, get: function() {
      return DomainInPendingStateError_1.DomainInPendingStateError;
    } });
    var DomainHostnameInvalidError_1 = require_DomainHostnameInvalidError();
    Object.defineProperty(exports, "DomainHostnameInvalidError", { enumerable: true, get: function() {
      return DomainHostnameInvalidError_1.DomainHostnameInvalidError;
    } });
    var UnknownError_1 = require_UnknownError();
    Object.defineProperty(exports, "UnknownError", { enumerable: true, get: function() {
      return UnknownError_1.UnknownError;
    } });
    var SiteNotFoundError_1 = require_SiteNotFoundError();
    Object.defineProperty(exports, "SiteNotFoundError", { enumerable: true, get: function() {
      return SiteNotFoundError_1.SiteNotFoundError;
    } });
    var SitesNotFoundError_1 = require_SitesNotFoundError();
    Object.defineProperty(exports, "SitesNotFoundError", { enumerable: true, get: function() {
      return SitesNotFoundError_1.SitesNotFoundError;
    } });
    var SiteAlreadyExistsError_1 = require_SiteAlreadyExistsError();
    Object.defineProperty(exports, "SiteAlreadyExistsError", { enumerable: true, get: function() {
      return SiteAlreadyExistsError_1.SiteAlreadyExistsError;
    } });
    var SiteDeploymentNotFoundError_1 = require_SiteDeploymentNotFoundError();
    Object.defineProperty(exports, "SiteDeploymentNotFoundError", { enumerable: true, get: function() {
      return SiteDeploymentNotFoundError_1.SiteDeploymentNotFoundError;
    } });
    var SiteHasDependentsError_1 = require_SiteHasDependentsError();
    Object.defineProperty(exports, "SiteHasDependentsError", { enumerable: true, get: function() {
      return SiteHasDependentsError_1.SiteHasDependentsError;
    } });
    var SiteHasNoSourceProviderError_1 = require_SiteHasNoSourceProviderError();
    Object.defineProperty(exports, "SiteHasNoSourceProviderError", { enumerable: true, get: function() {
      return SiteHasNoSourceProviderError_1.SiteHasNoSourceProviderError;
    } });
    var SiteNotDeployedError_1 = require_SiteNotDeployedError();
    Object.defineProperty(exports, "SiteNotDeployedError", { enumerable: true, get: function() {
      return SiteNotDeployedError_1.SiteNotDeployedError;
    } });
    var IpnsRecordNotFoundError_1 = require_IpnsRecordNotFoundError();
    Object.defineProperty(exports, "IpnsRecordNotFoundError", { enumerable: true, get: function() {
      return IpnsRecordNotFoundError_1.IpnsRecordNotFoundError;
    } });
    var IpnsRecordsNotFoundError_1 = require_IpnsRecordsNotFoundError();
    Object.defineProperty(exports, "IpnsRecordsNotFoundError", { enumerable: true, get: function() {
      return IpnsRecordsNotFoundError_1.IpnsRecordsNotFoundError;
    } });
    var IpnsFailToDecryptKeyError_1 = require_IpnsFailToDecryptKeyError();
    Object.defineProperty(exports, "IpnsFailToDecryptKeyError", { enumerable: true, get: function() {
      return IpnsFailToDecryptKeyError_1.IpnsFailToDecryptKeyError;
    } });
    var IpnsRecordsForSiteLimitError_1 = require_IpnsRecordsForSiteLimitError();
    Object.defineProperty(exports, "IpnsRecordsForSiteLimitError", { enumerable: true, get: function() {
      return IpnsRecordsForSiteLimitError_1.IpnsRecordsForSiteLimitError;
    } });
    var StorageIpfsUploadFailedError_1 = require_StorageIpfsUploadFailedError();
    Object.defineProperty(exports, "StorageIpfsUploadFailedError", { enumerable: true, get: function() {
      return StorageIpfsUploadFailedError_1.StorageIpfsUploadFailedError;
    } });
    var SdkRequiredNodeRuntimeError_1 = require_SdkRequiredNodeRuntimeError();
    Object.defineProperty(exports, "SdkRequiredNodeRuntimeError", { enumerable: true, get: function() {
      return SdkRequiredNodeRuntimeError_1.SdkRequiredNodeRuntimeError;
    } });
    var AuthorizationError_1 = require_AuthorizationError();
    Object.defineProperty(exports, "AuthorizationError", { enumerable: true, get: function() {
      return AuthorizationError_1.AuthorizationError;
    } });
    var ProjectMembershipNotFoundError_1 = require_ProjectMembershipNotFoundError();
    Object.defineProperty(exports, "ProjectMembershipNotFoundError", { enumerable: true, get: function() {
      return ProjectMembershipNotFoundError_1.ProjectMembershipNotFoundError;
    } });
    var GithubAppInstallationNotFoundError_1 = require_GithubAppInstallationNotFoundError();
    Object.defineProperty(exports, "GithubAppInstallationNotFoundError", { enumerable: true, get: function() {
      return GithubAppInstallationNotFoundError_1.GithubAppInstallationNotFoundError;
    } });
    var UserNotFoundError_1 = require_UserNotFoundError();
    Object.defineProperty(exports, "UserNotFoundError", { enumerable: true, get: function() {
      return UserNotFoundError_1.UserNotFoundError;
    } });
    var UserAlreadyExistsError_1 = require_UserAlreadyExistsError();
    Object.defineProperty(exports, "UserAlreadyExistsError", { enumerable: true, get: function() {
      return UserAlreadyExistsError_1.UserAlreadyExistsError;
    } });
    var ProjectNotFoundError_1 = require_ProjectNotFoundError();
    Object.defineProperty(exports, "ProjectNotFoundError", { enumerable: true, get: function() {
      return ProjectNotFoundError_1.ProjectNotFoundError;
    } });
    var ProjectsNotFoundError_1 = require_ProjectsNotFoundError();
    Object.defineProperty(exports, "ProjectsNotFoundError", { enumerable: true, get: function() {
      return ProjectsNotFoundError_1.ProjectsNotFoundError;
    } });
    var ProjectHasDependentsError_1 = require_ProjectHasDependentsError();
    Object.defineProperty(exports, "ProjectHasDependentsError", { enumerable: true, get: function() {
      return ProjectHasDependentsError_1.ProjectHasDependentsError;
    } });
    var ProjectInvalidNameError_1 = require_ProjectInvalidNameError();
    Object.defineProperty(exports, "ProjectInvalidNameError", { enumerable: true, get: function() {
      return ProjectInvalidNameError_1.ProjectInvalidNameError;
    } });
    var PublicKeyAlreadyExistsError_1 = require_PublicKeyAlreadyExistsError();
    Object.defineProperty(exports, "PublicKeyAlreadyExistsError", { enumerable: true, get: function() {
      return PublicKeyAlreadyExistsError_1.PublicKeyAlreadyExistsError;
    } });
    var VerificationSessionAlreadyExistsError_1 = require_VerificationSessionAlreadyExistsError();
    Object.defineProperty(exports, "VerificationSessionAlreadyExistsError", { enumerable: true, get: function() {
      return VerificationSessionAlreadyExistsError_1.VerificationSessionAlreadyExistsError;
    } });
    var UnauthenticatedError_1 = require_UnauthenticatedError();
    Object.defineProperty(exports, "UnauthenticatedError", { enumerable: true, get: function() {
      return UnauthenticatedError_1.UnauthenticatedError;
    } });
    var DomainZoneNotFoundError_1 = require_DomainZoneNotFoundError();
    Object.defineProperty(exports, "DomainZoneNotFoundError", { enumerable: true, get: function() {
      return DomainZoneNotFoundError_1.DomainZoneNotFoundError;
    } });
    var DomainZoneHasDependentsError_1 = require_DomainZoneHasDependentsError();
    Object.defineProperty(exports, "DomainZoneHasDependentsError", { enumerable: true, get: function() {
      return DomainZoneHasDependentsError_1.DomainZoneHasDependentsError;
    } });
    var DomainZoneInPendingStateError_1 = require_DomainZoneInPendingStateError();
    Object.defineProperty(exports, "DomainZoneInPendingStateError", { enumerable: true, get: function() {
      return DomainZoneInPendingStateError_1.DomainZoneInPendingStateError;
    } });
    var DomainNotFoundUnderPullzoneError_1 = require_DomainNotFoundUnderPullzoneError();
    Object.defineProperty(exports, "DomainNotFoundUnderPullzoneError", { enumerable: true, get: function() {
      return DomainNotFoundUnderPullzoneError_1.DomainNotFoundUnderPullzoneError;
    } });
    var DomainZoneInvalidTypeError_1 = require_DomainZoneInvalidTypeError();
    Object.defineProperty(exports, "DomainZoneInvalidTypeError", { enumerable: true, get: function() {
      return DomainZoneInvalidTypeError_1.DomainZoneInvalidTypeError;
    } });
    var UnauthorizedError_1 = require_UnauthorizedError();
    Object.defineProperty(exports, "UnauthorizedError", { enumerable: true, get: function() {
      return UnauthorizedError_1.UnauthorizedError;
    } });
    var FleekConfigInvalidContentError_1 = require_FleekConfigInvalidContentError();
    Object.defineProperty(exports, "FleekConfigInvalidContentError", { enumerable: true, get: function() {
      return FleekConfigInvalidContentError_1.FleekConfigInvalidContentError;
    } });
    var FleekConfigMissingFileError_1 = require_FleekConfigMissingFileError();
    Object.defineProperty(exports, "FleekConfigMissingFileError", { enumerable: true, get: function() {
      return FleekConfigMissingFileError_1.FleekConfigMissingFileError;
    } });
    var ApplicationWhitelistDomainDuplicityError_1 = require_ApplicationWhitelistDomainDuplicityError();
    Object.defineProperty(exports, "ApplicationWhitelistDomainDuplicityError", { enumerable: true, get: function() {
      return ApplicationWhitelistDomainDuplicityError_1.ApplicationWhitelistDomainDuplicityError;
    } });
    var ApplicationAlreadyExistsError_1 = require_ApplicationAlreadyExistsError();
    Object.defineProperty(exports, "ApplicationAlreadyExistsError", { enumerable: true, get: function() {
      return ApplicationAlreadyExistsError_1.ApplicationAlreadyExistsError;
    } });
    var ApplicationsNotFoundError_1 = require_ApplicationsNotFoundError();
    Object.defineProperty(exports, "ApplicationsNotFoundError", { enumerable: true, get: function() {
      return ApplicationsNotFoundError_1.ApplicationsNotFoundError;
    } });
    var ApplicationNotFoundError_1 = require_ApplicationNotFoundError();
    Object.defineProperty(exports, "ApplicationNotFoundError", { enumerable: true, get: function() {
      return ApplicationNotFoundError_1.ApplicationNotFoundError;
    } });
    var ApplicationNameInvalidError_1 = require_ApplicationNameInvalidError();
    Object.defineProperty(exports, "ApplicationNameInvalidError", { enumerable: true, get: function() {
      return ApplicationNameInvalidError_1.ApplicationNameInvalidError;
    } });
    var EnsRecordNotFoundError_1 = require_EnsRecordNotFoundError();
    Object.defineProperty(exports, "EnsRecordNotFoundError", { enumerable: true, get: function() {
      return EnsRecordNotFoundError_1.EnsRecordNotFoundError;
    } });
    var EnsRecordAlreadyExistsInProjectError_1 = require_EnsRecordAlreadyExistsInProjectError();
    Object.defineProperty(exports, "EnsRecordAlreadyExistsInProjectError", { enumerable: true, get: function() {
      return EnsRecordAlreadyExistsInProjectError_1.EnsRecordAlreadyExistsInProjectError;
    } });
    var EnsNameInvalidError_1 = require_EnsNameInvalidError();
    Object.defineProperty(exports, "EnsNameInvalidError", { enumerable: true, get: function() {
      return EnsNameInvalidError_1.EnsNameInvalidError;
    } });
    var EnsRecordInPendingStateError_1 = require_EnsRecordInPendingStateError();
    Object.defineProperty(exports, "EnsRecordInPendingStateError", { enumerable: true, get: function() {
      return EnsRecordInPendingStateError_1.EnsRecordInPendingStateError;
    } });
    var InvalidPersonalAccessTokenError_1 = require_InvalidPersonalAccessTokenError();
    Object.defineProperty(exports, "InvalidPersonalAccessTokenError", { enumerable: true, get: function() {
      return InvalidPersonalAccessTokenError_1.InvalidPersonalAccessTokenError;
    } });
    var PersonalAccessTokenNotFoundError_1 = require_PersonalAccessTokenNotFoundError();
    Object.defineProperty(exports, "PersonalAccessTokenNotFoundError", { enumerable: true, get: function() {
      return PersonalAccessTokenNotFoundError_1.PersonalAccessTokenNotFoundError;
    } });
    var PrivateGatewayNotFoundError_1 = require_PrivateGatewayNotFoundError();
    Object.defineProperty(exports, "PrivateGatewayNotFoundError", { enumerable: true, get: function() {
      return PrivateGatewayNotFoundError_1.PrivateGatewayNotFoundError;
    } });
    var PrivateGatewayAlreadyExistsError_1 = require_PrivateGatewayAlreadyExistsError();
    Object.defineProperty(exports, "PrivateGatewayAlreadyExistsError", { enumerable: true, get: function() {
      return PrivateGatewayAlreadyExistsError_1.PrivateGatewayAlreadyExistsError;
    } });
    var PrivateGatewayNameInvalidError_1 = require_PrivateGatewayNameInvalidError();
    Object.defineProperty(exports, "PrivateGatewayNameInvalidError", { enumerable: true, get: function() {
      return PrivateGatewayNameInvalidError_1.PrivateGatewayNameInvalidError;
    } });
    var PrivateGatewaysNotFoundError_1 = require_PrivateGatewaysNotFoundError();
    Object.defineProperty(exports, "PrivateGatewaysNotFoundError", { enumerable: true, get: function() {
      return PrivateGatewaysNotFoundError_1.PrivateGatewaysNotFoundError;
    } });
    var TemplateAlreadyExistsError_1 = require_TemplateAlreadyExistsError();
    Object.defineProperty(exports, "TemplateAlreadyExistsError", { enumerable: true, get: function() {
      return TemplateAlreadyExistsError_1.TemplateAlreadyExistsError;
    } });
    var TemplateNotFoundError_1 = require_TemplateNotFoundError();
    Object.defineProperty(exports, "TemplateNotFoundError", { enumerable: true, get: function() {
      return TemplateNotFoundError_1.TemplateNotFoundError;
    } });
    var UserHasNoAccessToAnotherUserError_1 = require_UserHasNoAccessToAnotherUserError();
    Object.defineProperty(exports, "UserHasNoAccessToAnotherUserError", { enumerable: true, get: function() {
      return UserHasNoAccessToAnotherUserError_1.UserHasNoAccessToAnotherUserError;
    } });
    var SiteFrameworkAlreadyExistsError_1 = require_SiteFrameworkAlreadyExistsError();
    Object.defineProperty(exports, "SiteFrameworkAlreadyExistsError", { enumerable: true, get: function() {
      return SiteFrameworkAlreadyExistsError_1.SiteFrameworkAlreadyExistsError;
    } });
    var SiteFrameworkNotFoundError_1 = require_SiteFrameworkNotFoundError();
    Object.defineProperty(exports, "SiteFrameworkNotFoundError", { enumerable: true, get: function() {
      return SiteFrameworkNotFoundError_1.SiteFrameworkNotFoundError;
    } });
    var TemplateCategoryNotFoundError_1 = require_TemplateCategoryNotFoundError();
    Object.defineProperty(exports, "TemplateCategoryNotFoundError", { enumerable: true, get: function() {
      return TemplateCategoryNotFoundError_1.TemplateCategoryNotFoundError;
    } });
    var TemplateDeploymentNotFoundError_1 = require_TemplateDeploymentNotFoundError();
    Object.defineProperty(exports, "TemplateDeploymentNotFoundError", { enumerable: true, get: function() {
      return TemplateDeploymentNotFoundError_1.TemplateDeploymentNotFoundError;
    } });
    var ProjectMembershipHasInefficientRoleError_1 = require_ProjectMembershipHasInefficientRoleError();
    Object.defineProperty(exports, "ProjectMembershipHasInefficientRoleError", { enumerable: true, get: function() {
      return ProjectMembershipHasInefficientRoleError_1.ProjectMembershipHasInefficientRoleError;
    } });
    var SecretGroupNotFoundError_1 = require_SecretGroupNotFoundError();
    Object.defineProperty(exports, "SecretGroupNotFoundError", { enumerable: true, get: function() {
      return SecretGroupNotFoundError_1.SecretGroupNotFoundError;
    } });
    var SecretNotFoundError_1 = require_SecretNotFoundError();
    Object.defineProperty(exports, "SecretNotFoundError", { enumerable: true, get: function() {
      return SecretNotFoundError_1.SecretNotFoundError;
    } });
    var SecretVisibilityAlreadyEncryptedError_1 = require_SecretVisibilityAlreadyEncryptedError();
    Object.defineProperty(exports, "SecretVisibilityAlreadyEncryptedError", { enumerable: true, get: function() {
      return SecretVisibilityAlreadyEncryptedError_1.SecretVisibilityAlreadyEncryptedError;
    } });
    var SecretKeyAlreadyExistsError_1 = require_SecretKeyAlreadyExistsError();
    Object.defineProperty(exports, "SecretKeyAlreadyExistsError", { enumerable: true, get: function() {
      return SecretKeyAlreadyExistsError_1.SecretKeyAlreadyExistsError;
    } });
    var SecretFailToEncryptError_1 = require_SecretFailToEncryptError();
    Object.defineProperty(exports, "SecretFailToEncryptError", { enumerable: true, get: function() {
      return SecretFailToEncryptError_1.SecretFailToEncryptError;
    } });
    var PinNotFoundError_1 = require_PinNotFoundError();
    Object.defineProperty(exports, "PinNotFoundError", { enumerable: true, get: function() {
      return PinNotFoundError_1.PinNotFoundError;
    } });
    var PinAlreadyExistsInProjectError_1 = require_PinAlreadyExistsInProjectError();
    Object.defineProperty(exports, "PinAlreadyExistsInProjectError", { enumerable: true, get: function() {
      return PinAlreadyExistsInProjectError_1.PinAlreadyExistsInProjectError;
    } });
    var UnstoppableDeploymentError_1 = require_UnstoppableDeploymentError();
    Object.defineProperty(exports, "UnstoppableDeploymentError", { enumerable: true, get: function() {
      return UnstoppableDeploymentError_1.UnstoppableDeploymentError;
    } });
    var SiteDeploymentNotReleasedError_1 = require_SiteDeploymentNotReleasedError();
    Object.defineProperty(exports, "SiteDeploymentNotReleasedError", { enumerable: true, get: function() {
      return SiteDeploymentNotReleasedError_1.SiteDeploymentNotReleasedError;
    } });
    var InvalidDeploymentTriggerError_1 = require_InvalidDeploymentTriggerError();
    Object.defineProperty(exports, "InvalidDeploymentTriggerError", { enumerable: true, get: function() {
      return InvalidDeploymentTriggerError_1.InvalidDeploymentTriggerError;
    } });
    var IpfsGatewayContentUnreachableError_1 = require_IpfsGatewayContentUnreachableError();
    Object.defineProperty(exports, "IpfsGatewayContentUnreachableError", { enumerable: true, get: function() {
      return IpfsGatewayContentUnreachableError_1.IpfsGatewayContentUnreachableError;
    } });
    var InvitationNotFoundError_1 = require_InvitationNotFoundError();
    Object.defineProperty(exports, "InvitationNotFoundError", { enumerable: true, get: function() {
      return InvitationNotFoundError_1.InvitationNotFoundError;
    } });
    var MigrationTokenInvalidError_1 = require_MigrationTokenInvalidError();
    Object.defineProperty(exports, "MigrationTokenInvalidError", { enumerable: true, get: function() {
      return MigrationTokenInvalidError_1.MigrationTokenInvalidError;
    } });
    var MigrationRequestsAlreadyExistError_1 = require_MigrationRequestsAlreadyExistError();
    Object.defineProperty(exports, "MigrationRequestsAlreadyExistError", { enumerable: true, get: function() {
      return MigrationRequestsAlreadyExistError_1.MigrationRequestsAlreadyExistError;
    } });
    var MigrationRequestNotFoundError_1 = require_MigrationRequestNotFoundError();
    Object.defineProperty(exports, "MigrationRequestNotFoundError", { enumerable: true, get: function() {
      return MigrationRequestNotFoundError_1.MigrationRequestNotFoundError;
    } });
    var MigrationRequestInPendingStateError_1 = require_MigrationRequestInPendingStateError();
    Object.defineProperty(exports, "MigrationRequestInPendingStateError", { enumerable: true, get: function() {
      return MigrationRequestInPendingStateError_1.MigrationRequestInPendingStateError;
    } });
    var ProjectInvitationAlreadyExistError_1 = require_ProjectInvitationAlreadyExistError();
    Object.defineProperty(exports, "ProjectInvitationAlreadyExistError", { enumerable: true, get: function() {
      return ProjectInvitationAlreadyExistError_1.ProjectInvitationAlreadyExistError;
    } });
    var ProjectMembershipAlreadyExistError_1 = require_ProjectMembershipAlreadyExistError();
    Object.defineProperty(exports, "ProjectMembershipAlreadyExistError", { enumerable: true, get: function() {
      return ProjectMembershipAlreadyExistError_1.ProjectMembershipAlreadyExistError;
    } });
    var ProjectMembershipNoOwnersError_1 = require_ProjectMembershipNoOwnersError();
    Object.defineProperty(exports, "ProjectMembershipNoOwnersError", { enumerable: true, get: function() {
      return ProjectMembershipNoOwnersError_1.ProjectMembershipNoOwnersError;
    } });
    var UploadedS3KeyNotFoundError_1 = require_UploadedS3KeyNotFoundError();
    Object.defineProperty(exports, "UploadedS3KeyNotFoundError", { enumerable: true, get: function() {
      return UploadedS3KeyNotFoundError_1.UploadedS3KeyNotFoundError;
    } });
    var PathIsNotADirectoryError_1 = require_PathIsNotADirectoryError();
    Object.defineProperty(exports, "PathIsNotADirectoryError", { enumerable: true, get: function() {
      return PathIsNotADirectoryError_1.PathIsNotADirectoryError;
    } });
    var FleekFunctionAlreadyExistsError_1 = require_FleekFunctionAlreadyExistsError();
    Object.defineProperty(exports, "FleekFunctionAlreadyExistsError", { enumerable: true, get: function() {
      return FleekFunctionAlreadyExistsError_1.FleekFunctionAlreadyExistsError;
    } });
    var FleekFunctionNotFoundError_1 = require_FleekFunctionNotFoundError();
    Object.defineProperty(exports, "FleekFunctionNotFoundError", { enumerable: true, get: function() {
      return FleekFunctionNotFoundError_1.FleekFunctionNotFoundError;
    } });
    var FleekFunctionDeploymentNotFoundError_1 = require_FleekFunctionDeploymentNotFoundError();
    Object.defineProperty(exports, "FleekFunctionDeploymentNotFoundError", { enumerable: true, get: function() {
      return FleekFunctionDeploymentNotFoundError_1.FleekFunctionDeploymentNotFoundError;
    } });
    var FleekFunctionsNotFoundError_1 = require_FleekFunctionsNotFoundError();
    Object.defineProperty(exports, "FleekFunctionsNotFoundError", { enumerable: true, get: function() {
      return FleekFunctionsNotFoundError_1.FleekFunctionsNotFoundError;
    } });
    var FleekFunctionPathNotValidError_1 = require_FleekFunctionPathNotValidError();
    Object.defineProperty(exports, "FleekFunctionPathNotValidError", { enumerable: true, get: function() {
      return FleekFunctionPathNotValidError_1.FleekFunctionPathNotValidError;
    } });
    var FleekFunctionNameNotValidError_1 = require_FleekFunctionNameNotValidError();
    Object.defineProperty(exports, "FleekFunctionNameNotValidError", { enumerable: true, get: function() {
      return FleekFunctionNameNotValidError_1.FleekFunctionNameNotValidError;
    } });
    var FleekFunctionStatusNotValidError_1 = require_FleekFunctionStatusNotValidError();
    Object.defineProperty(exports, "FleekFunctionStatusNotValidError", { enumerable: true, get: function() {
      return FleekFunctionStatusNotValidError_1.FleekFunctionStatusNotValidError;
    } });
    var FleekFunctionSlugNotValidError_1 = require_FleekFunctionSlugNotValidError();
    Object.defineProperty(exports, "FleekFunctionSlugNotValidError", { enumerable: true, get: function() {
      return FleekFunctionSlugNotValidError_1.FleekFunctionSlugNotValidError;
    } });
    var MaintenanceError_1 = require_MaintenanceError();
    Object.defineProperty(exports, "MaintenanceError", { enumerable: true, get: function() {
      return MaintenanceError_1.MaintenanceError;
    } });
    var UserHasNoAccessToFeatureError_1 = require_UserHasNoAccessToFeatureError();
    Object.defineProperty(exports, "UserHasNoAccessToFeatureError", { enumerable: true, get: function() {
      return UserHasNoAccessToFeatureError_1.UserHasNoAccessToFeatureError;
    } });
    var InvalidCidError_1 = require_InvalidCidError();
    Object.defineProperty(exports, "InvalidCidError", { enumerable: true, get: function() {
      return InvalidCidError_1.InvalidCidError;
    } });
    var ValidationError_1 = require_ValidationError();
    Object.defineProperty(exports, "ValidationError", { enumerable: true, get: function() {
      return ValidationError_1.ValidationError;
    } });
    var UserInBlocklistError_1 = require_UserInBlocklistError();
    Object.defineProperty(exports, "UserInBlocklistError", { enumerable: true, get: function() {
      return UserInBlocklistError_1.UserInBlocklistError;
    } });
    var EnsNameContentHashCodecMistmatchError_1 = require_EnsNameContentHashCodecMistmatchError();
    Object.defineProperty(exports, "EnsNameContentHashCodecMistmatchError", { enumerable: true, get: function() {
      return EnsNameContentHashCodecMistmatchError_1.EnsNameContentHashCodecMistmatchError;
    } });
    var EnsNameContentHashUndefinedError_1 = require_EnsNameContentHashUndefinedError();
    Object.defineProperty(exports, "EnsNameContentHashUndefinedError", { enumerable: true, get: function() {
      return EnsNameContentHashUndefinedError_1.EnsNameContentHashUndefinedError;
    } });
    var DnsConfigAlreadyExistsError_1 = require_DnsConfigAlreadyExistsError();
    Object.defineProperty(exports, "DnsConfigAlreadyExistsError", { enumerable: true, get: function() {
      return DnsConfigAlreadyExistsError_1.DnsConfigAlreadyExistsError;
    } });
    var DnsConfigNotFoundError_1 = require_DnsConfigNotFoundError();
    Object.defineProperty(exports, "DnsConfigNotFoundError", { enumerable: true, get: function() {
      return DnsConfigNotFoundError_1.DnsConfigNotFoundError;
    } });
    var TwoFactorSecretKeyFailedToEncryptError_1 = require_TwoFactorSecretKeyFailedToEncryptError();
    Object.defineProperty(exports, "TwoFactorSecretKeyFailedToEncryptError", { enumerable: true, get: function() {
      return TwoFactorSecretKeyFailedToEncryptError_1.TwoFactorSecretKeyFailedToEncryptError;
    } });
    var UserSecretKeyAlreadyExistsError_1 = require_UserSecretKeyAlreadyExistsError();
    Object.defineProperty(exports, "UserSecretKeyAlreadyExistsError", { enumerable: true, get: function() {
      return UserSecretKeyAlreadyExistsError_1.UserSecretKeyAlreadyExistsError;
    } });
    var UserSecretKeyNotFoundError_1 = require_UserSecretKeyNotFoundError();
    Object.defineProperty(exports, "UserSecretKeyNotFoundError", { enumerable: true, get: function() {
      return UserSecretKeyNotFoundError_1.UserSecretKeyNotFoundError;
    } });
    var TwoFactorSecretKeyFailedToDecryptError_1 = require_TwoFactorSecretKeyFailedToDecryptError();
    Object.defineProperty(exports, "TwoFactorSecretKeyFailedToDecryptError", { enumerable: true, get: function() {
      return TwoFactorSecretKeyFailedToDecryptError_1.TwoFactorSecretKeyFailedToDecryptError;
    } });
    var RecoveryCodesAlreadyExistsError_1 = require_RecoveryCodesAlreadyExistsError();
    Object.defineProperty(exports, "RecoveryCodesAlreadyExistsError", { enumerable: true, get: function() {
      return RecoveryCodesAlreadyExistsError_1.RecoveryCodesAlreadyExistsError;
    } });
    var WriteFileFromStreamError_1 = require_WriteFileFromStreamError();
    Object.defineProperty(exports, "WriteFileFromStreamError", { enumerable: true, get: function() {
      return WriteFileFromStreamError_1.WriteFileFromStreamError;
    } });
    var InvalidTOTPTokenError_1 = require_InvalidTOTPTokenError();
    Object.defineProperty(exports, "InvalidTOTPTokenError", { enumerable: true, get: function() {
      return InvalidTOTPTokenError_1.InvalidTOTPTokenError;
    } });
    var InvalidRecoveryCodeError_1 = require_InvalidRecoveryCodeError();
    Object.defineProperty(exports, "InvalidRecoveryCodeError", { enumerable: true, get: function() {
      return InvalidRecoveryCodeError_1.InvalidRecoveryCodeError;
    } });
    var MissingTwoFactorProtectionCredentialsError_1 = require_MissingTwoFactorProtectionCredentialsError();
    Object.defineProperty(exports, "MissingTwoFactorProtectionCredentialsError", { enumerable: true, get: function() {
      return MissingTwoFactorProtectionCredentialsError_1.MissingTwoFactorProtectionCredentialsError;
    } });
    var DeploymentInProgressError_1 = require_DeploymentInProgressError();
    Object.defineProperty(exports, "DeploymentInProgressError", { enumerable: true, get: function() {
      return DeploymentInProgressError_1.DeploymentInProgressError;
    } });
    var PullzoneNotFoundForZoneIdError_1 = require_PullzoneNotFoundForZoneIdError();
    Object.defineProperty(exports, "PullzoneNotFoundForZoneIdError", { enumerable: true, get: function() {
      return PullzoneNotFoundForZoneIdError_1.PullzoneNotFoundForZoneIdError;
    } });
    var RecoveryCodeFailedToEncryptError_1 = require_RecoveryCodeFailedToEncryptError();
    Object.defineProperty(exports, "RecoveryCodeFailedToEncryptError", { enumerable: true, get: function() {
      return RecoveryCodeFailedToEncryptError_1.RecoveryCodeFailedToEncryptError;
    } });
    var RecoveryCodeFailedToDecryptError_1 = require_RecoveryCodeFailedToDecryptError();
    Object.defineProperty(exports, "RecoveryCodeFailedToDecryptError", { enumerable: true, get: function() {
      return RecoveryCodeFailedToDecryptError_1.RecoveryCodeFailedToDecryptError;
    } });
    var PermissionGroupNotFoundError_1 = require_PermissionGroupNotFoundError();
    Object.defineProperty(exports, "PermissionGroupNotFoundError", { enumerable: true, get: function() {
      return PermissionGroupNotFoundError_1.PermissionGroupNotFoundError;
    } });
    var PermissionScopeError_1 = require_PermissionScopeError();
    Object.defineProperty(exports, "PermissionScopeError", { enumerable: true, get: function() {
      return PermissionScopeError_1.PermissionScopeError;
    } });
    var InvalidAdminAccessTokenError_1 = require_InvalidAdminAccessTokenError();
    Object.defineProperty(exports, "InvalidAdminAccessTokenError", { enumerable: true, get: function() {
      return InvalidAdminAccessTokenError_1.InvalidAdminAccessTokenError;
    } });
    var MissingExpectedDataError_1 = require_MissingExpectedDataError();
    Object.defineProperty(exports, "MissingExpectedDataError", { enumerable: true, get: function() {
      return MissingExpectedDataError_1.MissingExpectedDataError;
    } });
    var EnvNotSetError_1 = require_EnvNotSetError();
    Object.defineProperty(exports, "EnvNotSetError", { enumerable: true, get: function() {
      return EnvNotSetError_1.EnvNotSetError;
    } });
    var GitSecretsFailedToEncryptError_1 = require_GitSecretsFailedToEncryptError();
    Object.defineProperty(exports, "GitSecretsFailedToEncryptError", { enumerable: true, get: function() {
      return GitSecretsFailedToEncryptError_1.GitSecretsFailedToEncryptError;
    } });
    var GitConfigFailedToParseError_1 = require_GitConfigFailedToParseError();
    Object.defineProperty(exports, "GitConfigFailedToParseError", { enumerable: true, get: function() {
      return GitConfigFailedToParseError_1.GitConfigFailedToParseError;
    } });
    var PathIsNotAFileError_1 = require_PathIsNotAFileError();
    Object.defineProperty(exports, "PathIsNotAFileError", { enumerable: true, get: function() {
      return PathIsNotAFileError_1.PathIsNotAFileError;
    } });
    var FleekFunctionBundlingFailedError_1 = require_FleekFunctionBundlingFailedError();
    Object.defineProperty(exports, "FleekFunctionBundlingFailedError", { enumerable: true, get: function() {
      return FleekFunctionBundlingFailedError_1.FleekFunctionBundlingFailedError;
    } });
    var GitIntegrationNotFoundError_1 = require_GitIntegrationNotFoundError();
    Object.defineProperty(exports, "GitIntegrationNotFoundError", { enumerable: true, get: function() {
      return GitIntegrationNotFoundError_1.GitIntegrationNotFoundError;
    } });
    var GitProviderNotFoundError_1 = require_GitProviderNotFoundError();
    Object.defineProperty(exports, "GitProviderNotFoundError", { enumerable: true, get: function() {
      return GitProviderNotFoundError_1.GitProviderNotFoundError;
    } });
    var ExpectedOneOfValuesError_1 = require_ExpectedOneOfValuesError();
    Object.defineProperty(exports, "ExpectedOneOfValuesError", { enumerable: true, get: function() {
      return ExpectedOneOfValuesError_1.ExpectedOneOfValuesError;
    } });
    var InvalidJSONFormat_1 = require_InvalidJSONFormat();
    Object.defineProperty(exports, "InvalidJSONFormat", { enumerable: true, get: function() {
      return InvalidJSONFormat_1.InvalidJSONFormat;
    } });
    var StorageUploadFileCountQuotaExceededError_1 = require_StorageUploadFileCountQuotaExceededError();
    Object.defineProperty(exports, "StorageUploadFileCountQuotaExceededError", { enumerable: true, get: function() {
      return StorageUploadFileCountQuotaExceededError_1.StorageUploadFileCountQuotaExceededError;
    } });
    var StorageUploadTotalSizeQuotaExceededError_1 = require_StorageUploadTotalSizeQuotaExceededError();
    Object.defineProperty(exports, "StorageUploadTotalSizeQuotaExceededError", { enumerable: true, get: function() {
      return StorageUploadTotalSizeQuotaExceededError_1.StorageUploadTotalSizeQuotaExceededError;
    } });
    var GitProviderNotSupportedError_1 = require_GitProviderNotSupportedError();
    Object.defineProperty(exports, "GitProviderNotSupportedError", { enumerable: true, get: function() {
      return GitProviderNotSupportedError_1.GitProviderNotSupportedError;
    } });
    var GitProviderNotAuthorizedError_1 = require_GitProviderNotAuthorizedError();
    Object.defineProperty(exports, "GitProviderNotAuthorizedError", { enumerable: true, get: function() {
      return GitProviderNotAuthorizedError_1.GitProviderNotAuthorizedError;
    } });
    var GitAccessTokenInvalidError_1 = require_GitAccessTokenInvalidError();
    Object.defineProperty(exports, "GitAccessTokenInvalidError", { enumerable: true, get: function() {
      return GitAccessTokenInvalidError_1.GitAccessTokenInvalidError;
    } });
    var QueuedDeploymentsLimitError_1 = require_QueuedDeploymentsLimitError();
    Object.defineProperty(exports, "QueuedDeploymentsLimitError", { enumerable: true, get: function() {
      return QueuedDeploymentsLimitError_1.QueuedDeploymentsLimitError;
    } });
    var GitIntegrationInstallationConflictError_1 = require_GitIntegrationInstallationConflictError();
    Object.defineProperty(exports, "GitIntegrationInstallationConflictError", { enumerable: true, get: function() {
      return GitIntegrationInstallationConflictError_1.GitIntegrationInstallationConflictError;
    } });
    var GitLinkMultipleAccountError_1 = require_GitLinkMultipleAccountError();
    Object.defineProperty(exports, "GitLinkMultipleAccountError", { enumerable: true, get: function() {
      return GitLinkMultipleAccountError_1.GitLinkMultipleAccountError;
    } });
    var GitRepoByNameAndOwnerNotFoundError_1 = require_GitRepoByNameAndOwnerNotFoundError();
    Object.defineProperty(exports, "GitRepoByNameAndOwnerNotFoundError", { enumerable: true, get: function() {
      return GitRepoByNameAndOwnerNotFoundError_1.GitRepoByNameAndOwnerNotFoundError;
    } });
    var GitAccessTokenNotFoundError_1 = require_GitAccessTokenNotFoundError();
    Object.defineProperty(exports, "GitAccessTokenNotFoundError", { enumerable: true, get: function() {
      return GitAccessTokenNotFoundError_1.GitAccessTokenNotFoundError;
    } });
    var FolderNotFoundError_1 = require_FolderNotFoundError();
    Object.defineProperty(exports, "FolderNotFoundError", { enumerable: true, get: function() {
      return FolderNotFoundError_1.FolderNotFoundError;
    } });
    var FolderAlreadyExistsError_1 = require_FolderAlreadyExistsError();
    Object.defineProperty(exports, "FolderAlreadyExistsError", { enumerable: true, get: function() {
      return FolderAlreadyExistsError_1.FolderAlreadyExistsError;
    } });
    var PinsNotFoundError_1 = require_PinsNotFoundError();
    Object.defineProperty(exports, "PinsNotFoundError", { enumerable: true, get: function() {
      return PinsNotFoundError_1.PinsNotFoundError;
    } });
    var SiteCreationFailedError_1 = require_SiteCreationFailedError();
    Object.defineProperty(exports, "SiteCreationFailedError", { enumerable: true, get: function() {
      return SiteCreationFailedError_1.SiteCreationFailedError;
    } });
    var FleekFunctionInvalidWasmCodeError_1 = require_FleekFunctionInvalidWasmCodeError();
    Object.defineProperty(exports, "FleekFunctionInvalidWasmCodeError", { enumerable: true, get: function() {
      return FleekFunctionInvalidWasmCodeError_1.FleekFunctionInvalidWasmCodeError;
    } });
    var FleekFunctionWasmEncryptionFailedError_1 = require_FleekFunctionWasmEncryptionFailedError();
    Object.defineProperty(exports, "FleekFunctionWasmEncryptionFailedError", { enumerable: true, get: function() {
      return FleekFunctionWasmEncryptionFailedError_1.FleekFunctionWasmEncryptionFailedError;
    } });
    var UploadProxyStoreAsCarError_1 = require_UploadProxyStoreAsCarError();
    Object.defineProperty(exports, "UploadProxyStoreAsCarError", { enumerable: true, get: function() {
      return UploadProxyStoreAsCarError_1.UploadProxyStoreAsCarError;
    } });
    var UploadProxyUploadFileError_1 = require_UploadProxyUploadFileError();
    Object.defineProperty(exports, "UploadProxyUploadFileError", { enumerable: true, get: function() {
      return UploadProxyUploadFileError_1.UploadProxyUploadFileError;
    } });
  }
});

// ../auth/dist/verifyToken.js
var require_verifyToken = __commonJS({
  "../auth/dist/verifyToken.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.verifyToken = void 0;
    var errors_1 = require_dist();
    var jose_1 = (init_browser(), __toCommonJS(browser_exports));
    var textEncoder = new TextEncoder();
    var verifyToken = async ({ secret, token }) => {
      const secretKey = textEncoder.encode(secret);
      const verifiedToken = await (0, jose_1.jwtVerify)(token, secretKey).catch(() => {
        throw new errors_1.AuthorizationError();
      });
      return verifiedToken.payload;
    };
    exports.verifyToken = verifyToken;
  }
});

// ../auth/dist/verifyAccessToken.js
var require_verifyAccessToken = __commonJS({
  "../auth/dist/verifyAccessToken.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.verifyAccessToken = void 0;
    var verifyToken_1 = require_verifyToken();
    var verifyAccessToken = (args) => (0, verifyToken_1.verifyToken)(args);
    exports.verifyAccessToken = verifyAccessToken;
  }
});

// ../auth/dist/verifyMigrationToken.js
var require_verifyMigrationToken = __commonJS({
  "../auth/dist/verifyMigrationToken.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.verifyMigrationToken = void 0;
    var verifyToken_1 = require_verifyToken();
    var verifyMigrationToken = (args) => (0, verifyToken_1.verifyToken)(args);
    exports.verifyMigrationToken = verifyMigrationToken;
  }
});

// ../../node_modules/.pnpm/jscrypto@1.0.3/node_modules/jscrypto/index.js
var require_jscrypto = __commonJS({
  "../../node_modules/.pnpm/jscrypto@1.0.3/node_modules/jscrypto/index.js"(exports, module) {
    !function(n, t) {
      if ("object" == typeof exports && "object" == typeof module) module.exports = t();
      else if ("function" == typeof define && define.amd) define([], t);
      else if ("object" == typeof exports) exports.JsCrypto = t();
      else {
        var r = t();
        for (var i in n.JsCrypto = n.JsCrypto || {}, r) n.JsCrypto[i] = r[i];
      }
    }(exports, function() {
      return function() {
        "use strict";
        var n = { 9691: function(n2, t2, r2) {
          r2.d(t2, { AES: function() {
            return _;
          } });
          var i2, e = r2(9456), o = r2(787), u = r2(5693), f = r2(9109), c = (i2 = function(n3, t3) {
            return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n4, t4) {
              n4.__proto__ = t4;
            } || function(n4, t4) {
              for (var r3 in t4) Object.prototype.hasOwnProperty.call(t4, r3) && (n4[r3] = t4[r3]);
            })(n3, t3);
          }, function(n3, t3) {
            function r3() {
              this.constructor = n3;
            }
            i2(n3, t3), n3.prototype = null === t3 ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
          }), s = function() {
            return (s = Object.assign || function(n3) {
              for (var t3, r3 = 1, i3 = arguments.length; r3 < i3; r3++) for (var e2 in t3 = arguments[r3]) Object.prototype.hasOwnProperty.call(t3, e2) && (n3[e2] = t3[e2]);
              return n3;
            }).apply(this, arguments);
          }, a = [], h = [], v = [], w = [], l = [], b = [], d = [], y = [], p = [], O = [];
          !function() {
            for (var n3 = [], t3 = 0; t3 < 256; t3++) n3[t3] = t3 < 128 ? t3 << 1 : t3 << 1 ^ 283;
            var r3 = 0, i3 = 0;
            for (t3 = 0; t3 < 256; t3++) {
              var e2 = i3 ^ i3 << 1 ^ i3 << 2 ^ i3 << 3 ^ i3 << 4;
              e2 = e2 >>> 8 ^ 255 & e2 ^ 99, a[r3] = e2, h[e2] = r3;
              var o2 = n3[r3], u2 = n3[o2], f2 = n3[u2], c2 = 257 * n3[e2] ^ 16843008 * e2;
              v[r3] = c2 << 24 | c2 >>> 8, w[r3] = c2 << 16 | c2 >>> 16, l[r3] = c2 << 8 | c2 >>> 24, b[r3] = c2, c2 = 16843009 * f2 ^ 65537 * u2 ^ 257 * o2 ^ 16843008 * r3, d[e2] = c2 << 24 | c2 >>> 8, y[e2] = c2 << 16 | c2 >>> 16, p[e2] = c2 << 8 | c2 >>> 24, O[e2] = c2, r3 ? (r3 = o2 ^ n3[n3[n3[f2 ^ o2]]], i3 ^= n3[n3[i3]]) : r3 = i3 = 1;
            }
          }();
          var j = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], _ = function(n3) {
            function t3(t4) {
              var r3 = n3.call(this, t4) || this;
              return r3.u = 0, r3.h = [], r3.v = [], r3.O = t4, r3.A(), r3;
            }
            return c(t3, n3), t3.prototype.A = function() {
              var n4;
              if (!this.u || this.k !== this.H) {
                for (var t4 = this.k = this.H, r3 = t4.words, i3 = t4.nSigBytes / 4, e2 = 4 * ((this.u = i3 + 6) + 1), o2 = this.h = [], u2 = 0; u2 < e2; u2++) u2 < i3 ? o2[u2] = r3[u2] : (n4 = o2[u2 - 1], u2 % i3 ? i3 > 6 && u2 % i3 == 4 && (n4 = a[n4 >>> 24] << 24 | a[n4 >>> 16 & 255] << 16 | a[n4 >>> 8 & 255] << 8 | a[255 & n4]) : (n4 = a[(n4 = n4 << 8 | n4 >>> 24) >>> 24] << 24 | a[n4 >>> 16 & 255] << 16 | a[n4 >>> 8 & 255] << 8 | a[255 & n4], n4 ^= j[u2 / i3 | 0] << 24), o2[u2] = o2[u2 - i3] ^ n4);
                this.v = [];
                for (var f2 = 0; f2 < e2; f2++) {
                  u2 = e2 - f2;
                  n4 = f2 % 4 ? o2[u2] : o2[u2 - 4], this.v[f2] = f2 < 4 || u2 <= 4 ? n4 : d[a[n4 >>> 24]] ^ y[a[n4 >>> 16 & 255]] ^ p[a[n4 >>> 8 & 255]] ^ O[a[255 & n4]];
                }
              }
            }, t3.prototype.encryptBlock = function(n4, t4) {
              this.B(n4, t4, this.h, v, w, l, b, a);
            }, t3.prototype.decryptBlock = function(n4, t4) {
              var r3 = n4[t4 + 1];
              n4[t4 + 1] = n4[t4 + 3], n4[t4 + 3] = r3, this.B(n4, t4, this.v, d, y, p, O, h), r3 = n4[t4 + 1], n4[t4 + 1] = n4[t4 + 3], n4[t4 + 3] = r3;
            }, t3.prototype.B = function(n4, t4, r3, i3, e2, o2, u2, f2) {
              for (var c2 = this.u, s2 = n4[t4] ^ r3[0], a2 = n4[t4 + 1] ^ r3[1], h2 = n4[t4 + 2] ^ r3[2], v2 = n4[t4 + 3] ^ r3[3], w2 = 4, l2 = 1; l2 < c2; l2++) {
                var b2 = i3[s2 >>> 24] ^ e2[a2 >>> 16 & 255] ^ o2[h2 >>> 8 & 255] ^ u2[255 & v2] ^ r3[w2++], d2 = i3[a2 >>> 24] ^ e2[h2 >>> 16 & 255] ^ o2[v2 >>> 8 & 255] ^ u2[255 & s2] ^ r3[w2++], y2 = i3[h2 >>> 24] ^ e2[v2 >>> 16 & 255] ^ o2[s2 >>> 8 & 255] ^ u2[255 & a2] ^ r3[w2++], p2 = i3[v2 >>> 24] ^ e2[s2 >>> 16 & 255] ^ o2[a2 >>> 8 & 255] ^ u2[255 & h2] ^ r3[w2++];
                s2 = b2, a2 = d2, h2 = y2, v2 = p2;
              }
              var O2 = (f2[s2 >>> 24] << 24 | f2[a2 >>> 16 & 255] << 16 | f2[h2 >>> 8 & 255] << 8 | f2[255 & v2]) ^ r3[w2++], j2 = (f2[a2 >>> 24] << 24 | f2[h2 >>> 16 & 255] << 16 | f2[v2 >>> 8 & 255] << 8 | f2[255 & s2]) ^ r3[w2++], _2 = (f2[h2 >>> 24] << 24 | f2[v2 >>> 16 & 255] << 16 | f2[s2 >>> 8 & 255] << 8 | f2[255 & a2]) ^ r3[w2++], m = (f2[v2 >>> 24] << 24 | f2[s2 >>> 16 & 255] << 16 | f2[a2 >>> 8 & 255] << 8 | f2[255 & h2]) ^ r3[w2++];
              n4[t4] = O2, n4[t4 + 1] = j2, n4[t4 + 2] = _2, n4[t4 + 3] = m;
            }, t3.createEncryptor = function(n4, r3) {
              return new t3(s(s({}, r3 = void 0 === r3 ? {} : r3), { key: n4, transformMode: e.t.ENC_TRANSFORM_MODE }));
            }, t3.createDecryptor = function(n4, r3) {
              return new t3(s(s({}, r3 = void 0 === r3 ? {} : r3), { key: n4, transformMode: e.t.DEC_TRANSFORM_MODE }));
            }, t3.encrypt = function(n4, r3, i3) {
              if ("string" == typeof r3) return u.E.encrypt(t3, n4, r3, i3);
              if (r3.nSigBytes % 4 != 0) throw new Error("Key size must be multiple of 32bit/4byte/1word");
              return f.D.encrypt(t3, n4, r3, i3);
            }, t3.decrypt = function(n4, r3, i3) {
              if ("string" == typeof r3) return u.E.decrypt(t3, n4, r3, i3);
              if (r3.nSigBytes % 4 != 0) throw new Error("Key size must be multiple of 32bit/4byte/1word");
              return f.D.decrypt(t3, n4, r3, i3);
            }, t3.keySize = 8, t3;
          }(o.G);
        }, 3967: function(n2, t2, r2) {
          r2.d(t2, { CBCMAC: function() {
            return f;
          } });
          var i2 = r2(4768), e = r2(3354), o = r2(9691), u = r2(3664);
          function f(n3, t3, r3, f2, c, s) {
            var a = s && s.Cipher ? s.Cipher : o.AES, h = "string" == typeof r3 ? i2.d.parse(r3) : r3, v = f2 || new e.e([0, 0]), w = "string" == typeof t3 ? i2.d.parse(t3) : t3, l = "string" == typeof n3 ? i2.d.parse(n3) : n3, b = c || 16;
            return u.K.mac(a, h, v, w, l, b);
          }
        }, 9910: function(n2, t2, r2) {
          r2.d(t2, { DES: function() {
            return b;
          } });
          var i2, e = r2(787), o = r2(9456), u = r2(5693), f = r2(9109), c = (i2 = function(n3, t3) {
            return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n4, t4) {
              n4.__proto__ = t4;
            } || function(n4, t4) {
              for (var r3 in t4) Object.prototype.hasOwnProperty.call(t4, r3) && (n4[r3] = t4[r3]);
            })(n3, t3);
          }, function(n3, t3) {
            function r3() {
              this.constructor = n3;
            }
            i2(n3, t3), n3.prototype = null === t3 ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
          }), s = function() {
            return (s = Object.assign || function(n3) {
              for (var t3, r3 = 1, i3 = arguments.length; r3 < i3; r3++) for (var e2 in t3 = arguments[r3]) Object.prototype.hasOwnProperty.call(t3, e2) && (n3[e2] = t3[e2]);
              return n3;
            }).apply(this, arguments);
          }, a = [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4], h = [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32], v = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28], w = [{ 0: 8421888, 268435456: 32768, 536870912: 8421378, 805306368: 2, 1073741824: 512, 1342177280: 8421890, 1610612736: 8389122, 1879048192: 8388608, 2147483648: 514, 2415919104: 8389120, 2684354560: 33280, 2952790016: 8421376, 3221225472: 32770, 3489660928: 8388610, 3758096384: 0, 4026531840: 33282, 134217728: 0, 402653184: 8421890, 671088640: 33282, 939524096: 32768, 1207959552: 8421888, 1476395008: 512, 1744830464: 8421378, 2013265920: 2, 2281701376: 8389120, 2550136832: 33280, 2818572288: 8421376, 3087007744: 8389122, 3355443200: 8388610, 3623878656: 32770, 3892314112: 514, 4160749568: 8388608, 1: 32768, 268435457: 2, 536870913: 8421888, 805306369: 8388608, 1073741825: 8421378, 1342177281: 33280, 1610612737: 512, 1879048193: 8389122, 2147483649: 8421890, 2415919105: 8421376, 2684354561: 8388610, 2952790017: 33282, 3221225473: 514, 3489660929: 8389120, 3758096385: 32770, 4026531841: 0, 134217729: 8421890, 402653185: 8421376, 671088641: 8388608, 939524097: 512, 1207959553: 32768, 1476395009: 8388610, 1744830465: 2, 2013265921: 33282, 2281701377: 32770, 2550136833: 8389122, 2818572289: 514, 3087007745: 8421888, 3355443201: 8389120, 3623878657: 0, 3892314113: 33280, 4160749569: 8421378 }, { 0: 1074282512, 16777216: 16384, 33554432: 524288, 50331648: 1074266128, 67108864: 1073741840, 83886080: 1074282496, 100663296: 1073758208, 117440512: 16, 134217728: 540672, 150994944: 1073758224, 167772160: 1073741824, 184549376: 540688, 201326592: 524304, 218103808: 0, 234881024: 16400, 251658240: 1074266112, 8388608: 1073758208, 25165824: 540688, 41943040: 16, 58720256: 1073758224, 75497472: 1074282512, 92274688: 1073741824, 109051904: 524288, 125829120: 1074266128, 142606336: 524304, 159383552: 0, 176160768: 16384, 192937984: 1074266112, 209715200: 1073741840, 226492416: 540672, 243269632: 1074282496, 260046848: 16400, 268435456: 0, 285212672: 1074266128, 301989888: 1073758224, 318767104: 1074282496, 335544320: 1074266112, 352321536: 16, 369098752: 540688, 385875968: 16384, 402653184: 16400, 419430400: 524288, 436207616: 524304, 452984832: 1073741840, 469762048: 540672, 486539264: 1073758208, 503316480: 1073741824, 520093696: 1074282512, 276824064: 540688, 293601280: 524288, 310378496: 1074266112, 327155712: 16384, 343932928: 1073758208, 360710144: 1074282512, 377487360: 16, 394264576: 1073741824, 411041792: 1074282496, 427819008: 1073741840, 444596224: 1073758224, 461373440: 524304, 478150656: 0, 494927872: 16400, 511705088: 1074266128, 528482304: 540672 }, { 0: 260, 1048576: 0, 2097152: 67109120, 3145728: 65796, 4194304: 65540, 5242880: 67108868, 6291456: 67174660, 7340032: 67174400, 8388608: 67108864, 9437184: 67174656, 10485760: 65792, 11534336: 67174404, 12582912: 67109124, 13631488: 65536, 14680064: 4, 15728640: 256, 524288: 67174656, 1572864: 67174404, 2621440: 0, 3670016: 67109120, 4718592: 67108868, 5767168: 65536, 6815744: 65540, 7864320: 260, 8912896: 4, 9961472: 256, 11010048: 67174400, 12058624: 65796, 13107200: 65792, 14155776: 67109124, 15204352: 67174660, 16252928: 67108864, 16777216: 67174656, 17825792: 65540, 18874368: 65536, 19922944: 67109120, 20971520: 256, 22020096: 67174660, 23068672: 67108868, 24117248: 0, 25165824: 67109124, 26214400: 67108864, 27262976: 4, 28311552: 65792, 29360128: 67174400, 30408704: 260, 31457280: 65796, 32505856: 67174404, 17301504: 67108864, 18350080: 260, 19398656: 67174656, 20447232: 0, 21495808: 65540, 22544384: 67109120, 23592960: 256, 24641536: 67174404, 25690112: 65536, 26738688: 67174660, 27787264: 65796, 28835840: 67108868, 29884416: 67109124, 30932992: 67174400, 31981568: 4, 33030144: 65792 }, { 0: 2151682048, 65536: 2147487808, 131072: 4198464, 196608: 2151677952, 262144: 0, 327680: 4198400, 393216: 2147483712, 458752: 4194368, 524288: 2147483648, 589824: 4194304, 655360: 64, 720896: 2147487744, 786432: 2151678016, 851968: 4160, 917504: 4096, 983040: 2151682112, 32768: 2147487808, 98304: 64, 163840: 2151678016, 229376: 2147487744, 294912: 4198400, 360448: 2151682112, 425984: 0, 491520: 2151677952, 557056: 4096, 622592: 2151682048, 688128: 4194304, 753664: 4160, 819200: 2147483648, 884736: 4194368, 950272: 4198464, 1015808: 2147483712, 1048576: 4194368, 1114112: 4198400, 1179648: 2147483712, 1245184: 0, 1310720: 4160, 1376256: 2151678016, 1441792: 2151682048, 1507328: 2147487808, 1572864: 2151682112, 1638400: 2147483648, 1703936: 2151677952, 1769472: 4198464, 1835008: 2147487744, 1900544: 4194304, 1966080: 64, 2031616: 4096, 1081344: 2151677952, 1146880: 2151682112, 1212416: 0, 1277952: 4198400, 1343488: 4194368, 1409024: 2147483648, 1474560: 2147487808, 1540096: 64, 1605632: 2147483712, 1671168: 4096, 1736704: 2147487744, 1802240: 2151678016, 1867776: 4160, 1933312: 2151682048, 1998848: 4194304, 2064384: 4198464 }, { 0: 128, 4096: 17039360, 8192: 262144, 12288: 536870912, 16384: 537133184, 20480: 16777344, 24576: 553648256, 28672: 262272, 32768: 16777216, 36864: 537133056, 40960: 536871040, 45056: 553910400, 49152: 553910272, 53248: 0, 57344: 17039488, 61440: 553648128, 2048: 17039488, 6144: 553648256, 10240: 128, 14336: 17039360, 18432: 262144, 22528: 537133184, 26624: 553910272, 30720: 536870912, 34816: 537133056, 38912: 0, 43008: 553910400, 47104: 16777344, 51200: 536871040, 55296: 553648128, 59392: 16777216, 63488: 262272, 65536: 262144, 69632: 128, 73728: 536870912, 77824: 553648256, 81920: 16777344, 86016: 553910272, 90112: 537133184, 94208: 16777216, 98304: 553910400, 102400: 553648128, 106496: 17039360, 110592: 537133056, 114688: 262272, 118784: 536871040, 122880: 0, 126976: 17039488, 67584: 553648256, 71680: 16777216, 75776: 17039360, 79872: 537133184, 83968: 536870912, 88064: 17039488, 92160: 128, 96256: 553910272, 100352: 262272, 104448: 553910400, 108544: 0, 112640: 553648128, 116736: 16777344, 120832: 262144, 124928: 537133056, 129024: 536871040 }, { 0: 268435464, 256: 8192, 512: 270532608, 768: 270540808, 1024: 268443648, 1280: 2097152, 1536: 2097160, 1792: 268435456, 2048: 0, 2304: 268443656, 2560: 2105344, 2816: 8, 3072: 270532616, 3328: 2105352, 3584: 8200, 3840: 270540800, 128: 270532608, 384: 270540808, 640: 8, 896: 2097152, 1152: 2105352, 1408: 268435464, 1664: 268443648, 1920: 8200, 2176: 2097160, 2432: 8192, 2688: 268443656, 2944: 270532616, 3200: 0, 3456: 270540800, 3712: 2105344, 3968: 268435456, 4096: 268443648, 4352: 270532616, 4608: 270540808, 4864: 8200, 5120: 2097152, 5376: 268435456, 5632: 268435464, 5888: 2105344, 6144: 2105352, 6400: 0, 6656: 8, 6912: 270532608, 7168: 8192, 7424: 268443656, 7680: 270540800, 7936: 2097160, 4224: 8, 4480: 2105344, 4736: 2097152, 4992: 268435464, 5248: 268443648, 5504: 8200, 5760: 270540808, 6016: 270532608, 6272: 270540800, 6528: 270532616, 6784: 8192, 7040: 2105352, 7296: 2097160, 7552: 0, 7808: 268435456, 8064: 268443656 }, { 0: 1048576, 16: 33555457, 32: 1024, 48: 1049601, 64: 34604033, 80: 0, 96: 1, 112: 34603009, 128: 33555456, 144: 1048577, 160: 33554433, 176: 34604032, 192: 34603008, 208: 1025, 224: 1049600, 240: 33554432, 8: 34603009, 24: 0, 40: 33555457, 56: 34604032, 72: 1048576, 88: 33554433, 104: 33554432, 120: 1025, 136: 1049601, 152: 33555456, 168: 34603008, 184: 1048577, 200: 1024, 216: 34604033, 232: 1, 248: 1049600, 256: 33554432, 272: 1048576, 288: 33555457, 304: 34603009, 320: 1048577, 336: 33555456, 352: 34604032, 368: 1049601, 384: 1025, 400: 34604033, 416: 1049600, 432: 1, 448: 0, 464: 34603008, 480: 33554433, 496: 1024, 264: 1049600, 280: 33555457, 296: 34603009, 312: 1, 328: 33554432, 344: 1048576, 360: 1025, 376: 34604032, 392: 33554433, 408: 34603008, 424: 0, 440: 34604033, 456: 1049601, 472: 1024, 488: 33555456, 504: 1048577 }, { 0: 134219808, 1: 131072, 2: 134217728, 3: 32, 4: 131104, 5: 134350880, 6: 134350848, 7: 2048, 8: 134348800, 9: 134219776, 10: 133120, 11: 134348832, 12: 2080, 13: 0, 14: 134217760, 15: 133152, 2147483648: 2048, 2147483649: 134350880, 2147483650: 134219808, 2147483651: 134217728, 2147483652: 134348800, 2147483653: 133120, 2147483654: 133152, 2147483655: 32, 2147483656: 134217760, 2147483657: 2080, 2147483658: 131104, 2147483659: 134350848, 2147483660: 0, 2147483661: 134348832, 2147483662: 134219776, 2147483663: 131072, 16: 133152, 17: 134350848, 18: 32, 19: 2048, 20: 134219776, 21: 134217760, 22: 134348832, 23: 131072, 24: 0, 25: 131104, 26: 134348800, 27: 134219808, 28: 134350880, 29: 133120, 30: 2080, 31: 134217728, 2147483664: 131072, 2147483665: 2048, 2147483666: 134348832, 2147483667: 133152, 2147483668: 32, 2147483669: 134348800, 2147483670: 134217728, 2147483671: 134219808, 2147483672: 134350880, 2147483673: 134217760, 2147483674: 134219776, 2147483675: 0, 2147483676: 133120, 2147483677: 2080, 2147483678: 131104, 2147483679: 134350848 }], l = [4160749569, 528482304, 33030144, 2064384, 129024, 8064, 504, 2147483679], b = function(n3) {
            function t3(t4) {
              var r3 = n3.call(this, t4) || this;
              return r3.N = 2, r3.I = [], r3.U = [], r3.L = 0, r3.F = 0, r3.O = t4, r3.A(), r3;
            }
            return c(t3, n3), t3.prototype.A = function() {
              for (var n4 = this.H.words, t4 = [], r3 = 0; r3 < 56; r3++) {
                var i3 = a[r3] - 1;
                t4[r3] = n4[i3 >>> 5] >>> 31 - i3 % 32 & 1;
              }
              for (var e2 = this.I = [], o2 = 0; o2 < 16; o2++) {
                var u2 = e2[o2] = [], f2 = v[o2];
                for (r3 = 0; r3 < 24; r3++) u2[r3 / 6 | 0] |= t4[(h[r3] - 1 + f2) % 28] << 31 - r3 % 6, u2[4 + (r3 / 6 | 0)] |= t4[28 + (h[r3 + 24] - 1 + f2) % 28] << 31 - r3 % 6;
                u2[0] = u2[0] << 1 | u2[0] >>> 31;
                for (r3 = 1; r3 < 7; r3++) u2[r3] = u2[r3] >>> 4 * (r3 - 1) + 3;
                u2[7] = u2[7] << 5 | u2[7] >>> 27;
              }
              this.U = [];
              for (r3 = 0; r3 < 16; r3++) this.U[r3] = e2[15 - r3];
            }, t3.prototype.encryptBlock = function(n4, t4) {
              this.R(n4, t4, this.I);
            }, t3.prototype.decryptBlock = function(n4, t4) {
              this.R(n4, t4, this.U);
            }, t3.prototype.R = function(n4, t4, r3) {
              this.L = n4[t4], this.F = n4[t4 + 1], this.X(4, 252645135), this.X(16, 65535), this.Z(2, 858993459), this.Z(8, 16711935), this.X(1, 1431655765);
              for (var i3 = 0; i3 < 16; i3++) {
                for (var e2 = r3[i3], o2 = this.L, u2 = this.F, f2 = 0, c2 = 0; c2 < 8; c2++) {
                  var s2 = (u2 ^ e2[c2]) & l[c2];
                  f2 |= w[c2][s2 >>> 0];
                }
                this.L = u2, this.F = o2 ^ f2;
              }
              var a2 = this.L;
              this.L = this.F, this.F = a2, this.X(1, 1431655765), this.Z(8, 16711935), this.Z(2, 858993459), this.X(16, 65535), this.X(4, 252645135), n4[t4] = this.L, n4[t4 + 1] = this.F;
            }, t3.prototype.X = function(n4, t4) {
              var r3 = (this.L >>> n4 ^ this.F) & t4;
              this.F ^= r3, this.L ^= r3 << n4;
            }, t3.prototype.Z = function(n4, t4) {
              var r3 = (this.F >>> n4 ^ this.L) & t4;
              this.L ^= r3, this.F ^= r3 << n4;
            }, t3.createEncryptor = function(n4, r3) {
              return new t3(s(s({}, r3 = void 0 === r3 ? {} : r3), { key: n4, transformMode: o.t.ENC_TRANSFORM_MODE }));
            }, t3.createDecryptor = function(n4, r3) {
              return new t3(s(s({}, r3 = void 0 === r3 ? {} : r3), { key: n4, transformMode: o.t.DEC_TRANSFORM_MODE }));
            }, t3.encrypt = function(n4, r3, i3) {
              return "string" == typeof r3 ? u.E.encrypt(t3, n4, r3, i3) : f.D.encrypt(t3, n4, r3, i3);
            }, t3.decrypt = function(n4, r3, i3) {
              return "string" == typeof r3 ? u.E.decrypt(t3, n4, r3, i3) : f.D.decrypt(t3, n4, r3, i3);
            }, t3.keySize = 2, t3.ivSize = 2, t3;
          }(e.G);
        }, 6739: function(n2, t2, r2) {
          r2.d(t2, { DES3: function() {
            return v;
          } });
          var i2, e = r2(9109), o = r2(787), u = r2(9456), f = r2(9910), c = r2(3354), s = r2(5693), a = (i2 = function(n3, t3) {
            return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n4, t4) {
              n4.__proto__ = t4;
            } || function(n4, t4) {
              for (var r3 in t4) Object.prototype.hasOwnProperty.call(t4, r3) && (n4[r3] = t4[r3]);
            })(n3, t3);
          }, function(n3, t3) {
            function r3() {
              this.constructor = n3;
            }
            i2(n3, t3), n3.prototype = null === t3 ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
          }), h = function() {
            return (h = Object.assign || function(n3) {
              for (var t3, r3 = 1, i3 = arguments.length; r3 < i3; r3++) for (var e2 in t3 = arguments[r3]) Object.prototype.hasOwnProperty.call(t3, e2) && (n3[e2] = t3[e2]);
              return n3;
            }).apply(this, arguments);
          }, v = function(n3) {
            function t3(t4) {
              var r3 = n3.call(this, t4) || this;
              r3.N = 2, r3.O = t4;
              var i3 = r3.J();
              return r3.Y = i3[0], r3.$ = i3[1], r3.nn = i3[2], r3;
            }
            return a(t3, n3), t3.prototype.J = function() {
              var n4 = this.H.words;
              if (2 !== n4.length && 4 !== n4.length && n4.length < 6) throw new Error("Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.");
              var t4 = n4.slice(0, 2), r3 = n4.length < 4 ? n4.slice(0, 2) : n4.slice(2, 4), i3 = n4.length < 6 ? n4.slice(0, 2) : n4.slice(4, 6);
              return [f.DES.createEncryptor(new c.e(t4)), f.DES.createEncryptor(new c.e(r3)), f.DES.createEncryptor(new c.e(i3))];
            }, t3.prototype.A = function() {
              var n4 = this.J();
              this.Y = n4[0], this.$ = n4[1], this.nn = n4[2];
            }, t3.prototype.encryptBlock = function(n4, t4) {
              this.Y.encryptBlock(n4, t4), this.$.decryptBlock(n4, t4), this.nn.encryptBlock(n4, t4);
            }, t3.prototype.decryptBlock = function(n4, t4) {
              this.nn.decryptBlock(n4, t4), this.$.encryptBlock(n4, t4), this.Y.decryptBlock(n4, t4);
            }, t3.createEncryptor = function(n4, r3) {
              return new t3(h(h({}, r3 = void 0 === r3 ? {} : r3), { key: n4, transformMode: u.t.ENC_TRANSFORM_MODE }));
            }, t3.createDecryptor = function(n4, r3) {
              return new t3(h(h({}, r3 = void 0 === r3 ? {} : r3), { key: n4, transformMode: u.t.DEC_TRANSFORM_MODE }));
            }, t3.encrypt = function(n4, r3, i3) {
              return "string" == typeof r3 ? s.E.encrypt(t3, n4, r3, i3) : e.D.encrypt(t3, n4, r3, i3);
            }, t3.decrypt = function(n4, r3, i3) {
              return "string" == typeof r3 ? s.E.decrypt(t3, n4, r3, i3) : e.D.decrypt(t3, n4, r3, i3);
            }, t3.keySize = 6, t3.ivSize = 2, t3;
          }(o.G);
        }, 7753: function(n2, t2, r2) {
          r2.d(t2, { GMAC: function() {
            return f;
          } });
          var i2 = r2(4768), e = r2(3354), o = r2(9691), u = r2(5607);
          function f(n3, t3, r3, f2, c) {
            var s = "string" == typeof n3 ? i2.d.parse(n3) : n3, a = r3 || new e.e([0, 0, 0, 0]), h = c && c.Cipher ? c.Cipher : o.AES, v = "string" == typeof t3 ? i2.d.parse(t3) : t3, w = f2 || 16;
            return u.V.mac(h, v, a, s, void 0, w);
          }
        }, 6367: function(n2, t2, r2) {
          r2.d(t2, { Hmac: function() {
            return e;
          } });
          var i2 = r2(4768), e = function() {
            function n3(n4, t3) {
              this.tn = n4, "string" == typeof t3 && (t3 = i2.d.parse(t3));
              var r3 = n4.blockSize, e2 = 4 * r3;
              t3.nSigBytes > e2 && (t3 = n4.finalize(t3)), t3.clamp();
              for (var o = this.rn = t3.clone(), u = this.en = t3.clone(), f = o.words, c = u.words, s = 0; s < r3; s++) f[s] ^= 1549556828, c[s] ^= 909522486;
              u.nSigBytes = e2, o.nSigBytes = e2, this.reset();
            }
            return n3.prototype.reset = function() {
              this.tn.reset(), this.tn.update(this.en);
            }, n3.prototype.update = function(n4) {
              return this.tn.update(n4), this;
            }, n3.prototype.finalize = function(n4) {
              var t3 = this.tn.finalize(n4);
              return this.tn.reset(), this.tn.finalize(this.rn.clone().concat(t3));
            }, n3;
          }();
        }, 3027: function(n2, t2, r2) {
          r2.d(t2, { HmacMD5: function() {
            return o;
          } });
          var i2 = r2(6367), e = r2(670);
          function o(n3, t3) {
            return new i2.Hmac(new e.MD5(), t3).finalize(n3);
          }
        }, 149: function(n2, t2, r2) {
          r2.d(t2, { HmacSHA1: function() {
            return o;
          } });
          var i2 = r2(6367), e = r2(3173);
          function o(n3, t3) {
            return new i2.Hmac(new e.SHA1(), t3).finalize(n3);
          }
        }, 4105: function(n2, t2, r2) {
          r2.d(t2, { HmacSHA224: function() {
            return o;
          } });
          var i2 = r2(6367), e = r2(766);
          function o(n3, t3) {
            return new i2.Hmac(new e.SHA224(), t3).finalize(n3);
          }
        }, 980: function(n2, t2, r2) {
          r2.d(t2, { HmacSHA256: function() {
            return o;
          } });
          var i2 = r2(6367), e = r2(5561);
          function o(n3, t3) {
            return new i2.Hmac(new e.SHA256(), t3).finalize(n3);
          }
        }, 5838: function(n2, t2, r2) {
          r2.d(t2, { HmacSHA384: function() {
            return o;
          } });
          var i2 = r2(6367), e = r2(6324);
          function o(n3, t3) {
            return new i2.Hmac(new e.SHA384(), t3).finalize(n3);
          }
        }, 9902: function(n2, t2, r2) {
          r2.d(t2, { HmacSHA512: function() {
            return o;
          } });
          var i2 = r2(6367), e = r2(7491);
          function o(n3, t3) {
            return new i2.Hmac(new e.SHA512(), t3).finalize(n3);
          }
        }, 670: function(n2, t2, r2) {
          r2.d(t2, { MD5: function() {
            return v;
          } });
          var i2, e = r2(3354), o = r2(1868), u = (i2 = function(n3, t3) {
            return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n4, t4) {
              n4.__proto__ = t4;
            } || function(n4, t4) {
              for (var r3 in t4) Object.prototype.hasOwnProperty.call(t4, r3) && (n4[r3] = t4[r3]);
            })(n3, t3);
          }, function(n3, t3) {
            function r3() {
              this.constructor = n3;
            }
            i2(n3, t3), n3.prototype = null === t3 ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
          }), f = [];
          function c(n3, t3, r3, i3, e2, o2, u2) {
            var f2 = n3 + (t3 & r3 | ~t3 & i3) + e2 + u2;
            return (f2 << o2 | f2 >>> 32 - o2) + t3;
          }
          function s(n3, t3, r3, i3, e2, o2, u2) {
            var f2 = n3 + (t3 & i3 | r3 & ~i3) + e2 + u2;
            return (f2 << o2 | f2 >>> 32 - o2) + t3;
          }
          function a(n3, t3, r3, i3, e2, o2, u2) {
            var f2 = n3 + (t3 ^ r3 ^ i3) + e2 + u2;
            return (f2 << o2 | f2 >>> 32 - o2) + t3;
          }
          function h(n3, t3, r3, i3, e2, o2, u2) {
            var f2 = n3 + (r3 ^ (t3 | ~i3)) + e2 + u2;
            return (f2 << o2 | f2 >>> 32 - o2) + t3;
          }
          !function() {
            for (var n3 = 0; n3 < 64; n3++) f[n3] = 4294967296 * Math.abs(Math.sin(n3 + 1)) | 0;
          }();
          var v = function(n3) {
            function t3(t4) {
              var r3 = n3.call(this, t4) || this;
              return r3.on = new e.e([1732584193, 4023233417, 2562383102, 271733878]), t4 && void 0 !== t4.hash && (r3.on = t4.hash.clone()), r3;
            }
            return u(t3, n3), t3.prototype.A = function() {
              this.on = new e.e([1732584193, 4023233417, 2562383102, 271733878]);
            }, t3.prototype.un = function(n4, t4) {
              for (var r3 = 0; r3 < 16; r3++) {
                var i3 = t4 + r3, e2 = n4[i3];
                n4[i3] = 16711935 & (e2 << 8 | e2 >>> 24) | 4278255360 & (e2 << 24 | e2 >>> 8);
              }
              var o2 = this.on.words, u2 = n4[t4], v2 = n4[t4 + 1], w = n4[t4 + 2], l = n4[t4 + 3], b = n4[t4 + 4], d = n4[t4 + 5], y = n4[t4 + 6], p = n4[t4 + 7], O = n4[t4 + 8], j = n4[t4 + 9], _ = n4[t4 + 10], m = n4[t4 + 11], A = n4[t4 + 12], g = n4[t4 + 13], E = n4[t4 + 14], S = n4[t4 + 15], M = o2[0], k = o2[1], H = o2[2], C = o2[3];
              M = c(M, k, H, C, u2, 7, f[0]), C = c(C, M, k, H, v2, 12, f[1]), H = c(H, C, M, k, w, 17, f[2]), k = c(k, H, C, M, l, 22, f[3]), M = c(M, k, H, C, b, 7, f[4]), C = c(C, M, k, H, d, 12, f[5]), H = c(H, C, M, k, y, 17, f[6]), k = c(k, H, C, M, p, 22, f[7]), M = c(M, k, H, C, O, 7, f[8]), C = c(C, M, k, H, j, 12, f[9]), H = c(H, C, M, k, _, 17, f[10]), k = c(k, H, C, M, m, 22, f[11]), M = c(M, k, H, C, A, 7, f[12]), C = c(C, M, k, H, g, 12, f[13]), H = c(H, C, M, k, E, 17, f[14]), M = s(M, k = c(k, H, C, M, S, 22, f[15]), H, C, v2, 5, f[16]), C = s(C, M, k, H, y, 9, f[17]), H = s(H, C, M, k, m, 14, f[18]), k = s(k, H, C, M, u2, 20, f[19]), M = s(M, k, H, C, d, 5, f[20]), C = s(C, M, k, H, _, 9, f[21]), H = s(H, C, M, k, S, 14, f[22]), k = s(k, H, C, M, b, 20, f[23]), M = s(M, k, H, C, j, 5, f[24]), C = s(C, M, k, H, E, 9, f[25]), H = s(H, C, M, k, l, 14, f[26]), k = s(k, H, C, M, O, 20, f[27]), M = s(M, k, H, C, g, 5, f[28]), C = s(C, M, k, H, w, 9, f[29]), H = s(H, C, M, k, p, 14, f[30]), M = a(M, k = s(k, H, C, M, A, 20, f[31]), H, C, d, 4, f[32]), C = a(C, M, k, H, O, 11, f[33]), H = a(H, C, M, k, m, 16, f[34]), k = a(k, H, C, M, E, 23, f[35]), M = a(M, k, H, C, v2, 4, f[36]), C = a(C, M, k, H, b, 11, f[37]), H = a(H, C, M, k, p, 16, f[38]), k = a(k, H, C, M, _, 23, f[39]), M = a(M, k, H, C, g, 4, f[40]), C = a(C, M, k, H, u2, 11, f[41]), H = a(H, C, M, k, l, 16, f[42]), k = a(k, H, C, M, y, 23, f[43]), M = a(M, k, H, C, j, 4, f[44]), C = a(C, M, k, H, A, 11, f[45]), H = a(H, C, M, k, S, 16, f[46]), M = h(M, k = a(k, H, C, M, w, 23, f[47]), H, C, u2, 6, f[48]), C = h(C, M, k, H, p, 10, f[49]), H = h(H, C, M, k, E, 15, f[50]), k = h(k, H, C, M, d, 21, f[51]), M = h(M, k, H, C, A, 6, f[52]), C = h(C, M, k, H, l, 10, f[53]), H = h(H, C, M, k, _, 15, f[54]), k = h(k, H, C, M, v2, 21, f[55]), M = h(M, k, H, C, O, 6, f[56]), C = h(C, M, k, H, S, 10, f[57]), H = h(H, C, M, k, y, 15, f[58]), k = h(k, H, C, M, g, 21, f[59]), M = h(M, k, H, C, b, 6, f[60]), C = h(C, M, k, H, m, 10, f[61]), H = h(H, C, M, k, w, 15, f[62]), k = h(k, H, C, M, j, 21, f[63]), o2[0] = o2[0] + M | 0, o2[1] = o2[1] + k | 0, o2[2] = o2[2] + H | 0, o2[3] = o2[3] + C | 0;
            }, t3.prototype.fn = function() {
              var n4 = this.cn, t4 = n4.words, r3 = 8 * this.sn, i3 = 8 * n4.nSigBytes;
              t4[i3 >>> 5] |= 128 << 24 - i3 % 32;
              var e2 = Math.floor(r3 / 4294967296), o2 = r3;
              t4[15 + (i3 + 64 >>> 9 << 4)] = 16711935 & (e2 << 8 | e2 >>> 24) | 4278255360 & (e2 << 24 | e2 >>> 8), t4[14 + (i3 + 64 >>> 9 << 4)] = 16711935 & (o2 << 8 | o2 >>> 24) | 4278255360 & (o2 << 24 | o2 >>> 8), n4.nSigBytes = 4 * (t4.length + 1), this.an();
              for (var u2 = this.on, f2 = u2.words, c2 = 0; c2 < 4; c2++) {
                var s2 = f2[c2];
                f2[c2] = 16711935 & (s2 << 8 | s2 >>> 24) | 4278255360 & (s2 << 24 | s2 >>> 8);
              }
              return u2;
            }, t3.prototype.clone = function() {
              return new t3({ hash: this.on, blockSize: this.N, data: this.cn, nBytes: this.sn });
            }, t3.hash = function(n4) {
              return new t3().finalize(n4);
            }, t3;
          }(o.P);
        }, 4615: function(n2, t2, r2) {
          r2.d(t2, { RC4: function() {
            return s;
          } });
          var i2, e = r2(30), o = r2(5693), u = r2(9109), f = (i2 = function(n3, t3) {
            return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n4, t4) {
              n4.__proto__ = t4;
            } || function(n4, t4) {
              for (var r3 in t4) Object.prototype.hasOwnProperty.call(t4, r3) && (n4[r3] = t4[r3]);
            })(n3, t3);
          }, function(n3, t3) {
            function r3() {
              this.constructor = n3;
            }
            i2(n3, t3), n3.prototype = null === t3 ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
          }), c = function() {
            return (c = Object.assign || function(n3) {
              for (var t3, r3 = 1, i3 = arguments.length; r3 < i3; r3++) for (var e2 in t3 = arguments[r3]) Object.prototype.hasOwnProperty.call(t3, e2) && (n3[e2] = t3[e2]);
              return n3;
            }).apply(this, arguments);
          }, s = function(n3) {
            function t3(t4) {
              var r3 = n3.call(this, t4) || this;
              return r3.S = [], r3.i = 0, r3.j = 0, r3.O = t4, r3.A(), r3;
            }
            return f(t3, n3), t3.prototype.A = function() {
              var n4 = this.H, t4 = n4.words, r3 = n4.nSigBytes;
              this.S = [];
              for (var i3 = 0; i3 < 256; i3++) this.S[i3] = i3;
              i3 = 0;
              for (var e2 = 0; i3 < 256; i3++) {
                var o2 = i3 % r3, u2 = t4[o2 >>> 2] >>> 24 - o2 % 4 * 8 & 255;
                e2 = (e2 + this.S[i3] + u2) % 256;
                var f2 = this.S[i3];
                this.S[i3] = this.S[e2], this.S[e2] = f2;
              }
              this.i = this.j = 0;
            }, t3.prototype.un = function(n4, t4) {
              n4[t4] ^= this.generateKeyStreamWord();
            }, t3.prototype.generateKeyStreamWord = function() {
              for (var n4 = this.S, t4 = this.i, r3 = this.j, i3 = 0, e2 = 0; e2 < 4; e2++) {
                r3 = (r3 + n4[t4 = (t4 + 1) % 256]) % 256;
                var o2 = n4[t4];
                n4[t4] = n4[r3], n4[r3] = o2, i3 |= n4[(n4[t4] + n4[r3]) % 256] << 24 - 8 * e2;
              }
              return this.i = t4, this.j = r3, i3;
            }, t3.createEncryptor = function(n4, r3) {
              return new t3(c(c({}, r3 = void 0 === r3 ? {} : r3), { key: n4 }));
            }, t3.createDecryptor = function(n4, r3) {
              return new t3(c(c({}, r3 = void 0 === r3 ? {} : r3), { key: n4 }));
            }, t3.encrypt = function(n4, r3, i3) {
              return "string" == typeof r3 ? o.E.encrypt(t3, n4, r3, i3) : u.D.encrypt(t3, n4, r3, i3);
            }, t3.decrypt = function(n4, r3, i3) {
              return "string" == typeof r3 ? o.E.decrypt(t3, n4, r3, i3) : u.D.decrypt(t3, n4, r3, i3);
            }, t3.ivSize = 0, t3.keySize = 8, t3;
          }(e.q);
        }, 9639: function(n2, t2, r2) {
          r2.d(t2, { RC4Drop: function() {
            return s;
          } });
          var i2, e = r2(5693), o = r2(9109), u = r2(4615), f = (i2 = function(n3, t3) {
            return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n4, t4) {
              n4.__proto__ = t4;
            } || function(n4, t4) {
              for (var r3 in t4) Object.prototype.hasOwnProperty.call(t4, r3) && (n4[r3] = t4[r3]);
            })(n3, t3);
          }, function(n3, t3) {
            function r3() {
              this.constructor = n3;
            }
            i2(n3, t3), n3.prototype = null === t3 ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
          }), c = function() {
            return (c = Object.assign || function(n3) {
              for (var t3, r3 = 1, i3 = arguments.length; r3 < i3; r3++) for (var e2 in t3 = arguments[r3]) Object.prototype.hasOwnProperty.call(t3, e2) && (n3[e2] = t3[e2]);
              return n3;
            }).apply(this, arguments);
          }, s = function(n3) {
            function t3(t4) {
              var r3 = n3.call(this, t4) || this;
              return r3.drop = 192, r3.O = t4, t4 && "number" == typeof t4.drop && (r3.drop = t4.drop), r3.A(), r3;
            }
            return f(t3, n3), t3.prototype.A = function() {
              n3.prototype.A.call(this);
              for (var t4 = this.drop; t4 > 0; t4--) this.generateKeyStreamWord();
            }, t3.createEncryptor = function(n4, r3) {
              return new t3(c(c({}, r3 = void 0 === r3 ? {} : r3), { key: n4 }));
            }, t3.createDecryptor = function(n4, r3) {
              return new t3(c(c({}, r3 = void 0 === r3 ? {} : r3), { key: n4 }));
            }, t3.encrypt = function(n4, r3, i3) {
              return "string" == typeof r3 ? e.E.encrypt(t3, n4, r3, i3) : o.D.encrypt(t3, n4, r3, i3);
            }, t3.decrypt = function(n4, r3, i3) {
              return "string" == typeof r3 ? e.E.decrypt(t3, n4, r3, i3) : o.D.decrypt(t3, n4, r3, i3);
            }, t3;
          }(u.RC4);
        }, 7104: function(n2, t2, r2) {
          r2.d(t2, { RIPEMD160: function() {
            return O;
          } });
          var i2, e = r2(1868), o = r2(3354), u = (i2 = function(n3, t3) {
            return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n4, t4) {
              n4.__proto__ = t4;
            } || function(n4, t4) {
              for (var r3 in t4) Object.prototype.hasOwnProperty.call(t4, r3) && (n4[r3] = t4[r3]);
            })(n3, t3);
          }, function(n3, t3) {
            function r3() {
              this.constructor = n3;
            }
            i2(n3, t3), n3.prototype = null === t3 ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
          }), f = new o.e([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]), c = new o.e([5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]), s = new o.e([11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]), a = new o.e([8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]), h = new o.e([0, 1518500249, 1859775393, 2400959708, 2840853838]), v = new o.e([1352829926, 1548603684, 1836072691, 2053994217, 0]);
          function w(n3, t3, r3) {
            return n3 ^ t3 ^ r3;
          }
          function l(n3, t3, r3) {
            return n3 & t3 | ~n3 & r3;
          }
          function b(n3, t3, r3) {
            return (n3 | ~t3) ^ r3;
          }
          function d(n3, t3, r3) {
            return n3 & r3 | t3 & ~r3;
          }
          function y(n3, t3, r3) {
            return n3 ^ (t3 | ~r3);
          }
          function p(n3, t3) {
            return n3 << t3 | n3 >>> 32 - t3;
          }
          var O = function(n3) {
            function t3(t4) {
              var r3 = n3.call(this, t4) || this;
              return r3.on = new o.e([1732584193, 4023233417, 2562383102, 271733878, 3285377520]), r3.O = t4, t4 && void 0 !== t4.hash && (r3.on = t4.hash.clone()), r3;
            }
            return u(t3, n3), t3.prototype.A = function() {
              this.on = new o.e([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
            }, t3.prototype.un = function(n4, t4) {
              for (var r3 = 0; r3 < 16; r3++) {
                var i3 = t4 + r3, e2 = n4[i3];
                n4[i3] = 16711935 & (e2 << 8 | e2 >>> 24) | 4278255360 & (e2 << 24 | e2 >>> 8);
              }
              var o2, u2, O2, j, _, m, A, g, E, S, M, k = this.on.words, H = h.words, C = v.words, B = f.words, N = c.words, I = s.words, z = a.words;
              m = o2 = k[0], A = u2 = k[1], g = O2 = k[2], E = j = k[3], S = _ = k[4];
              for (r3 = 0; r3 < 80; r3 += 1) M = o2 + n4[t4 + B[r3]] | 0, M += r3 < 16 ? w(u2, O2, j) + H[0] : r3 < 32 ? l(u2, O2, j) + H[1] : r3 < 48 ? b(u2, O2, j) + H[2] : r3 < 64 ? d(u2, O2, j) + H[3] : y(u2, O2, j) + H[4], M = (M = p(M |= 0, I[r3])) + _ | 0, o2 = _, _ = j, j = p(O2, 10), O2 = u2, u2 = M, M = m + n4[t4 + N[r3]] | 0, M += r3 < 16 ? y(A, g, E) + C[0] : r3 < 32 ? d(A, g, E) + C[1] : r3 < 48 ? b(A, g, E) + C[2] : r3 < 64 ? l(A, g, E) + C[3] : w(A, g, E) + C[4], M = (M = p(M |= 0, z[r3])) + S | 0, m = S, S = E, E = p(g, 10), g = A, A = M;
              M = k[1] + O2 + E | 0, k[1] = k[2] + j + S | 0, k[2] = k[3] + _ + m | 0, k[3] = k[4] + o2 + A | 0, k[4] = k[0] + u2 + g | 0, k[0] = M;
            }, t3.prototype.fn = function() {
              var n4 = this.cn, t4 = n4.words, r3 = 8 * this.sn, i3 = 8 * n4.nSigBytes;
              t4[i3 >>> 5] |= 128 << 24 - i3 % 32, t4[14 + (i3 + 64 >>> 9 << 4)] = 16711935 & (r3 << 8 | r3 >>> 24) | 4278255360 & (r3 << 24 | r3 >>> 8), n4.nSigBytes = 4 * (t4.length + 1), this.an();
              for (var e2 = this.on, o2 = e2.words, u2 = 0; u2 < 5; u2++) {
                var f2 = o2[u2];
                o2[u2] = 16711935 & (f2 << 8 | f2 >>> 24) | 4278255360 & (f2 << 24 | f2 >>> 8);
              }
              return e2;
            }, t3.prototype.clone = function() {
              return new t3({ hash: this.on, blockSize: this.N, data: this.cn, nBytes: this.sn });
            }, t3.hash = function(n4, r3) {
              return new t3(r3).finalize(n4);
            }, t3;
          }(e.P);
        }, 5187: function(n2, t2, r2) {
          r2.d(t2, { Rabbit: function() {
            return s;
          } });
          var i2, e = r2(30), o = r2(5693), u = r2(9109), f = (i2 = function(n3, t3) {
            return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n4, t4) {
              n4.__proto__ = t4;
            } || function(n4, t4) {
              for (var r3 in t4) Object.prototype.hasOwnProperty.call(t4, r3) && (n4[r3] = t4[r3]);
            })(n3, t3);
          }, function(n3, t3) {
            function r3() {
              this.constructor = n3;
            }
            i2(n3, t3), n3.prototype = null === t3 ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
          }), c = function() {
            return (c = Object.assign || function(n3) {
              for (var t3, r3 = 1, i3 = arguments.length; r3 < i3; r3++) for (var e2 in t3 = arguments[r3]) Object.prototype.hasOwnProperty.call(t3, e2) && (n3[e2] = t3[e2]);
              return n3;
            }).apply(this, arguments);
          }, s = function(n3) {
            function t3(t4) {
              var r3 = n3.call(this, t4) || this;
              return r3.N = 4, r3.S = [], r3.C = [], r3.G = [], r3.hn = [], r3.vn = [], r3.wn = 0, r3.O = t4, r3.A(), r3;
            }
            return f(t3, n3), t3.prototype.A = function() {
              for (var n4 = this.H.words, t4 = this.ln, r3 = 0; r3 < 4; r3++) n4[r3] = 16711935 & (n4[r3] << 8 | n4[r3] >>> 24) | 4278255360 & (n4[r3] << 24 | n4[r3] >>> 8);
              var i3 = this.hn = [n4[0], n4[3] << 16 | n4[2] >>> 16, n4[1], n4[0] << 16 | n4[3] >>> 16, n4[2], n4[1] << 16 | n4[0] >>> 16, n4[3], n4[2] << 16 | n4[1] >>> 16], e2 = this.vn = [n4[2] << 16 | n4[2] >>> 16, 4294901760 & n4[0] | 65535 & n4[1], n4[3] << 16 | n4[3] >>> 16, 4294901760 & n4[1] | 65535 & n4[2], n4[0] << 16 | n4[0] >>> 16, 4294901760 & n4[2] | 65535 & n4[3], n4[1] << 16 | n4[1] >>> 16, 4294901760 & n4[3] | 65535 & n4[0]];
              this.wn = 0;
              for (r3 = 0; r3 < 4; r3++) this.nextState();
              for (r3 = 0; r3 < 8; r3++) e2[r3] ^= i3[r3 + 4 & 7];
              if (t4) {
                var o2 = t4.words, u2 = o2[0], f2 = o2[1], c2 = 16711935 & (u2 << 8 | u2 >>> 24) | 4278255360 & (u2 << 24 | u2 >>> 8), s2 = 16711935 & (f2 << 8 | f2 >>> 24) | 4278255360 & (f2 << 24 | f2 >>> 8), a = c2 >>> 16 | 4294901760 & s2, h = s2 << 16 | 65535 & c2;
                e2[0] ^= c2, e2[1] ^= a, e2[2] ^= s2, e2[3] ^= h, e2[4] ^= c2, e2[5] ^= a, e2[6] ^= s2, e2[7] ^= h;
                for (r3 = 0; r3 < 4; r3++) this.nextState();
              }
            }, t3.prototype.un = function(n4, t4) {
              var r3 = this.hn;
              this.nextState(), this.S[0] = r3[0] ^ r3[5] >>> 16 ^ r3[3] << 16, this.S[1] = r3[2] ^ r3[7] >>> 16 ^ r3[5] << 16, this.S[2] = r3[4] ^ r3[1] >>> 16 ^ r3[7] << 16, this.S[3] = r3[6] ^ r3[3] >>> 16 ^ r3[1] << 16;
              for (var i3 = 0; i3 < 4; i3++) this.S[i3] = 16711935 & (this.S[i3] << 8 | this.S[i3] >>> 24) | 4278255360 & (this.S[i3] << 24 | this.S[i3] >>> 8), n4[t4 + i3] ^= this.S[i3];
            }, t3.prototype.nextState = function() {
              for (var n4 = this.hn, t4 = this.vn, r3 = 0; r3 < 8; r3++) this.C[r3] = t4[r3];
              t4[0] = t4[0] + 1295307597 + this.wn | 0, t4[1] = t4[1] + 3545052371 + (t4[0] >>> 0 < this.C[0] >>> 0 ? 1 : 0) | 0, t4[2] = t4[2] + 886263092 + (t4[1] >>> 0 < this.C[1] >>> 0 ? 1 : 0) | 0, t4[3] = t4[3] + 1295307597 + (t4[2] >>> 0 < this.C[2] >>> 0 ? 1 : 0) | 0, t4[4] = t4[4] + 3545052371 + (t4[3] >>> 0 < this.C[3] >>> 0 ? 1 : 0) | 0, t4[5] = t4[5] + 886263092 + (t4[4] >>> 0 < this.C[4] >>> 0 ? 1 : 0) | 0, t4[6] = t4[6] + 1295307597 + (t4[5] >>> 0 < this.C[5] >>> 0 ? 1 : 0) | 0, t4[7] = t4[7] + 3545052371 + (t4[6] >>> 0 < this.C[6] >>> 0 ? 1 : 0) | 0, this.wn = t4[7] >>> 0 < this.C[7] >>> 0 ? 1 : 0;
              for (r3 = 0; r3 < 8; r3++) {
                var i3 = n4[r3] + t4[r3], e2 = 65535 & i3, o2 = i3 >>> 16, u2 = ((e2 * e2 >>> 17) + e2 * o2 >>> 15) + o2 * o2, f2 = ((4294901760 & i3) * i3 | 0) + ((65535 & i3) * i3 | 0);
                this.G[r3] = u2 ^ f2;
              }
              var c2 = this.G;
              n4[0] = c2[0] + (c2[7] << 16 | c2[7] >>> 16) + (c2[6] << 16 | c2[6] >>> 16) | 0, n4[1] = c2[1] + (c2[0] << 8 | c2[0] >>> 24) + c2[7] | 0, n4[2] = c2[2] + (c2[1] << 16 | c2[1] >>> 16) + (c2[0] << 16 | c2[0] >>> 16) | 0, n4[3] = c2[3] + (c2[2] << 8 | c2[2] >>> 24) + c2[1] | 0, n4[4] = c2[4] + (c2[3] << 16 | c2[3] >>> 16) + (c2[2] << 16 | c2[2] >>> 16) | 0, n4[5] = c2[5] + (c2[4] << 8 | c2[4] >>> 24) + c2[3] | 0, n4[6] = c2[6] + (c2[5] << 16 | c2[5] >>> 16) + (c2[4] << 16 | c2[4] >>> 16) | 0, n4[7] = c2[7] + (c2[6] << 8 | c2[6] >>> 24) + c2[5] | 0;
            }, t3.createEncryptor = function(n4, r3) {
              return new t3(c(c({}, r3 = void 0 === r3 ? {} : r3), { key: n4 }));
            }, t3.createDecryptor = function(n4, r3) {
              return new t3(c(c({}, r3 = void 0 === r3 ? {} : r3), { key: n4 }));
            }, t3.encrypt = function(n4, r3, i3) {
              return "string" == typeof r3 ? o.E.encrypt(t3, n4, r3, i3) : u.D.encrypt(t3, n4, r3, i3);
            }, t3.decrypt = function(n4, r3, i3) {
              return "string" == typeof r3 ? o.E.decrypt(t3, n4, r3, i3) : u.D.decrypt(t3, n4, r3, i3);
            }, t3.ivSize = 4, t3;
          }(e.q);
        }, 3173: function(n2, t2, r2) {
          r2.d(t2, { SHA1: function() {
            return c;
          } });
          var i2, e = r2(1868), o = r2(3354), u = (i2 = function(n3, t3) {
            return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n4, t4) {
              n4.__proto__ = t4;
            } || function(n4, t4) {
              for (var r3 in t4) Object.prototype.hasOwnProperty.call(t4, r3) && (n4[r3] = t4[r3]);
            })(n3, t3);
          }, function(n3, t3) {
            function r3() {
              this.constructor = n3;
            }
            i2(n3, t3), n3.prototype = null === t3 ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
          }), f = [], c = function(n3) {
            function t3(t4) {
              var r3 = n3.call(this, t4) || this;
              return r3.on = new o.e([1732584193, 4023233417, 2562383102, 271733878, 3285377520]), r3.O = t4, t4 && void 0 !== t4.hash && (r3.on = t4.hash.clone()), r3;
            }
            return u(t3, n3), t3.prototype.A = function() {
              this.on = new o.e([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
            }, t3.prototype.un = function(n4, t4) {
              for (var r3 = this.on.words, i3 = r3[0], e2 = r3[1], o2 = r3[2], u2 = r3[3], c2 = r3[4], s = 0; s < 80; s++) {
                if (s < 16) f[s] = 0 | n4[t4 + s];
                else {
                  var a = f[s - 3] ^ f[s - 8] ^ f[s - 14] ^ f[s - 16];
                  f[s] = a << 1 | a >>> 31;
                }
                var h = (i3 << 5 | i3 >>> 27) + c2 + f[s];
                h += s < 20 ? 1518500249 + (e2 & o2 | ~e2 & u2) : s < 40 ? 1859775393 + (e2 ^ o2 ^ u2) : s < 60 ? (e2 & o2 | e2 & u2 | o2 & u2) - 1894007588 : (e2 ^ o2 ^ u2) - 899497514, c2 = u2, u2 = o2, o2 = e2 << 30 | e2 >>> 2, e2 = i3, i3 = h;
              }
              r3[0] = r3[0] + i3 | 0, r3[1] = r3[1] + e2 | 0, r3[2] = r3[2] + o2 | 0, r3[3] = r3[3] + u2 | 0, r3[4] = r3[4] + c2 | 0;
            }, t3.prototype.fn = function() {
              var n4 = this.cn.words, t4 = 8 * this.sn, r3 = 8 * this.cn.nSigBytes;
              return n4[r3 >>> 5] |= 128 << 24 - r3 % 32, n4[14 + (r3 + 64 >>> 9 << 4)] = Math.floor(t4 / 4294967296), n4[15 + (r3 + 64 >>> 9 << 4)] = t4, this.cn.nSigBytes = 4 * n4.length, this.an(), this.on;
            }, t3.prototype.clone = function() {
              return new t3({ hash: this.on, blockSize: this.N, data: this.cn, nBytes: this.sn });
            }, t3.hash = function(n4, r3) {
              return new t3(r3).finalize(n4);
            }, t3;
          }(e.P);
        }, 766: function(n2, t2, r2) {
          r2.d(t2, { SHA224: function() {
            return f;
          } });
          var i2, e = r2(3354), o = r2(5561), u = (i2 = function(n3, t3) {
            return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n4, t4) {
              n4.__proto__ = t4;
            } || function(n4, t4) {
              for (var r3 in t4) Object.prototype.hasOwnProperty.call(t4, r3) && (n4[r3] = t4[r3]);
            })(n3, t3);
          }, function(n3, t3) {
            function r3() {
              this.constructor = n3;
            }
            i2(n3, t3), n3.prototype = null === t3 ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
          }), f = function(n3) {
            function t3(t4) {
              var r3 = n3.call(this, t4) || this;
              return r3.on = new e.e([3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428]), r3.O = t4, t4 && void 0 !== t4.hash && (r3.on = t4.hash.clone()), r3;
            }
            return u(t3, n3), t3.prototype.A = function() {
              this.on = new e.e([3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428]);
            }, t3.prototype.fn = function() {
              var t4 = n3.prototype.fn.call(this);
              return t4.nSigBytes -= 4, t4;
            }, t3.prototype.clone = function() {
              return new t3({ hash: this.on, blockSize: this.N, data: this.cn, nBytes: this.sn });
            }, t3.hash = function(n4, r3) {
              return new t3(r3).finalize(n4);
            }, t3;
          }(o.SHA256);
        }, 5561: function(n2, t2, r2) {
          r2.d(t2, { SHA256: function() {
            return v;
          } });
          var i2, e = r2(1868), o = r2(3354), u = (i2 = function(n3, t3) {
            return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n4, t4) {
              n4.__proto__ = t4;
            } || function(n4, t4) {
              for (var r3 in t4) Object.prototype.hasOwnProperty.call(t4, r3) && (n4[r3] = t4[r3]);
            })(n3, t3);
          }, function(n3, t3) {
            function r3() {
              this.constructor = n3;
            }
            i2(n3, t3), n3.prototype = null === t3 ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
          }), f = [], c = [];
          function s(n3) {
            for (var t3 = Math.sqrt(n3), r3 = 2; r3 <= t3; r3++) if (!(n3 % r3)) return false;
            return true;
          }
          function a(n3) {
            return 4294967296 * (n3 - (0 | n3)) | 0;
          }
          !function() {
            for (var n3 = 2, t3 = 0; t3 < 64; ) s(n3) && (t3 < 8 && (f[t3] = a(Math.pow(n3, 0.5))), c[t3] = a(Math.pow(n3, 1 / 3)), t3++), n3++;
          }();
          var h = [], v = function(n3) {
            function t3(t4) {
              var r3 = n3.call(this, t4) || this;
              return r3.on = new o.e(f.slice(0)), r3.O = t4, t4 && void 0 !== t4.hash && (r3.on = t4.hash.clone()), r3;
            }
            return u(t3, n3), t3.prototype.A = function() {
              this.on = new o.e(f.slice(0));
            }, t3.prototype.un = function(n4, t4) {
              for (var r3 = this.on.words, i3 = r3[0], e2 = r3[1], o2 = r3[2], u2 = r3[3], f2 = r3[4], s2 = r3[5], a2 = r3[6], v2 = r3[7], w = 0; w < 64; w++) {
                if (w < 16) h[w] = 0 | n4[t4 + w];
                else {
                  var l = h[w - 15], b = (l << 25 | l >>> 7) ^ (l << 14 | l >>> 18) ^ l >>> 3, d = h[w - 2], y = (d << 15 | d >>> 17) ^ (d << 13 | d >>> 19) ^ d >>> 10;
                  h[w] = b + h[w - 7] + y + h[w - 16];
                }
                var p = i3 & e2 ^ i3 & o2 ^ e2 & o2, O = (i3 << 30 | i3 >>> 2) ^ (i3 << 19 | i3 >>> 13) ^ (i3 << 10 | i3 >>> 22), j = v2 + ((f2 << 26 | f2 >>> 6) ^ (f2 << 21 | f2 >>> 11) ^ (f2 << 7 | f2 >>> 25)) + (f2 & s2 ^ ~f2 & a2) + c[w] + h[w];
                v2 = a2, a2 = s2, s2 = f2, f2 = u2 + j | 0, u2 = o2, o2 = e2, e2 = i3, i3 = j + (O + p) | 0;
              }
              r3[0] = r3[0] + i3 | 0, r3[1] = r3[1] + e2 | 0, r3[2] = r3[2] + o2 | 0, r3[3] = r3[3] + u2 | 0, r3[4] = r3[4] + f2 | 0, r3[5] = r3[5] + s2 | 0, r3[6] = r3[6] + a2 | 0, r3[7] = r3[7] + v2 | 0;
            }, t3.prototype.fn = function() {
              var n4 = this.cn.words, t4 = 8 * this.sn, r3 = 8 * this.cn.nSigBytes;
              return n4[r3 >>> 5] |= 128 << 24 - r3 % 32, n4[14 + (r3 + 64 >>> 9 << 4)] = Math.floor(t4 / 4294967296), n4[15 + (r3 + 64 >>> 9 << 4)] = t4, this.cn.nSigBytes = 4 * n4.length, this.an(), this.on;
            }, t3.prototype.clone = function() {
              return new t3({ hash: this.on, blockSize: this.N, data: this.cn, nBytes: this.sn });
            }, t3.hash = function(n4, r3) {
              return new t3(r3).finalize(n4);
            }, t3;
          }(e.P);
        }, 3408: function(n2, t2, r2) {
          r2.d(t2, { SHA3: function() {
            return v;
          } });
          var i2, e = r2(6957), o = r2(1868), u = r2(3354), f = (i2 = function(n3, t3) {
            return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n4, t4) {
              n4.__proto__ = t4;
            } || function(n4, t4) {
              for (var r3 in t4) Object.prototype.hasOwnProperty.call(t4, r3) && (n4[r3] = t4[r3]);
            })(n3, t3);
          }, function(n3, t3) {
            function r3() {
              this.constructor = n3;
            }
            i2(n3, t3), n3.prototype = null === t3 ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
          }), c = [], s = [], a = [];
          !function() {
            for (var n3 = 1, t3 = 0, r3 = 0; r3 < 24; r3++) {
              c[n3 + 5 * t3] = (r3 + 1) * (r3 + 2) / 2 % 64;
              var i3 = (2 * n3 + 3 * t3) % 5;
              n3 = t3 % 5, t3 = i3;
            }
            for (var o2 = 0; o2 < 5; o2++) for (var u2 = 0; u2 < 5; u2++) s[o2 + 5 * u2] = u2 + (2 * o2 + 3 * u2) % 5 * 5;
            for (var f2 = 1, h2 = 0; h2 < 24; h2++) {
              for (var v2 = 0, w = 0, l = 0; l < 7; l++) {
                if (1 & f2) {
                  var b = (1 << l) - 1;
                  b < 32 ? w ^= 1 << b : v2 ^= 1 << b - 32;
                }
                128 & f2 ? f2 = f2 << 1 ^ 113 : f2 <<= 1;
              }
              a[h2] = new e.r(v2, w);
            }
          }();
          var h = [];
          !function() {
            for (var n3 = 0; n3 < 25; n3++) h[n3] = new e.r(0, 0);
          }();
          var v = function(n3) {
            function t3(t4) {
              var r3 = n3.call(this, t4) || this;
              if (r3.N = 32, r3.bn = [], r3.dn = 512, r3.O = t4, t4) {
                if (void 0 !== t4.outputLength) {
                  if (![224, 256, 384, 512].includes(t4.outputLength)) throw new Error("Unsupported output length.");
                  r3.dn = t4.outputLength;
                }
                void 0 !== t4.state && (r3.bn = t4.state.map(function(n4) {
                  return n4.clone();
                }));
              }
              if (0 === r3.bn.length) for (var i3 = 0; i3 < 25; i3++) r3.bn[i3] = new e.r(0, 0);
              return r3.N = (1600 - 2 * r3.dn) / 32, r3;
            }
            return f(t3, n3), t3.prototype.A = function() {
              this.bn = [];
              for (var n4 = 0; n4 < 25; n4++) this.bn[n4] = new e.r(0, 0);
              this.N = (1600 - 2 * this.dn) / 32;
            }, t3.prototype.un = function(n4, t4) {
              for (var r3 = this.bn, i3 = this.N / 2, e2 = 0; e2 < i3; e2++) {
                var o2 = n4[t4 + 2 * e2], u2 = n4[t4 + 2 * e2 + 1];
                o2 = 16711935 & (o2 << 8 | o2 >>> 24) | 4278255360 & (o2 << 24 | o2 >>> 8), u2 = 16711935 & (u2 << 8 | u2 >>> 24) | 4278255360 & (u2 << 24 | u2 >>> 8), r3[e2].high ^= u2, r3[e2].low ^= o2;
              }
              for (var f2 = 0; f2 < 24; f2++) {
                for (var v2 = 0; v2 < 5; v2++) {
                  for (var w = 0, l = 0, b = 0; b < 5; b++) {
                    w ^= (k = r3[v2 + 5 * b]).high, l ^= k.low;
                  }
                  var d = h[v2];
                  d.high = w, d.low = l;
                }
                for (v2 = 0; v2 < 5; v2++) {
                  var y = h[(v2 + 4) % 5], p = h[(v2 + 1) % 5], O = p.high, j = p.low;
                  for (w = y.high ^ (O << 1 | j >>> 31), l = y.low ^ (j << 1 | O >>> 31), b = 0; b < 5; b++) {
                    (k = r3[v2 + 5 * b]).high ^= w, k.low ^= l;
                  }
                }
                for (var _ = 1; _ < 25; _++) {
                  w = void 0, l = void 0;
                  var m = r3[_].high, A = r3[_].low, g = c[_];
                  g < 32 ? (w = m << g | A >>> 32 - g, l = A << g | m >>> 32 - g) : (w = A << g - 32 | m >>> 64 - g, l = m << g - 32 | A >>> 64 - g);
                  var E = h[s[_]];
                  E.high = w, E.low = l;
                }
                var S = h[0], M = r3[0];
                S.high = M.high, S.low = M.low;
                for (v2 = 0; v2 < 5; v2++) for (b = 0; b < 5; b++) {
                  var k = r3[_ = v2 + 5 * b], H = h[_], C = h[(v2 + 1) % 5 + 5 * b], B = h[(v2 + 2) % 5 + 5 * b];
                  k.high = H.high ^ ~C.high & B.high, k.low = H.low ^ ~C.low & B.low;
                }
                var N = r3[0], I = a[f2];
                N.high ^= I.high, N.low ^= I.low;
              }
            }, t3.prototype.fn = function() {
              var n4 = this.cn, t4 = n4.words, r3 = 8 * n4.nSigBytes, i3 = 32 * this.blockSize;
              t4[r3 >>> 5] |= 1 << 24 - r3 % 32, t4[(Math.ceil((r3 + 1) / i3) * i3 >>> 5) - 1] |= 128, n4.nSigBytes = 4 * t4.length, this.an();
              for (var e2 = this.bn, o2 = this.dn / 8, f2 = o2 / 8, c2 = [], s2 = 0; s2 < f2; s2++) {
                var a2 = e2[s2], h2 = a2.high, v2 = a2.low;
                h2 = 16711935 & (h2 << 8 | h2 >>> 24) | 4278255360 & (h2 << 24 | h2 >>> 8), v2 = 16711935 & (v2 << 8 | v2 >>> 24) | 4278255360 & (v2 << 24 | v2 >>> 8), c2.push(v2), c2.push(h2);
              }
              return new u.e(c2, o2);
            }, t3.prototype.clone = function() {
              return new t3({ outputLength: this.dn, state: this.bn, blockSize: this.N, data: this.cn, nBytes: this.sn });
            }, t3.hash = function(n4, r3) {
              return new t3(r3).finalize(n4);
            }, t3;
          }(o.P);
        }, 6324: function(n2, t2, r2) {
          r2.d(t2, { SHA384: function() {
            return f;
          } });
          var i2, e = r2(6957), o = r2(7491), u = (i2 = function(n3, t3) {
            return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n4, t4) {
              n4.__proto__ = t4;
            } || function(n4, t4) {
              for (var r3 in t4) Object.prototype.hasOwnProperty.call(t4, r3) && (n4[r3] = t4[r3]);
            })(n3, t3);
          }, function(n3, t3) {
            function r3() {
              this.constructor = n3;
            }
            i2(n3, t3), n3.prototype = null === t3 ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
          }), f = function(n3) {
            function t3(t4) {
              var r3 = n3.call(this, t4) || this;
              return r3.on = new e.m([new e.r(3418070365, 3238371032), new e.r(1654270250, 914150663), new e.r(2438529370, 812702999), new e.r(355462360, 4144912697), new e.r(1731405415, 4290775857), new e.r(2394180231, 1750603025), new e.r(3675008525, 1694076839), new e.r(1203062813, 3204075428)]), r3.O = t4, t4 && void 0 !== t4.hash && (r3.on = t4.hash.clone()), r3;
            }
            return u(t3, n3), t3.prototype.A = function() {
              this.on = new e.m([new e.r(3418070365, 3238371032), new e.r(1654270250, 914150663), new e.r(2438529370, 812702999), new e.r(355462360, 4144912697), new e.r(1731405415, 4290775857), new e.r(2394180231, 1750603025), new e.r(3675008525, 1694076839), new e.r(1203062813, 3204075428)]);
            }, t3.prototype.fn = function() {
              var t4 = n3.prototype.fn.call(this);
              return t4.nSigBytes -= 16, t4;
            }, t3.prototype.clone = function() {
              return new t3({ hash: this.on, blockSize: this.N, data: this.cn, nBytes: this.sn });
            }, t3.hash = function(n4, r3) {
              return new t3(r3).finalize(n4);
            }, t3;
          }(o.SHA512);
        }, 7491: function(n2, t2, r2) {
          r2.d(t2, { SHA512: function() {
            return s;
          } });
          var i2, e = r2(1868), o = r2(6957), u = (i2 = function(n3, t3) {
            return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n4, t4) {
              n4.__proto__ = t4;
            } || function(n4, t4) {
              for (var r3 in t4) Object.prototype.hasOwnProperty.call(t4, r3) && (n4[r3] = t4[r3]);
            })(n3, t3);
          }, function(n3, t3) {
            function r3() {
              this.constructor = n3;
            }
            i2(n3, t3), n3.prototype = null === t3 ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
          }), f = [new o.r(1116352408, 3609767458), new o.r(1899447441, 602891725), new o.r(3049323471, 3964484399), new o.r(3921009573, 2173295548), new o.r(961987163, 4081628472), new o.r(1508970993, 3053834265), new o.r(2453635748, 2937671579), new o.r(2870763221, 3664609560), new o.r(3624381080, 2734883394), new o.r(310598401, 1164996542), new o.r(607225278, 1323610764), new o.r(1426881987, 3590304994), new o.r(1925078388, 4068182383), new o.r(2162078206, 991336113), new o.r(2614888103, 633803317), new o.r(3248222580, 3479774868), new o.r(3835390401, 2666613458), new o.r(4022224774, 944711139), new o.r(264347078, 2341262773), new o.r(604807628, 2007800933), new o.r(770255983, 1495990901), new o.r(1249150122, 1856431235), new o.r(1555081692, 3175218132), new o.r(1996064986, 2198950837), new o.r(2554220882, 3999719339), new o.r(2821834349, 766784016), new o.r(2952996808, 2566594879), new o.r(3210313671, 3203337956), new o.r(3336571891, 1034457026), new o.r(3584528711, 2466948901), new o.r(113926993, 3758326383), new o.r(338241895, 168717936), new o.r(666307205, 1188179964), new o.r(773529912, 1546045734), new o.r(1294757372, 1522805485), new o.r(1396182291, 2643833823), new o.r(1695183700, 2343527390), new o.r(1986661051, 1014477480), new o.r(2177026350, 1206759142), new o.r(2456956037, 344077627), new o.r(2730485921, 1290863460), new o.r(2820302411, 3158454273), new o.r(3259730800, 3505952657), new o.r(3345764771, 106217008), new o.r(3516065817, 3606008344), new o.r(3600352804, 1432725776), new o.r(4094571909, 1467031594), new o.r(275423344, 851169720), new o.r(430227734, 3100823752), new o.r(506948616, 1363258195), new o.r(659060556, 3750685593), new o.r(883997877, 3785050280), new o.r(958139571, 3318307427), new o.r(1322822218, 3812723403), new o.r(1537002063, 2003034995), new o.r(1747873779, 3602036899), new o.r(1955562222, 1575990012), new o.r(2024104815, 1125592928), new o.r(2227730452, 2716904306), new o.r(2361852424, 442776044), new o.r(2428436474, 593698344), new o.r(2756734187, 3733110249), new o.r(3204031479, 2999351573), new o.r(3329325298, 3815920427), new o.r(3391569614, 3928383900), new o.r(3515267271, 566280711), new o.r(3940187606, 3454069534), new o.r(4118630271, 4000239992), new o.r(116418474, 1914138554), new o.r(174292421, 2731055270), new o.r(289380356, 3203993006), new o.r(460393269, 320620315), new o.r(685471733, 587496836), new o.r(852142971, 1086792851), new o.r(1017036298, 365543100), new o.r(1126000580, 2618297676), new o.r(1288033470, 3409855158), new o.r(1501505948, 4234509866), new o.r(1607167915, 987167468), new o.r(1816402316, 1246189591)], c = [];
          !function() {
            for (var n3 = 0; n3 < 80; n3++) c[n3] = new o.r(0, 0);
          }();
          var s = function(n3) {
            function t3(t4) {
              var r3 = n3.call(this, t4) || this;
              return r3.N = 32, r3.on = new o.m([new o.r(1779033703, 4089235720), new o.r(3144134277, 2227873595), new o.r(1013904242, 4271175723), new o.r(2773480762, 1595750129), new o.r(1359893119, 2917565137), new o.r(2600822924, 725511199), new o.r(528734635, 4215389547), new o.r(1541459225, 327033209)]), r3.O = t4, t4 && void 0 !== t4.hash && (r3.on = t4.hash.clone()), r3;
            }
            return u(t3, n3), t3.prototype.A = function() {
              this.on = new o.m([new o.r(1779033703, 4089235720), new o.r(3144134277, 2227873595), new o.r(1013904242, 4271175723), new o.r(2773480762, 1595750129), new o.r(1359893119, 2917565137), new o.r(2600822924, 725511199), new o.r(528734635, 4215389547), new o.r(1541459225, 327033209)]);
            }, t3.prototype.un = function(n4, t4) {
              for (var r3 = this.on.words, i3 = r3[0], e2 = r3[1], o2 = r3[2], u2 = r3[3], s2 = r3[4], a = r3[5], h = r3[6], v = r3[7], w = i3.high, l = i3.low, b = e2.high, d = e2.low, y = o2.high, p = o2.low, O = u2.high, j = u2.low, _ = s2.high, m = s2.low, A = a.high, g = a.low, E = h.high, S = h.low, M = v.high, k = v.low, H = w, C = l, B = b, N = d, I = y, z = p, D = O, U = j, L = _, F = m, x = A, P = g, R = E, T = S, K = M, W = k, G = 0; G < 80; G++) {
                var q = void 0, Q = void 0, X = c[G];
                if (G < 16) Q = X.high = 0 | n4[t4 + 2 * G], q = X.low = 0 | n4[t4 + 2 * G + 1];
                else {
                  var V = c[G - 15], Z = V.high, J = V.low, Y = (Z >>> 1 | J << 31) ^ (Z >>> 8 | J << 24) ^ Z >>> 7, $ = (J >>> 1 | Z << 31) ^ (J >>> 8 | Z << 24) ^ (J >>> 7 | Z << 25), nn = c[G - 2], tn = nn.high, rn = nn.low, en = (tn >>> 19 | rn << 13) ^ (tn << 3 | rn >>> 29) ^ tn >>> 6, on = (rn >>> 19 | tn << 13) ^ (rn << 3 | tn >>> 29) ^ (rn >>> 6 | tn << 26), un = c[G - 7], fn = un.high, cn = un.low, sn = c[G - 16], an = sn.high, hn = sn.low;
                  Q = (Q = (Q = Y + fn + ((q = $ + cn) >>> 0 < $ >>> 0 ? 1 : 0)) + en + ((q += on) >>> 0 < on >>> 0 ? 1 : 0)) + an + ((q += hn) >>> 0 < hn >>> 0 ? 1 : 0), X.high = Q, X.low = q;
                }
                var vn = L & x ^ ~L & R, wn = F & P ^ ~F & T, ln = H & B ^ H & I ^ B & I, bn = C & N ^ C & z ^ N & z, dn = (H >>> 28 | C << 4) ^ (H << 30 | C >>> 2) ^ (H << 25 | C >>> 7), yn = (C >>> 28 | H << 4) ^ (C << 30 | H >>> 2) ^ (C << 25 | H >>> 7), pn = (L >>> 14 | F << 18) ^ (L >>> 18 | F << 14) ^ (L << 23 | F >>> 9), On = (F >>> 14 | L << 18) ^ (F >>> 18 | L << 14) ^ (F << 23 | L >>> 9), jn = f[G], _n = jn.high, mn = jn.low, An = W + On, gn = K + pn + (An >>> 0 < W >>> 0 ? 1 : 0), En = yn + bn;
                K = R, W = T, R = x, T = P, x = L, P = F, L = D + (gn = (gn = (gn = gn + vn + ((An += wn) >>> 0 < wn >>> 0 ? 1 : 0)) + _n + ((An += mn) >>> 0 < mn >>> 0 ? 1 : 0)) + Q + ((An += q) >>> 0 < q >>> 0 ? 1 : 0)) + ((F = U + An | 0) >>> 0 < U >>> 0 ? 1 : 0) | 0, D = I, U = z, I = B, z = N, B = H, N = C, H = gn + (dn + ln + (En >>> 0 < yn >>> 0 ? 1 : 0)) + ((C = An + En | 0) >>> 0 < An >>> 0 ? 1 : 0) | 0;
              }
              l = i3.low = l + C, i3.high = w + H + (l >>> 0 < C >>> 0 ? 1 : 0), d = e2.low = d + N, e2.high = b + B + (d >>> 0 < N >>> 0 ? 1 : 0), p = o2.low = p + z, o2.high = y + I + (p >>> 0 < z >>> 0 ? 1 : 0), j = u2.low = j + U, u2.high = O + D + (j >>> 0 < U >>> 0 ? 1 : 0), m = s2.low = m + F, s2.high = _ + L + (m >>> 0 < F >>> 0 ? 1 : 0), g = a.low = g + P, a.high = A + x + (g >>> 0 < P >>> 0 ? 1 : 0), S = h.low = S + T, h.high = E + R + (S >>> 0 < T >>> 0 ? 1 : 0), k = v.low = k + W, v.high = M + K + (k >>> 0 < W >>> 0 ? 1 : 0);
            }, t3.prototype.fn = function() {
              var n4 = this.cn, t4 = n4.words, r3 = 8 * this.sn, i3 = 8 * n4.nSigBytes;
              return t4[i3 >>> 5] |= 128 << 24 - i3 % 32, t4[30 + (i3 + 128 >>> 10 << 5)] = Math.floor(r3 / 4294967296), t4[31 + (i3 + 128 >>> 10 << 5)] = r3, n4.nSigBytes = 4 * t4.length, this.an(), this.on.to32();
            }, t3.prototype.clone = function() {
              return new t3({ hash: this.on, blockSize: this.N, data: this.cn, nBytes: this.sn });
            }, t3.hash = function(n4, r3) {
              return new t3(r3).finalize(n4);
            }, t3;
          }(e.P);
        }, 3354: function(n2, t2, r2) {
          r2.d(t2, { e: function() {
            return o;
          } });
          var i2 = r2(5720), e = r2(9054), o = function() {
            function n3(t3, r3) {
              if (Array.isArray(t3) || !t3) return this.yn = Array.isArray(t3) ? t3 : [], void (this.pn = "number" == typeof r3 ? r3 : 4 * this.yn.length);
              if (t3 instanceof n3) return this.yn = t3.words.slice(), void (this.pn = t3.nSigBytes);
              var i3;
              try {
                t3 instanceof ArrayBuffer ? i3 = new Uint8Array(t3) : (t3 instanceof Uint8Array || t3 instanceof Int8Array || t3 instanceof Uint8ClampedArray || t3 instanceof Int16Array || t3 instanceof Uint16Array || t3 instanceof Int32Array || t3 instanceof Uint32Array || t3 instanceof Float32Array || t3 instanceof Float64Array) && (i3 = new Uint8Array(t3.buffer, t3.byteOffset, t3.byteLength));
              } catch (n4) {
                throw new Error("Invalid argument");
              }
              if (!i3) throw new Error("Invalid argument");
              for (var e2 = i3.byteLength, o2 = [], u = 0; u < e2; u++) o2[u >>> 2] |= i3[u] << 24 - u % 4 * 8;
              this.yn = o2, this.pn = e2;
            }
            return Object.defineProperty(n3.prototype, "nSigBytes", { get: function() {
              return this.pn;
            }, set: function(n4) {
              this.pn = n4;
            }, enumerable: false, configurable: true }), Object.defineProperty(n3.prototype, "words", { get: function() {
              return this.yn;
            }, enumerable: false, configurable: true }), n3.prototype.toString = function(n4) {
              return n4 ? n4.stringify(this) : i2.p.stringify(this);
            }, n3.prototype.toUint8Array = function() {
              for (var n4 = this.yn, t3 = this.pn, r3 = new Uint8Array(t3), i3 = 0; i3 < t3; i3++) r3[i3] = n4[i3 >>> 2] >>> 24 - i3 % 4 * 8 & 255;
              return r3;
            }, n3.prototype.concat = function(n4) {
              var t3 = n4.words.slice(), r3 = n4.nSigBytes;
              if (this.clamp(), this.pn % 4) for (var i3 = 0; i3 < r3; i3++) {
                var e2 = t3[i3 >>> 2] >>> 24 - i3 % 4 * 8 & 255;
                this.yn[this.pn + i3 >>> 2] |= e2 << 24 - (this.pn + i3) % 4 * 8;
              }
              else for (i3 = 0; i3 < r3; i3 += 4) this.yn[this.pn + i3 >>> 2] = t3[i3 >>> 2];
              return this.pn += r3, this;
            }, n3.prototype.clamp = function() {
              var n4 = this.pn;
              this.yn[n4 >>> 2] &= 4294967295 << 32 - n4 % 4 * 8, this.yn.length = Math.ceil(n4 / 4);
            }, n3.prototype.clone = function() {
              return new n3(this.yn.slice(), this.pn);
            }, n3.random = function(t3) {
              for (var r3 = [], i3 = 0; i3 < t3; i3 += 4) r3.push((0, e.M)());
              return new n3(r3, t3);
            }, n3;
          }();
        }, 6957: function(n2, t2, r2) {
          r2.d(t2, { r: function() {
            return o;
          }, m: function() {
            return u;
          } });
          var i2 = r2(5720), e = r2(3354), o = function() {
            function n3(n4, t3) {
              this.high = n4, this.low = t3;
            }
            return n3.prototype.clone = function() {
              return new n3(this.high, this.low);
            }, n3;
          }(), u = function() {
            function n3(n4, t3) {
              this.yn = n4 || [], this.pn = "number" == typeof t3 ? t3 : 8 * this.yn.length;
            }
            return Object.defineProperty(n3.prototype, "nSigBytes", { get: function() {
              return this.pn;
            }, set: function(n4) {
              this.pn = n4;
            }, enumerable: false, configurable: true }), Object.defineProperty(n3.prototype, "words", { get: function() {
              return this.yn;
            }, enumerable: false, configurable: true }), n3.prototype.to32 = function() {
              for (var n4 = [], t3 = 0; t3 < this.yn.length; t3++) {
                var r3 = this.yn[t3];
                n4.push(r3.high), n4.push(r3.low);
              }
              return new e.e(n4, this.pn);
            }, n3.prototype.toString = function(n4) {
              return n4 ? n4.stringify(this.to32()) : i2.p.stringify(this.to32());
            }, n3.prototype.clone = function() {
              for (var t3 = this.yn.slice(), r3 = 0; r3 < t3.length; r3++) t3[r3] = t3[r3].clone();
              return new n3(t3, this.pn);
            }, n3;
          }();
        }, 7211: function(n2, t2, r2) {
          r2.d(t2, { C: function() {
            return o;
          } });
          var i2 = r2(3354), e = r2(4768), o = function() {
            function n3(n4) {
              this.On = 0, this.N = 0, this.O = n4, this.cn = n4 && void 0 !== n4.data ? n4.data.clone() : new i2.e(), this.sn = n4 && "number" == typeof n4.nBytes ? n4.nBytes : 0;
            }
            return Object.defineProperty(n3.prototype, "blockSize", { get: function() {
              return this.N;
            }, enumerable: false, configurable: true }), n3.prototype.reset = function(n4, t3) {
              this.cn = void 0 !== n4 ? n4.clone() : new i2.e(), this.sn = "number" == typeof t3 ? t3 : 0;
            }, n3.prototype.jn = function(n4) {
              var t3 = "string" == typeof n4 ? e.d.parse(n4) : n4;
              this.cn.concat(t3), this.sn += t3.nSigBytes;
            }, n3.prototype.an = function(n4) {
              var t3, r3 = this.cn.words, e2 = this.cn.nSigBytes, o2 = this.N, u = e2 / (4 * this.N), f = (u = n4 ? Math.ceil(u) : Math.max((0 | u) - this.On, 0)) * o2, c = Math.min(4 * f, e2);
              if (f) {
                for (var s = 0; s < f; s += o2) this.un(r3, s);
                t3 = r3.splice(0, f), this.cn.nSigBytes -= c;
              }
              return new i2.e(t3, c);
            }, n3.prototype.un = function(n4, t3) {
              throw new Error("Not implemented");
            }, n3;
          }();
        }, 1868: function(n2, t2, r2) {
          r2.d(t2, { P: function() {
            return u;
          } });
          var i2, e = r2(7211), o = (i2 = function(n3, t3) {
            return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n4, t4) {
              n4.__proto__ = t4;
            } || function(n4, t4) {
              for (var r3 in t4) Object.prototype.hasOwnProperty.call(t4, r3) && (n4[r3] = t4[r3]);
            })(n3, t3);
          }, function(n3, t3) {
            function r3() {
              this.constructor = n3;
            }
            i2(n3, t3), n3.prototype = null === t3 ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
          }), u = function(n3) {
            function t3(t4) {
              var r3 = n3.call(this, t4) || this;
              return r3.N = 16, r3.O = t4, t4 && "number" == typeof t4.blockSize && (r3.N = t4.blockSize), r3.reset(t4 ? t4.data : void 0, t4 ? t4.nBytes : void 0), r3;
            }
            return o(t3, n3), Object.defineProperty(t3.prototype, "blockSize", { get: function() {
              return this.N;
            }, enumerable: false, configurable: true }), t3.prototype.reset = function(t4, r3) {
              n3.prototype.reset.call(this, t4, r3), this.A();
            }, t3.prototype.update = function(n4) {
              return this.jn(n4), this.an(), this;
            }, t3.prototype.finalize = function(n4) {
              return n4 && this.jn(n4), this.fn();
            }, t3.prototype.A = function() {
              throw new Error("Not implemented");
            }, t3.prototype.fn = function() {
              throw new Error("Not implemented");
            }, t3;
          }(e.C);
        }, 787: function(n2, t2, r2) {
          r2.d(t2, { G: function() {
            return s;
          } });
          var i2, e = r2(9456), o = r2(4344), u = r2(7919), f = (i2 = function(n3, t3) {
            return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n4, t4) {
              n4.__proto__ = t4;
            } || function(n4, t4) {
              for (var r3 in t4) Object.prototype.hasOwnProperty.call(t4, r3) && (n4[r3] = t4[r3]);
            })(n3, t3);
          }, function(n3, t3) {
            function r3() {
              this.constructor = n3;
            }
            i2(n3, t3), n3.prototype = null === t3 ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
          }), c = function() {
            return (c = Object.assign || function(n3) {
              for (var t3, r3 = 1, i3 = arguments.length; r3 < i3; r3++) for (var e2 in t3 = arguments[r3]) Object.prototype.hasOwnProperty.call(t3, e2) && (n3[e2] = t3[e2]);
              return n3;
            }).apply(this, arguments);
          }, s = function(n3) {
            function t3(t4) {
              var r3 = n3.call(this, t4) || this;
              return r3.N = 4, r3._n = o.n, r3.mn = u.l, r3.O = t4, r3._n = void 0 !== t4.mode ? t4.mode : r3._n, r3.mn = void 0 !== t4.padding ? t4.padding : r3.mn, r3.reset(null == t4 ? void 0 : t4.data, null == t4 ? void 0 : t4.nBytes), r3;
            }
            return f(t3, n3), Object.defineProperty(t3.prototype, "mode", { get: function() {
              return this.An;
            }, enumerable: false, configurable: true }), Object.defineProperty(t3.prototype, "padding", { get: function() {
              return this.mn;
            }, enumerable: false, configurable: true }), t3.prototype.reset = function(t4, r3) {
              var i3;
              n3.prototype.reset.call(this, t4, r3), this.gn === e.t.ENC_TRANSFORM_MODE ? i3 = this._n.createEncryptor : (i3 = this._n.createDecryptor, this.On = 1), this._n && this.En === i3 ? this.An = new this._n({ cipher: this, iv: this.ln }) : (this.An = i3.call(this._n, { cipher: this, iv: this.ln }), this.En = i3);
            }, t3.prototype.un = function(n4, t4) {
              var r3;
              null === (r3 = this.An) || void 0 === r3 || r3.processBlock(n4, t4);
            }, t3.prototype.fn = function() {
              var n4, t4 = this.mn;
              return this.gn === e.t.ENC_TRANSFORM_MODE ? (t4.pad(this.cn, this.blockSize), n4 = this.an(true)) : (n4 = this.an(true), t4.unpad(n4)), n4;
            }, t3.prototype.encryptBlock = function(n4, t4) {
              throw new Error("Not implemented");
            }, t3.prototype.decryptBlock = function(n4, t4) {
              throw new Error("Not implemented");
            }, t3.createEncryptor = function(n4, r3) {
              return new t3(c(c({}, r3 = void 0 === r3 ? {} : r3), { key: n4, transformMode: e.t.ENC_TRANSFORM_MODE }));
            }, t3.createDecryptor = function(n4, r3) {
              return new t3(c(c({}, r3 = void 0 === r3 ? {} : r3), { key: n4, transformMode: e.t.DEC_TRANSFORM_MODE }));
            }, t3;
          }(e.t);
        }, 9456: function(n2, t2, r2) {
          r2.d(t2, { t: function() {
            return f;
          } });
          var i2, e = r2(7211), o = (i2 = function(n3, t3) {
            return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n4, t4) {
              n4.__proto__ = t4;
            } || function(n4, t4) {
              for (var r3 in t4) Object.prototype.hasOwnProperty.call(t4, r3) && (n4[r3] = t4[r3]);
            })(n3, t3);
          }, function(n3, t3) {
            function r3() {
              this.constructor = n3;
            }
            i2(n3, t3), n3.prototype = null === t3 ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
          }), u = function() {
            return (u = Object.assign || function(n3) {
              for (var t3, r3 = 1, i3 = arguments.length; r3 < i3; r3++) for (var e2 in t3 = arguments[r3]) Object.prototype.hasOwnProperty.call(t3, e2) && (n3[e2] = t3[e2]);
              return n3;
            }).apply(this, arguments);
          }, f = function(n3) {
            function t3(t4) {
              var r3 = n3.call(this, t4) || this;
              return r3.gn = 1, r3.O = t4, r3.H = t4.key, r3.ln = void 0 !== t4.iv ? t4.iv : r3.ln, r3.gn = void 0 !== t4.transformMode ? t4.transformMode : r3.gn, r3;
            }
            return o(t3, n3), Object.defineProperty(t3.prototype, "iv", { get: function() {
              return this.ln;
            }, enumerable: false, configurable: true }), t3.prototype.reset = function(t4, r3) {
              n3.prototype.reset.call(this, t4, r3), this.A();
            }, t3.prototype.process = function(n4) {
              return this.jn(n4), this.an();
            }, t3.prototype.finalize = function(n4) {
              return n4 && this.jn(n4), this.fn();
            }, t3.prototype.A = function() {
              throw new Error("Not implemented");
            }, t3.prototype.un = function(n4, t4) {
              throw new Error("Not implemented");
            }, t3.prototype.fn = function() {
              throw new Error("Not implemented");
            }, t3.createEncryptor = function(n4, r3) {
              return new t3(u(u({}, r3 = void 0 === r3 ? {} : r3), { key: n4, transformMode: t3.ENC_TRANSFORM_MODE }));
            }, t3.createDecryptor = function(n4, r3) {
              return new t3(u(u({}, r3 = void 0 === r3 ? {} : r3), { key: n4, transformMode: t3.DEC_TRANSFORM_MODE }));
            }, t3.ENC_TRANSFORM_MODE = 1, t3.DEC_TRANSFORM_MODE = 2, t3.keySize = 4, t3.ivSize = 4, t3;
          }(e.C);
        }, 2505: function(n2, t2, r2) {
          r2.d(t2, { Q: function() {
            return e;
          } });
          var i2 = r2(1232), e = function() {
            function n3(n4) {
              this.formatter = i2.w, n4 && (this.cipherText = n4.cipherText, this.key = n4.key, this.iv = n4.iv, this.salt = n4.salt, this.Algorithm = n4.Algorithm, this.mode = n4.mode, this.padding = n4.padding, this.blockSize = n4.blockSize, this.formatter = n4.formatter || i2.w);
            }
            return n3.prototype.toString = function(n4) {
              return (n4 || this.formatter).stringify(this);
            }, n3;
          }();
        }, 5693: function(n2, t2, r2) {
          r2.d(t2, { E: function() {
            return c;
          } });
          var i2 = r2(9109), e = r2(2214), o = r2(2505), u = r2(1232), f = function() {
            return (f = Object.assign || function(n3) {
              for (var t3, r3 = 1, i3 = arguments.length; r3 < i3; r3++) for (var e2 in t3 = arguments[r3]) Object.prototype.hasOwnProperty.call(t3, e2) && (n3[e2] = t3[e2]);
              return n3;
            }).apply(this, arguments);
          }, c = { encrypt: function(n3, t3, r3, u2) {
            var c2 = u2 ? f({}, u2) : {}, s = u2 && u2.KDF ? u2.KDF : e.s, a = {};
            u2 && u2.kdfHasher && (a.kdfHasher = u2.kdfHasher), u2 && u2.kdfIterations && (a.kdfIterations = u2.kdfIterations), u2 && u2.kdfModule && (a.kdfModule = u2.kdfModule);
            var h = s.execute(r3, n3.keySize, n3.ivSize, c2.kdfSalt, a);
            c2.iv = h.iv;
            var v = i2.D.encrypt(n3, t3, h.key, c2);
            return new o.Q(f(f({}, v), { key: h.key, iv: h.iv, salt: h.salt }));
          }, decrypt: function(n3, t3, r3, o2) {
            var c2 = o2 ? f({}, o2) : {}, s = c2.KDF ? c2.KDF : e.s, a = c2.formatter ? c2.formatter : u.w, h = (0, i2.W)(t3, a), v = {};
            o2 && o2.kdfHasher && (v.kdfHasher = o2.kdfHasher), o2 && o2.kdfIterations && (v.kdfIterations = o2.kdfIterations), o2 && o2.kdfModule && (v.kdfModule = o2.kdfModule);
            var w = s.execute(r3, n3.keySize, n3.ivSize, h.salt, v);
            return c2.iv = w.iv, i2.D.decrypt(n3, h, w.key, c2);
          } };
        }, 9109: function(n2, t2, r2) {
          r2.d(t2, { W: function() {
            return o;
          }, D: function() {
            return u;
          } });
          var i2 = r2(1232), e = r2(2505);
          function o(n3, t3) {
            return "string" == typeof n3 ? t3.parse(n3) : n3;
          }
          var u = { encrypt: function(n3, t3, r3, o2) {
            var u2 = n3.createEncryptor(r3, o2), f = u2.finalize(t3);
            return new e.Q({ cipherText: f, key: r3, iv: u2.iv, Algorithm: n3, mode: u2.mode, padding: u2.padding, blockSize: u2.blockSize, formatter: (null == o2 ? void 0 : o2.formatter) || i2.w });
          }, decrypt: function(n3, t3, r3, e2) {
            var u2 = n3.createDecryptor(r3, e2), f = o(t3, (null == e2 ? void 0 : e2.formatter) || i2.w);
            return u2.finalize(f.cipherText || "");
          } };
        }, 30: function(n2, t2, r2) {
          r2.d(t2, { q: function() {
            return u;
          } });
          var i2, e = r2(9456), o = (i2 = function(n3, t3) {
            return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n4, t4) {
              n4.__proto__ = t4;
            } || function(n4, t4) {
              for (var r3 in t4) Object.prototype.hasOwnProperty.call(t4, r3) && (n4[r3] = t4[r3]);
            })(n3, t3);
          }, function(n3, t3) {
            function r3() {
              this.constructor = n3;
            }
            i2(n3, t3), n3.prototype = null === t3 ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
          }), u = function(n3) {
            function t3(t4) {
              var r3 = n3.call(this, t4) || this;
              return r3.N = 1, r3;
            }
            return o(t3, n3), t3.prototype.fn = function() {
              return this.an(true);
            }, t3;
          }(e.t);
        }, 1232: function(n2, t2, r2) {
          r2.d(t2, { w: function() {
            return u;
          } });
          var i2 = r2(2505), e = r2(3354), o = r2(1773), u = { stringify: function(n3) {
            var t3 = n3.cipherText, r3 = n3.salt;
            return t3 ? r3 ? new e.e([1398893684, 1701076831]).concat(r3).concat(t3).toString(o.D) : t3.toString(o.D) : "";
          }, parse: function(n3) {
            var t3, r3 = o.D.parse(n3), u2 = r3.words;
            return 1398893684 === u2[0] && 1701076831 === u2[1] && (t3 = new e.e(u2.slice(2, 4)), u2.splice(0, 4), r3.nSigBytes -= 16), new i2.Q({ cipherText: r3, salt: t3 });
          } };
        }, 2214: function(n2, t2, r2) {
          r2.d(t2, { s: function() {
            return f;
          } });
          var i2 = r2(3354), e = r2(2505), o = r2(7008), u = function() {
            return (u = Object.assign || function(n3) {
              for (var t3, r3 = 1, i3 = arguments.length; r3 < i3; r3++) for (var e2 in t3 = arguments[r3]) Object.prototype.hasOwnProperty.call(t3, e2) && (n3[e2] = t3[e2]);
              return n3;
            }).apply(this, arguments);
          }, f = { execute: function(n3, t3, r3, f2, c) {
            f2 || (f2 = i2.e.random(8));
            var s = c && c.kdfModule || o.E, a = c ? { Hasher: c.kdfHasher, iterations: c.kdfIterations } : {}, h = s.getKey(n3, f2, u(u({}, a), { keySize: t3 + r3 })), v = new i2.e(h.words.slice(t3), 4 * r3);
            return h.nSigBytes = 4 * t3, new e.Q({ key: h, iv: v, salt: f2 });
          } };
        }, 7008: function(n2, t2, r2) {
          r2.d(t2, { E: function() {
            return s;
          } });
          var i2, e = r2(5561), o = r2(6367), u = r2(3354), f = r2(9541), c = (i2 = function(n3, t3) {
            return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n4, t4) {
              n4.__proto__ = t4;
            } || function(n4, t4) {
              for (var r3 in t4) Object.prototype.hasOwnProperty.call(t4, r3) && (n4[r3] = t4[r3]);
            })(n3, t3);
          }, function(n3, t3) {
            function r3() {
              this.constructor = n3;
            }
            i2(n3, t3), n3.prototype = null === t3 ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
          }), s = function(n3) {
            function t3(t4) {
              var r3 = n3.call(this, t4) || this;
              return r3.Sn = 4, r3.Mn = e.SHA256, r3.kn = 1e4, t4 && (r3.Sn = void 0 !== t4.keySize ? t4.keySize : r3.Sn, r3.Mn = void 0 !== t4.Hasher ? t4.Hasher : r3.Mn, r3.kn = void 0 !== t4.iterations ? t4.iterations : r3.kn), r3;
            }
            return c(t3, n3), t3.prototype.compute = function(n4, t4) {
              for (var r3 = new o.Hmac(new this.Mn(), n4), i3 = new u.e(), e2 = new u.e([1]), f2 = i3.words, c2 = e2.words, s2 = this.Sn, a = this.kn; f2.length < s2; ) {
                var h = r3.update(t4).finalize(e2);
                r3.reset();
                for (var v = h.words, w = v.length, l = h, b = 1; b < a; b++) {
                  l = r3.finalize(l), r3.reset();
                  for (var d = l.words, y = 0; y < w; y++) v[y] ^= d[y];
                }
                i3.concat(h), c2[0]++;
              }
              return i3.nSigBytes = 4 * s2, i3;
            }, t3.getKey = function(n4, r3, i3) {
              return new t3(i3).compute(n4, r3);
            }, t3;
          }(f._);
        }, 9541: function(n2, t2, r2) {
          r2.d(t2, { _: function() {
            return i2;
          } });
          var i2 = function() {
            function n3(n4) {
              this.O = n4;
            }
            return n3.prototype.compute = function(n4, t3) {
              throw new Error("Not implemented");
            }, n3.getKey = function(n4, t3, r3) {
              throw new Error("Not implemented");
            }, n3;
          }();
        }, 1863: function(n2, t2, r2) {
          r2.d(t2, { T: function() {
            return i2;
          } });
          var i2 = function() {
            function n3(n4) {
              this.O = n4, this.Hn = n4.cipher, this.ln = n4.iv;
            }
            return n3.prototype.processBlock = function(n4, t3) {
            }, n3.createEncryptor = function(n4) {
              throw new Error("Not implemented yet");
            }, n3.createDecryptor = function(n4) {
              throw new Error("Not implemented yet");
            }, n3;
          }();
        }, 4344: function(n2, t2, r2) {
          r2.d(t2, { n: function() {
            return u;
          } });
          var i2, e = r2(1863), o = (i2 = function(n3, t3) {
            return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n4, t4) {
              n4.__proto__ = t4;
            } || function(n4, t4) {
              for (var r3 in t4) Object.prototype.hasOwnProperty.call(t4, r3) && (n4[r3] = t4[r3]);
            })(n3, t3);
          }, function(n3, t3) {
            function r3() {
              this.constructor = n3;
            }
            i2(n3, t3), n3.prototype = null === t3 ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
          }), u = function(n3) {
            function t3(t4) {
              var r3 = n3.call(this, t4) || this;
              return r3.Cn = [], r3;
            }
            return o(t3, n3), t3.prototype.xorBlock = function(n4, t4, r3) {
              var i3, e2 = this.ln;
              e2 ? (i3 = e2.words, this.ln = void 0) : i3 = this.Cn;
              for (var o2 = 0; o2 < r3; o2++) n4[t4 + o2] ^= i3[o2];
            }, t3.createEncryptor = function(n4) {
              return new t3.Encryptor(n4);
            }, t3.createDecryptor = function(n4) {
              return new t3.Decryptor(n4);
            }, t3.Encryptor = function(n4) {
              function t4() {
                return null !== n4 && n4.apply(this, arguments) || this;
              }
              return o(t4, n4), t4.prototype.processBlock = function(n5, t5) {
                var r3 = this.Hn, i3 = r3.blockSize;
                this.xorBlock(n5, t5, i3), r3.encryptBlock(n5, t5), this.Cn = n5.slice(t5, t5 + i3);
              }, t4;
            }(t3), t3.Decryptor = function(n4) {
              function t4() {
                return null !== n4 && n4.apply(this, arguments) || this;
              }
              return o(t4, n4), t4.prototype.processBlock = function(n5, t5) {
                var r3 = this.Hn, i3 = r3.blockSize, e2 = n5.slice(t5, t5 + i3);
                r3.decryptBlock(n5, t5), this.xorBlock(n5, t5, i3), this.Cn = e2;
              }, t4;
            }(t3), t3;
          }(e.T);
        }, 4055: function(n2, t2, r2) {
          r2.d(t2, { I4: function() {
            return e;
          }, z6: function() {
            return o;
          }, ur: function() {
            return u;
          } });
          var i2 = r2(3354);
          function e(n3) {
            var t3 = n3.nSigBytes % 16;
            if (0 !== t3) {
              for (var r3 = 16 - t3, e2 = [], o2 = Math.floor(r3 / 4), u2 = 0; u2 < o2; u2++) e2.push(0);
              r3 % 4 > 0 && e2.push(0), n3.concat(new i2.e(e2, r3));
            }
          }
          function o(n3, t3) {
            return new i2.e(n3.words.slice(), t3);
          }
          function u(n3, t3) {
            for (var r3 = n3.nSigBytes - t3, e2 = [], o2 = 0; o2 < t3; o2++) {
              var u2 = o2 >>> 2, f = r3 + o2, c = f >>> 2, s = n3.words[c] >>> 24 - f % 4 * 8 & 255;
              e2[u2] = 0 | e2[u2] | s << 24 - o2 % 4 * 8;
            }
            var a = new i2.e(e2, t3);
            return a.clamp(), a;
          }
        }, 7919: function(n2, t2, r2) {
          r2.d(t2, { l: function() {
            return e;
          } });
          var i2 = r2(3354);
          var e = { pad: function(n3, t3) {
            for (var r3 = 4 * t3, e2 = r3 - n3.nSigBytes % r3, o = e2 << 24 | e2 << 16 | e2 << 8 | e2, u = [], f = 0; f < e2; f += 4) u.push(o);
            var c = new i2.e(u, e2);
            n3.concat(c);
          }, unpad: function(n3) {
            var t3 = 255 & n3.words[n3.nSigBytes - 1 >>> 2];
            n3.nSigBytes -= t3;
          } };
        }, 1756: function(n2, t2, r2) {
          r2.d(t2, { w: function() {
            return u;
          } });
          var i2, e = "undefined" != typeof navigator && navigator.userAgent ? navigator.userAgent.toLowerCase() : "", o = (i2 = parseInt((/msie (\d+)/.exec(e) || [])[1], 10), isNaN(i2) ? (i2 = parseInt((/trident\/.*; rv:(\d+)/.exec(e) || [])[1], 10), !isNaN(i2) && i2) : i2);
          function u(n3, t3) {
            return false !== o && (!t3 || ("<" === n3 ? o < t3 : "<=" === n3 ? o <= t3 : ">" === n3 ? o > t3 : ">=" === n3 ? o >= t3 : o === t3));
          }
        }, 1773: function(n2, t2, r2) {
          r2.d(t2, { D: function() {
            return f;
          } });
          for (var i2 = r2(3354), e = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", o = [], u = 0; u < e.length; u++) o[e.charCodeAt(u)] = u;
          var f = { stringify: function(n3) {
            var t3 = n3.words, r3 = n3.nSigBytes;
            n3.clamp();
            for (var i3 = [], o2 = 0; o2 < r3; o2 += 3) for (var u2 = (t3[o2 >>> 2] >>> 24 - o2 % 4 * 8 & 255) << 16 | (t3[o2 + 1 >>> 2] >>> 24 - (o2 + 1) % 4 * 8 & 255) << 8 | t3[o2 + 2 >>> 2] >>> 24 - (o2 + 2) % 4 * 8 & 255, f2 = 0; f2 < 4 && o2 + 0.75 * f2 < r3; f2++) i3.push(e.charAt(u2 >>> 6 * (3 - f2) & 63));
            var c = e.charAt(64);
            if (c) for (; i3.length % 4; ) i3.push(c);
            return i3.join("");
          }, parse: function(n3) {
            var t3 = n3.length, r3 = e.charAt(64);
            if (r3) {
              var u2 = n3.indexOf(r3);
              -1 !== u2 && (t3 = u2);
            }
            for (var f2 = [], c = 0, s = 0; s < t3; s++) if (s % 4) {
              var a = o[n3.charCodeAt(s - 1)] << s % 4 * 2 | o[n3.charCodeAt(s)] >>> 6 - s % 4 * 2;
              f2[c >>> 2] |= a << 24 - c % 4 * 8, c++;
            }
            return new i2.e(f2, c);
          } };
        }, 5720: function(n2, t2, r2) {
          r2.d(t2, { p: function() {
            return e;
          } });
          var i2 = r2(3354), e = { stringify: function(n3) {
            for (var t3 = n3.nSigBytes, r3 = n3.words, i3 = [], e2 = 0; e2 < t3; e2++) {
              var o = r3[e2 >>> 2] >>> 24 - e2 % 4 * 8 & 255;
              i3.push((o >>> 4).toString(16)), i3.push((15 & o).toString(16));
            }
            return i3.join("");
          }, parse: function(n3) {
            var t3 = n3.length;
            if (t3 % 2 != 0) throw new Error("Hex string count must be even");
            if (!/^[a-fA-F0-9]+$/.test(n3)) throw new Error("Invalid Hex string: " + n3);
            for (var r3 = [], e2 = 0; e2 < t3; e2 += 2) r3[e2 >>> 3] |= parseInt(n3.substr(e2, 2), 16) << 24 - e2 % 8 * 4;
            return new i2.e(r3, t3 / 2);
          } };
        }, 8702: function(n2, t2, r2) {
          r2.d(t2, { m: function() {
            return e;
          } });
          var i2 = r2(3354), e = { stringify: function(n3) {
            for (var t3 = n3.nSigBytes, r3 = n3.words, i3 = [], e2 = 0; e2 < t3; e2++) {
              var o = r3[e2 >>> 2] >>> 24 - e2 % 4 * 8 & 255;
              i3.push(String.fromCharCode(o));
            }
            return i3.join("");
          }, parse: function(n3) {
            for (var t3 = n3.length, r3 = [], e2 = 0; e2 < t3; e2++) r3[e2 >>> 2] |= (255 & n3.charCodeAt(e2)) << 24 - e2 % 4 * 8;
            return new i2.e(r3, t3);
          } };
        }, 4768: function(n2, t2, r2) {
          r2.d(t2, { d: function() {
            return e;
          } });
          var i2 = r2(8702), e = { stringify: function(n3) {
            try {
              return decodeURIComponent(escape(i2.m.stringify(n3)));
            } catch (n4) {
              throw new Error("Malformed UTF-8 data");
            }
          }, parse: function(n3) {
            return i2.m.parse(unescape(encodeURIComponent(n3)));
          } };
        }, 2688: function(n2, t2, r2) {
          r2.d(t2, { Base64: function() {
            return o.D;
          }, EvpKDF: function() {
            return O;
          }, Hex: function() {
            return c.p;
          }, Latin1: function() {
            return f.m;
          }, OpenSSLKDF: function() {
            return l.s;
          }, PBKDF2: function() {
            return b.E;
          }, Utf16: function() {
            return w;
          }, Utf16BE: function() {
            return s;
          }, Utf16LE: function() {
            return v;
          }, Utf8: function() {
            return u.d;
          }, Word32Array: function() {
            return i2.e;
          }, Word64: function() {
            return e.r;
          }, Word64Array: function() {
            return e.m;
          } });
          r2(9054);
          var i2 = r2(3354), e = r2(6957), o = (r2(1756), r2(1773)), u = r2(4768), f = r2(8702), c = r2(5720), s = { stringify: function(n3) {
            for (var t3 = n3.words, r3 = n3.nSigBytes, i3 = [], e2 = 0; e2 < r3; e2 += 2) {
              var o2 = t3[e2 >>> 2] >>> 16 - e2 % 4 * 8 & 65535;
              i3.push(String.fromCharCode(o2));
            }
            return i3.join("");
          }, parse: function(n3) {
            for (var t3 = n3.length, r3 = [], e2 = 0; e2 < t3; e2++) r3[e2 >>> 1] |= n3.charCodeAt(e2) << 16 - e2 % 2 * 16;
            return new i2.e(r3, 2 * t3);
          } };
          function a(n3) {
            return n3 << 8 & 4278255360 | n3 >>> 8 & 16711935;
          }
          var h, v = { stringify: function(n3) {
            for (var t3 = n3.words, r3 = n3.nSigBytes, i3 = [], e2 = 0; e2 < r3; e2 += 2) {
              var o2 = a(t3[e2 >>> 2] >>> 16 - e2 % 4 * 8 & 65535);
              i3.push(String.fromCharCode(o2));
            }
            return i3.join("");
          }, parse: function(n3) {
            for (var t3 = n3.length, r3 = [], e2 = 0; e2 < t3; e2++) r3[e2 >>> 1] |= a(n3.charCodeAt(e2) << 16 - e2 % 2 * 16);
            return new i2.e(r3, 2 * t3);
          } }, w = s, l = r2(2214), b = r2(7008), d = r2(670), y = r2(9541), p = (h = function(n3, t3) {
            return (h = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n4, t4) {
              n4.__proto__ = t4;
            } || function(n4, t4) {
              for (var r3 in t4) Object.prototype.hasOwnProperty.call(t4, r3) && (n4[r3] = t4[r3]);
            })(n3, t3);
          }, function(n3, t3) {
            function r3() {
              this.constructor = n3;
            }
            h(n3, t3), n3.prototype = null === t3 ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
          }), O = function(n3) {
            function t3(t4) {
              var r3 = n3.call(this, t4) || this;
              return r3.Sn = 4, r3.Mn = d.MD5, r3.kn = 1, t4 && (r3.Sn = void 0 !== t4.keySize ? t4.keySize : r3.Sn, r3.Mn = void 0 !== t4.Hasher ? t4.Hasher : r3.Mn, r3.kn = void 0 !== t4.iterations ? t4.iterations : r3.kn), r3;
            }
            return p(t3, n3), t3.prototype.compute = function(n4, t4) {
              for (var r3, e2 = new this.Mn(), o2 = new i2.e(), u2 = o2.words, f2 = this.Sn, c2 = this.kn; u2.length < f2; ) {
                r3 && e2.update(r3), r3 = e2.update(n4).finalize(t4), e2.reset();
                for (var s2 = 1; s2 < c2; s2++) r3 = e2.finalize(r3), e2.reset();
                o2.concat(r3);
              }
              return o2.nSigBytes = 4 * f2, o2;
            }, t3.getKey = function(n4, r3, i3) {
              return new t3(i3).compute(n4, r3);
            }, t3;
          }(y._);
        }, 9054: function(n2, t2, r2) {
          r2.d(t2, { M: function() {
            return e;
          } });
          var i2 = r2(1756);
          var e = function() {
            if ("undefined" != typeof window) {
              var n3 = window.crypto || window.msCrypto;
              if (!n3) {
                if ((0, i2.w)("<", 11)) return console.warn("IE <= 10 uses insecure random generator. Please consider to use IE11 or another modern browser"), function() {
                  return Math.floor(512 * Math.random()) % 256;
                };
                throw new Error("Crypto module not found");
              }
              return function() {
                return n3.getRandomValues(new Uint32Array(1))[0];
              };
            }
            return void 0 !== r2.g && r2.g.crypto ? function() {
              return r2.g.crypto.randomBytes(4).readInt32LE();
            } : function() {
              return (init_empty(), __toCommonJS(empty_exports)).randomBytes(4).readInt32LE();
            };
          }();
        }, 3664: function(n2, t2, r2) {
          r2.d(t2, { K: function() {
            return c;
          } });
          var i2, e = r2(1863), o = r2(3354), u = r2(4055), f = (i2 = function(n3, t3) {
            return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n4, t4) {
              n4.__proto__ = t4;
            } || function(n4, t4) {
              for (var r3 in t4) Object.prototype.hasOwnProperty.call(t4, r3) && (n4[r3] = t4[r3]);
            })(n3, t3);
          }, function(n3, t3) {
            function r3() {
              this.constructor = n3;
            }
            i2(n3, t3), n3.prototype = null === t3 ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
          }), c = function(n3) {
            function t3(t4) {
              var r3 = n3.call(this, t4) || this;
              r3.Bn = 1;
              var i3 = t4.cipher, e2 = t4.iv;
              if (4 !== i3.blockSize) throw new Error("In CCM, cipher block size must be 128bit");
              if (e2 && (e2.nSigBytes > 13 || e2.nSigBytes < 7)) throw new Error("Byte size of iv must be between 7 and 13");
              return r3.Nn = e2 || new o.e([0, 0], 8), r3.In = 15 - r3.Nn.nSigBytes, r3;
            }
            return f(t3, n3), t3.getB0 = function(n4, t4, r3, i3) {
              if (r3.nSigBytes + i3.nSigBytes !== 15) throw new Error("LEN(Q)+LEN(N) must be 15");
              var e2 = 255 & (0 | (n4 ? 1 : 0) << 6 | (t4 - 2) / 2 << 3 | r3.nSigBytes - 1), u2 = i3.clone().concat(r3);
              return new o.e([e2 << 24], 1).concat(u2);
            }, t3.formatAssociatedDataAndPayload = function(n4, t4) {
              var r3, i3 = n4.nSigBytes;
              if (0 === i3) r3 = new o.e([0], 0);
              else if (i3 < Math.pow(2, 16) - Math.pow(2, 8)) r3 = new o.e([i3 << 16], 2);
              else {
                if (!(i3 < Math.pow(2, 32))) throw new Error("LEN(A) larger than 2**32-1 is not supported");
                r3 = new o.e([4294836224], 2).concat(new o.e([i3], 4));
              }
              for (var e2 = Math.floor(n4.nSigBytes / 4), u2 = 0; u2 < e2; u2++) r3.concat(new o.e([n4.words[u2]], 4));
              n4.nSigBytes % 4 && (r3.concat(new o.e([n4.words[e2]], n4.nSigBytes % 4)), r3.concat(new o.e([0], 4 - n4.nSigBytes % 4))), r3.nSigBytes % 16 && r3.concat(new o.e([0], 16 - r3.nSigBytes % 16));
              var f2 = Math.floor(t4.nSigBytes / 4);
              for (u2 = 0; u2 < f2; u2++) r3.concat(new o.e([t4.words[u2]], 4));
              return t4.nSigBytes % 4 && (r3.concat(new o.e([t4.words[f2]], t4.nSigBytes % 4)), r3.concat(new o.e([0], 4 - t4.nSigBytes % 4))), r3.nSigBytes % 16 && r3.concat(new o.e([0], 16 - r3.nSigBytes % 16)), r3;
            }, t3.genCtr = function(n4, t4, r3) {
              if (t4.nSigBytes + n4 !== 15) throw new Error("LEN(Q)+LEN(N) must be 15");
              for (var i3 = new o.e([(n4 - 1 & 7) << 24], 1), e2 = new o.e([], 0), u2 = Math.floor(n4 / 4), f2 = 0; f2 < u2 - 1; f2++) e2.concat(new o.e([0], 4));
              return n4 % 4 ? n4 > 4 ? (e2.concat(new o.e([0], n4 % 4)), e2.concat(new o.e([r3], 4))) : e2.concat(new o.e([r3 << 32 - 8 * n4], n4)) : e2.concat(new o.e([r3], 4)), i3.concat(t4).concat(e2);
            }, t3.mac = function(n4, r3, i3, e2, f2, c2) {
              var s = new n4({ key: r3, iv: i3 });
              if (4 !== s.blockSize) throw new Error("In CCM, cipher block size must be 128bit");
              if (i3 && (i3.nSigBytes > 13 || i3.nSigBytes < 7)) throw new Error("Byte size of iv must be between 7 and 13");
              var a = i3 || new o.e([0, 0], 8), h = (null == e2 ? void 0 : e2.clone()) || new o.e(), v = h.nSigBytes, w = (null == f2 ? void 0 : f2.clone()) || new o.e(), l = w.nSigBytes;
              if (l >>> 0 > 4294967295) throw new Error("Byte length of Payload(plainText) larger than 2^32-1 (4,294,967,295byte) is not supported at this time.");
              var b = 15 - a.nSigBytes, d = (0, u.ur)(new o.e([0, l], 8), b), y = c2 || 16, p = t3.getB0(Boolean(v), y, d, a), O = t3.formatAssociatedDataAndPayload(h, w), j = p.words.slice();
              s.encryptBlock(j, 0);
              for (var _ = O.nSigBytes / 16, m = O.words, A = j, g = 0; g < _; g++) {
                var E = [m[4 * g] ^ A[0], m[4 * g + 1] ^ A[1], m[4 * g + 2] ^ A[2], m[4 * g + 3] ^ A[3]];
                s.encryptBlock(E, 0), A = E;
              }
              var S = new o.e(A, y), M = t3.genCtr(b, a, 0);
              s.encryptBlock(M.words, 0);
              for (g = 0; g < 4; g++) S.words[g] ^= M.words[g];
              return S.clamp(), S;
            }, t3.combineCipherTextAndAuthTag = function(n4, t4) {
              return n4.clone().concat(t4);
            }, t3.splitCipherTextAndAuthTag = function(n4, t4) {
              var r3 = t4 || 16;
              return { cipherText: (0, u.z6)(n4, n4.nSigBytes - r3), authTag: (0, u.ur)(n4, r3) };
            }, t3.createEncryptor = function(n4) {
              return new t3.Encryptor(n4);
            }, t3.createDecryptor = function(n4) {
              return new t3.Decryptor(n4);
            }, t3.Encryptor = function(n4) {
              function r3() {
                return null !== n4 && n4.apply(this, arguments) || this;
              }
              return f(r3, n4), r3.prototype.processBlock = function(n5, r4) {
                var i3 = this.Hn, e2 = i3.blockSize, o2 = t3.genCtr(this.In, this.Nn, this.Bn);
                i3.encryptBlock(o2.words, 0);
                for (var u2 = 0; u2 < e2; u2++) n5[r4 + u2] ^= o2.words[u2];
                this.Bn++;
              }, r3;
            }(t3), t3.Decryptor = function(n4) {
              function r3() {
                return null !== n4 && n4.apply(this, arguments) || this;
              }
              return f(r3, n4), r3.prototype.processBlock = function(n5, r4) {
                var i3 = this.Hn, e2 = i3.blockSize, o2 = t3.genCtr(this.In, this.Nn, this.Bn);
                i3.encryptBlock(o2.words, 0);
                for (var u2 = 0; u2 < e2; u2++) n5[r4 + u2] ^= o2.words[u2];
                this.Bn++;
              }, r3;
            }(t3), t3;
          }(e.T);
        }, 5607: function(n2, t2, r2) {
          r2.d(t2, { V: function() {
            return c;
          } });
          var i2, e = r2(1863), o = r2(3354), u = r2(4055), f = (i2 = function(n3, t3) {
            return (i2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n4, t4) {
              n4.__proto__ = t4;
            } || function(n4, t4) {
              for (var r3 in t4) Object.prototype.hasOwnProperty.call(t4, r3) && (n4[r3] = t4[r3]);
            })(n3, t3);
          }, function(n3, t3) {
            function r3() {
              this.constructor = n3;
            }
            i2(n3, t3), n3.prototype = null === t3 ? Object.create(t3) : (r3.prototype = t3.prototype, new r3());
          }), c = function(n3) {
            function t3(r3) {
              var i3 = n3.call(this, r3) || this;
              if (i3.zn = [], i3.Dn = [], i3.Un = [], 4 !== r3.cipher.blockSize) throw new Error("In GCM block cipher mode, cipher block size must be 128bit");
              var e2 = r3.cipher, o2 = r3.iv, u2 = [0, 0, 0, 0];
              return e2.encryptBlock(u2, 0), i3.zn = u2, i3.Dn = t3.getJ0(u2, null == o2 ? void 0 : o2.words), i3.Un = i3.Dn.slice(), i3;
            }
            return f(t3, n3), t3.getJ0 = function(n4, r3) {
              var i3;
              if (r3 && 0 !== r3.length) if (3 === r3.length) i3 = [r3[0], r3[1], r3[2], 1];
              else {
                for (var e2 = r3.length % 4 > 0 ? 4 - r3.length % 4 : 0, o2 = r3.slice(), u2 = 0; u2 < e2 + 2; u2++) o2.push(0);
                o2.push(0), o2.push(32 * r3.length), i3 = t3.GHASH(n4, o2);
              }
              else i3 = [0, 0, 0, 1];
              return i3;
            }, t3.inc32 = function(n4) {
              var t4 = n4.slice(), r3 = t4[3] >>> 0, i3 = r3 + 1 >>> 0 < r3;
              if (t4[3] = t4[3] + 1 | 0, i3) {
                var e2 = t4[2] >>> 0, o2 = e2 + 1 >>> 0 < e2;
                t4[2] = t4[2] + 1 | 0, o2 && (t4[1] = t4[1] + 1 | 0);
              }
              return t4;
            }, t3.mul = function(n4, t4) {
              for (var r3 = [3774873600, 0, 0, 0], i3 = [0, 0, 0, 0], e2 = t4.slice(), o2 = 0; o2 < 128; o2++) {
                (n4[o2 >>> 5] >>> 31 - o2 % 32 & 1) > 0 && (i3[0] = i3[0] ^ e2[0], i3[1] = i3[1] ^ e2[1], i3[2] = i3[2] ^ e2[2], i3[3] = i3[3] ^ e2[3]);
                var u2 = (1 & e2[3]) >>> 0, f2 = (1 & e2[0]) >>> 0, c2 = (1 & e2[1]) >>> 0, s = (1 & e2[2]) >>> 0;
                e2[0] = e2[0] >>> 1, e2[1] = e2[1] >>> 1 | (f2 ? 2147483648 : 0), e2[2] = e2[2] >>> 1 | (c2 ? 2147483648 : 0), e2[3] = e2[3] >>> 1 | (s ? 2147483648 : 0), u2 > 0 && (e2[0] ^= r3[0], e2[1] ^= r3[1], e2[2] ^= r3[2], e2[3] ^= r3[3]);
              }
              return i3;
            }, t3.GHASH = function(n4, r3) {
              if (n4.length % 4 != 0) throw new Error("Length of 32bit word array 'H' must be multiple of 4(128bit)");
              if (r3.length % 4 != 0) throw new Error("Length of 32bit word array 'X' must be multiple of 4(128bit)");
              for (var i3 = r3.length, e2 = [0, 0, 0, 0], o2 = 0; o2 < i3; o2 += 4) e2[0] = e2[0] ^ r3[o2], e2[1] = e2[1] ^ r3[o2 + 1], e2[2] = e2[2] ^ r3[o2 + 2], e2[3] = e2[3] ^ r3[o2 + 3], e2 = t3.mul(e2, n4);
              return e2;
            }, t3.GCTR = function(n4, r3, i3) {
              if (0 === i3.nSigBytes) return i3.clone();
              if (4 !== r3.length) throw new Error("Initial Counter Block size must be 128bit");
              for (var e2 = i3.words, u2 = Math.ceil(i3.nSigBytes / 16), f2 = [r3.slice()], c2 = 1; c2 < u2; c2++) {
                var s = t3.inc32(f2[c2 - 1]);
                f2.push(s);
              }
              var a = new o.e();
              for (c2 = 0; c2 < u2; c2++) {
                n4.encryptBlock(f2[c2], 0);
                var h = i3.nSigBytes % 16;
                if (c2 < u2 - 1 || 0 === h) {
                  var v = e2[4 * c2] ^ f2[c2][0], w = e2[4 * c2 + 1] ^ f2[c2][1], l = e2[4 * c2 + 2] ^ f2[c2][2], b = e2[4 * c2 + 3] ^ f2[c2][3], d = new o.e([v, w, l, b]);
                  a.concat(d);
                } else {
                  for (var y = [], p = 0, O = Math.floor(h / 4), j = 0; j < O; j++) {
                    var _ = e2[4 * c2 + j] ^ f2[c2][j];
                    y.push(_), p += 4;
                  }
                  var m = h % 4;
                  if (m > 0) {
                    var A = e2[4 * c2 + O] << 32 - 8 * m ^ f2[c2][O];
                    y.push(A), p += m;
                  }
                  var g = new o.e(y, p);
                  a.concat(g);
                }
              }
              return a.nSigBytes = i3.nSigBytes, a.clamp(), a;
            }, t3.mac = function(n4, r3, i3, e2, f2, c2) {
              var s = new n4({ key: r3, iv: i3 }), a = [0, 0, 0, 0];
              s.encryptBlock(a, 0);
              var h = t3.getJ0(a, i3.words), v = (null == e2 ? void 0 : e2.clone()) || new o.e(), w = [0, 8 * v.nSigBytes], l = (null == f2 ? void 0 : f2.clone()) || new o.e(), b = [0, 8 * l.nSigBytes], d = c2 || 16;
              (0, u.I4)(v), (0, u.I4)(l);
              var y = v.words.concat(l.words).concat(w).concat(b), p = t3.GHASH(a, y), O = t3.GCTR(s, h, new o.e(p));
              return (0, u.z6)(O, d);
            }, t3.createEncryptor = function(n4) {
              return new t3.Encryptor(n4);
            }, t3.createDecryptor = function(n4) {
              return new t3.Decryptor(n4);
            }, t3.Encryptor = function(n4) {
              function r3() {
                return null !== n4 && n4.apply(this, arguments) || this;
              }
              return f(r3, n4), r3.prototype.processBlock = function(n5, r4) {
                var i3 = this.Hn.blockSize;
                this.Un = t3.inc32(this.Un);
                for (var e2 = new o.e(n5.slice(r4, r4 + i3)), u2 = t3.GCTR(this.Hn, this.Un, e2), f2 = 0; f2 < i3; f2++) n5[r4 + f2] = u2.words[f2];
              }, r3;
            }(t3), t3.Decryptor = function(n4) {
              function r3() {
                return null !== n4 && n4.apply(this, arguments) || this;
              }
              return f(r3, n4), r3.prototype.processBlock = function(n5, r4) {
                var i3 = this.Hn.blockSize;
                this.Un = t3.inc32(this.Un);
                for (var e2 = new o.e(n5.slice(r4, r4 + i3)), u2 = t3.GCTR(this.Hn, this.Un, e2), f2 = 0; f2 < i3; f2++) n5[r4 + f2] = u2.words[f2];
              }, r3;
            }(t3), t3;
          }(e.T);
        } }, t = {};
        function r(i2) {
          var e = t[i2];
          if (void 0 !== e) return e.exports;
          var o = t[i2] = { exports: {} };
          return n[i2](o, o.exports, r), o.exports;
        }
        r.d = function(n2, t2) {
          for (var i2 in t2) r.o(t2, i2) && !r.o(n2, i2) && Object.defineProperty(n2, i2, { enumerable: true, get: t2[i2] });
        }, r.g = function() {
          if ("object" == typeof globalThis) return globalThis;
          try {
            return this || new Function("return this")();
          } catch (n2) {
            if ("object" == typeof window) return window;
          }
        }(), r.o = function(n2, t2) {
          return Object.prototype.hasOwnProperty.call(n2, t2);
        }, r.r = function(n2) {
          "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(n2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(n2, "Ln", { value: true });
        };
        var i = {};
        return function() {
          r.r(i), r.d(i, { AES: function() {
            return A.AES;
          }, Base64: function() {
            return t2.Base64;
          }, CBCMAC: function() {
            return b.CBCMAC;
          }, CipherParams: function() {
            return u.Q;
          }, DES: function() {
            return g.DES;
          }, DES3: function() {
            return E.DES3;
          }, EvpKDF: function() {
            return t2.EvpKDF;
          }, GMAC: function() {
            return l.GMAC;
          }, Hex: function() {
            return t2.Hex;
          }, Hmac: function() {
            return f.Hmac;
          }, HmacMD5: function() {
            return c.HmacMD5;
          }, HmacSHA1: function() {
            return s.HmacSHA1;
          }, HmacSHA224: function() {
            return a.HmacSHA224;
          }, HmacSHA256: function() {
            return h.HmacSHA256;
          }, HmacSHA384: function() {
            return v.HmacSHA384;
          }, HmacSHA512: function() {
            return w.HmacSHA512;
          }, Latin1: function() {
            return t2.Latin1;
          }, MD5: function() {
            return d.MD5;
          }, OpenSSLKDF: function() {
            return t2.OpenSSLKDF;
          }, PBKDF2: function() {
            return t2.PBKDF2;
          }, PasswordBasedCipher: function() {
            return o.E;
          }, RC4: function() {
            return k.RC4;
          }, RC4Drop: function() {
            return H.RC4Drop;
          }, RIPEMD160: function() {
            return S.RIPEMD160;
          }, Rabbit: function() {
            return M.Rabbit;
          }, SHA1: function() {
            return y.SHA1;
          }, SHA224: function() {
            return p.SHA224;
          }, SHA256: function() {
            return O.SHA256;
          }, SHA3: function() {
            return m.SHA3;
          }, SHA384: function() {
            return j.SHA384;
          }, SHA512: function() {
            return _.SHA512;
          }, SerializableCipher: function() {
            return e.D;
          }, Utf16: function() {
            return t2.Utf16;
          }, Utf16BE: function() {
            return t2.Utf16BE;
          }, Utf16LE: function() {
            return t2.Utf16LE;
          }, Utf8: function() {
            return t2.Utf8;
          }, Word32Array: function() {
            return t2.Word32Array;
          }, Word64: function() {
            return t2.Word64;
          }, Word64Array: function() {
            return t2.Word64Array;
          }, formatter: function() {
            return Y;
          }, mode: function() {
            return Z;
          }, pad: function() {
            return J;
          } });
          var n2, t2 = r(2688), e = r(9109), o = r(5693), u = r(2505), f = r(6367), c = r(3027), s = r(149), a = r(4105), h = r(980), v = r(5838), w = r(9902), l = r(7753), b = r(3967), d = r(670), y = r(3173), p = r(766), O = r(5561), j = r(6324), _ = r(7491), m = r(3408), A = r(9691), g = r(9910), E = r(6739), S = r(7104), M = r(5187), k = r(4615), H = r(9639), C = r(4344), B = r(1863), N = (n2 = function(t3, r2) {
            return (n2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n3, t4) {
              n3.__proto__ = t4;
            } || function(n3, t4) {
              for (var r3 in t4) Object.prototype.hasOwnProperty.call(t4, r3) && (n3[r3] = t4[r3]);
            })(t3, r2);
          }, function(t3, r2) {
            function i2() {
              this.constructor = t3;
            }
            n2(t3, r2), t3.prototype = null === r2 ? Object.create(r2) : (i2.prototype = r2.prototype, new i2());
          }), I = function(n3) {
            function t3(t4) {
              var r2 = n3.call(this, t4) || this;
              return r2.Cn = [], r2;
            }
            return N(t3, n3), t3.prototype.generateKeyStreamAndEncrypt = function(n4, t4, r2, i2) {
              var e2, o2 = this.ln;
              o2 ? (e2 = o2.words.slice(0), this.ln = void 0) : e2 = this.Cn, i2.encryptBlock(e2, 0);
              for (var u2 = 0; u2 < r2; u2++) n4[t4 + u2] ^= e2[u2];
            }, t3.createEncryptor = function(n4) {
              return new t3.Encryptor(n4);
            }, t3.createDecryptor = function(n4) {
              return new t3.Decryptor(n4);
            }, t3.Encryptor = function(n4) {
              function t4() {
                return null !== n4 && n4.apply(this, arguments) || this;
              }
              return N(t4, n4), t4.prototype.processBlock = function(n5, t5) {
                this.generateKeyStreamAndEncrypt(n5, t5, this.Hn.blockSize, this.Hn), this.Cn = n5.slice(t5, t5 + this.Hn.blockSize);
              }, t4;
            }(t3), t3.Decryptor = function(n4) {
              function t4() {
                return null !== n4 && n4.apply(this, arguments) || this;
              }
              return N(t4, n4), t4.prototype.processBlock = function(n5, t5) {
                var r2 = n5.slice(t5, t5 + this.Hn.blockSize);
                this.generateKeyStreamAndEncrypt(n5, t5, this.Hn.blockSize, this.Hn), this.Cn = r2;
              }, t4;
            }(t3), t3;
          }(B.T), z = /* @__PURE__ */ function() {
            var n3 = function(t3, r2) {
              return (n3 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n4, t4) {
                n4.__proto__ = t4;
              } || function(n4, t4) {
                for (var r3 in t4) Object.prototype.hasOwnProperty.call(t4, r3) && (n4[r3] = t4[r3]);
              })(t3, r2);
            };
            return function(t3, r2) {
              function i2() {
                this.constructor = t3;
              }
              n3(t3, r2), t3.prototype = null === r2 ? Object.create(r2) : (i2.prototype = r2.prototype, new i2());
            };
          }(), D = function(n3) {
            function t3(t4) {
              var r2 = n3.call(this, t4) || this;
              return r2.Fn = [], r2;
            }
            return z(t3, n3), t3.createEncryptor = function(n4) {
              return new t3.Encryptor(n4);
            }, t3.createDecryptor = function(n4) {
              return new t3.Decryptor(n4);
            }, t3.Encryptor = function(n4) {
              function t4() {
                return null !== n4 && n4.apply(this, arguments) || this;
              }
              return z(t4, n4), t4.prototype.processBlock = function(n5, t5) {
                var r2 = this.Hn, i2 = r2.blockSize, e2 = this.ln, o2 = this.Fn;
                e2 && (o2 = this.Fn = e2.words.slice(0), this.ln = void 0);
                var u2 = o2.slice(0);
                r2.encryptBlock(u2, 0), o2[i2 - 1] = o2[i2 - 1] + 1 | 0;
                for (var f2 = 0; f2 < i2; f2++) n5[t5 + f2] ^= u2[f2];
              }, t4;
            }(t3), t3.Decryptor = t3.Encryptor, t3;
          }(B.T), U = /* @__PURE__ */ function() {
            var n3 = function(t3, r2) {
              return (n3 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n4, t4) {
                n4.__proto__ = t4;
              } || function(n4, t4) {
                for (var r3 in t4) Object.prototype.hasOwnProperty.call(t4, r3) && (n4[r3] = t4[r3]);
              })(t3, r2);
            };
            return function(t3, r2) {
              function i2() {
                this.constructor = t3;
              }
              n3(t3, r2), t3.prototype = null === r2 ? Object.create(r2) : (i2.prototype = r2.prototype, new i2());
            };
          }(), L = function(n3) {
            function t3(t4) {
              return n3.call(this, t4) || this;
            }
            return U(t3, n3), t3.createEncryptor = function(n4) {
              return new t3.Encryptor(n4);
            }, t3.createDecryptor = function(n4) {
              return new t3.Decryptor(n4);
            }, t3.Encryptor = function(n4) {
              function t4() {
                return null !== n4 && n4.apply(this, arguments) || this;
              }
              return U(t4, n4), t4.prototype.processBlock = function(n5, t5) {
                this.Hn.encryptBlock(n5, t5);
              }, t4;
            }(t3), t3.Decryptor = function(n4) {
              function t4() {
                return null !== n4 && n4.apply(this, arguments) || this;
              }
              return U(t4, n4), t4.prototype.processBlock = function(n5, t5) {
                this.Hn.decryptBlock(n5, t5);
              }, t4;
            }(t3), t3;
          }(B.T), F = /* @__PURE__ */ function() {
            var n3 = function(t3, r2) {
              return (n3 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n4, t4) {
                n4.__proto__ = t4;
              } || function(n4, t4) {
                for (var r3 in t4) Object.prototype.hasOwnProperty.call(t4, r3) && (n4[r3] = t4[r3]);
              })(t3, r2);
            };
            return function(t3, r2) {
              function i2() {
                this.constructor = t3;
              }
              n3(t3, r2), t3.prototype = null === r2 ? Object.create(r2) : (i2.prototype = r2.prototype, new i2());
            };
          }(), x = function(n3) {
            function t3(t4) {
              var r2 = n3.call(this, t4) || this;
              return r2.xn = [], r2;
            }
            return F(t3, n3), t3.createEncryptor = function(n4) {
              return new t3.Encryptor(n4);
            }, t3.createDecryptor = function(n4) {
              return new t3.Decryptor(n4);
            }, t3.Encryptor = function(n4) {
              function t4() {
                return null !== n4 && n4.apply(this, arguments) || this;
              }
              return F(t4, n4), t4.prototype.processBlock = function(n5, t5) {
                var r2 = this.Hn, i2 = r2.blockSize, e2 = this.ln, o2 = this.xn;
                e2 && (o2 = this.xn = e2.words.slice(0), this.ln = void 0), r2.encryptBlock(o2, 0);
                for (var u2 = 0; u2 < i2; u2++) n5[t5 + u2] ^= o2[u2];
              }, t4;
            }(t3), t3.Decryptor = t3.Encryptor, t3;
          }(B.T), P = r(5607), R = r(3664);
          var T = { pad: function(n3, t3) {
            var r2 = n3.nSigBytes, i2 = 4 * t3, e2 = i2 - r2 % i2, o2 = r2 + e2 - 1;
            n3.clamp(), n3.words[o2 >>> 2] |= e2 << 24 - o2 % 4 * 8, n3.nSigBytes += e2;
          }, unpad: function(n3) {
            var t3 = 255 & n3.words[n3.nSigBytes - 1 >>> 2];
            n3.nSigBytes -= t3;
          } }, K = r(3354);
          var W = { pad: function(n3, t3) {
            var r2 = 4 * t3, i2 = r2 - n3.nSigBytes % r2;
            n3.concat(K.e.random(i2 - 1)).concat(new K.e([i2 << 24], 1));
          }, unpad: function(n3) {
            var t3 = 255 & n3.words[n3.nSigBytes - 1 >>> 2];
            n3.nSigBytes -= t3;
          } };
          var G = { pad: function(n3, t3) {
            var r2 = 4 * t3;
            n3.clamp(), n3.nSigBytes += r2 - (n3.nSigBytes % r2 || r2);
          }, unpad: function(n3) {
            for (var t3 = n3.words, r2 = n3.nSigBytes - 1; r2 >= 0; r2--) if (t3[r2 >>> 2] >>> 24 - r2 % 4 * 8 & 255) {
              n3.nSigBytes = r2 + 1;
              break;
            }
          } };
          var q = { pad: function(n3, t3) {
            n3.concat(new K.e([2147483648], 1)), G.pad(n3, t3);
          }, unpad: function(n3) {
            G.unpad(n3), n3.nSigBytes -= 1;
          } }, Q = r(7919);
          var X = { pad: function(n3, t3) {
          }, unpad: function(n3) {
          } }, V = r(1232), Z = { CBC: C.n, CFB: I, CTR: D, ECB: L, OFB: x, GCM: P.V, CCM: R.K }, J = { AnsiX923: T, ISO10126: W, ISO97971: q, Pkcs7: Q.l, NoPadding: X, Zero: G }, Y = { OpenSSLFormatter: V.w };
        }(), i;
      }();
    });
  }
});

// ../auth/dist/tokenToHash.js
var require_tokenToHash = __commonJS({
  "../auth/dist/tokenToHash.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.tokenToHash = void 0;
    var JsCrypto = __importStar(require_jscrypto());
    var tokenToHash = ({ secretToken }) => JsCrypto.SHA256.hash(secretToken).toString(JsCrypto.Base64);
    exports.tokenToHash = tokenToHash;
  }
});

// ../../node_modules/.pnpm/nanoid@3.3.7/node_modules/nanoid/url-alphabet/index.js
var urlAlphabet;
var init_url_alphabet = __esm({
  "../../node_modules/.pnpm/nanoid@3.3.7/node_modules/nanoid/url-alphabet/index.js"() {
    urlAlphabet = "useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict";
  }
});

// ../../node_modules/.pnpm/nanoid@3.3.7/node_modules/nanoid/index.browser.js
var index_browser_exports = {};
__export(index_browser_exports, {
  customAlphabet: () => customAlphabet,
  customRandom: () => customRandom,
  nanoid: () => nanoid,
  random: () => random,
  urlAlphabet: () => urlAlphabet
});
var random, customRandom, customAlphabet, nanoid;
var init_index_browser = __esm({
  "../../node_modules/.pnpm/nanoid@3.3.7/node_modules/nanoid/index.browser.js"() {
    init_url_alphabet();
    random = (bytes) => crypto.getRandomValues(new Uint8Array(bytes));
    customRandom = (alphabet, defaultSize, getRandom) => {
      let mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1;
      let step = -~(1.6 * mask * defaultSize / alphabet.length);
      return (size = defaultSize) => {
        let id = "";
        while (true) {
          let bytes = getRandom(step);
          let j = step;
          while (j--) {
            id += alphabet[bytes[j] & mask] || "";
            if (id.length === size) return id;
          }
        }
      };
    };
    customAlphabet = (alphabet, size = 21) => customRandom(alphabet, size, random);
    nanoid = (size = 21) => crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {
      byte &= 63;
      if (byte < 36) {
        id += byte.toString(36);
      } else if (byte < 62) {
        id += (byte - 26).toString(36).toUpperCase();
      } else if (byte > 62) {
        id += "-";
      } else {
        id += "_";
      }
      return id;
    }, "");
  }
});

// ../auth/dist/createApplicationClientId.js
var require_createApplicationClientId = __commonJS({
  "../auth/dist/createApplicationClientId.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createApplicationClientId = void 0;
    var nanoid_1 = (init_index_browser(), __toCommonJS(index_browser_exports));
    var createApplicationClientId = () => `client_${(0, nanoid_1.nanoid)(20)}`;
    exports.createApplicationClientId = createApplicationClientId;
  }
});

// ../auth/dist/createPersonalAccessToken.js
var require_createPersonalAccessToken = __commonJS({
  "../auth/dist/createPersonalAccessToken.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createPersonalAccessToken = void 0;
    var nanoid_1 = (init_index_browser(), __toCommonJS(index_browser_exports));
    var createPersonalAccessToken = () => `pat_${(0, nanoid_1.nanoid)(20)}`;
    exports.createPersonalAccessToken = createPersonalAccessToken;
  }
});

// ../auth/dist/createChallengeToken.js
var require_createChallengeToken = __commonJS({
  "../auth/dist/createChallengeToken.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createChallengeToken = void 0;
    var nanoid_1 = (init_index_browser(), __toCommonJS(index_browser_exports));
    var createToken_1 = require_createToken();
    var createChallengeToken = async ({ secret }) => (0, createToken_1.createToken)({ payload: { challenge: (0, nanoid_1.nanoid)(20) }, secret, expiration: "10m" });
    exports.createChallengeToken = createChallengeToken;
  }
});

// ../auth/dist/verifyChallengeToken.js
var require_verifyChallengeToken = __commonJS({
  "../auth/dist/verifyChallengeToken.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.verifyChallengeToken = void 0;
    var verifyToken_1 = require_verifyToken();
    var verifyChallengeToken = (args) => (0, verifyToken_1.verifyToken)(args);
    exports.verifyChallengeToken = verifyChallengeToken;
  }
});

// ../auth/dist/decodeToken.js
var require_decodeToken = __commonJS({
  "../auth/dist/decodeToken.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.decodeToken = void 0;
    var errors_1 = require_dist();
    var jose_1 = (init_browser(), __toCommonJS(browser_exports));
    var decodeToken = ({ token }) => {
      try {
        return (0, jose_1.decodeJwt)(token);
      } catch {
        throw new errors_1.AuthorizationError();
      }
    };
    exports.decodeToken = decodeToken;
  }
});

// ../auth/dist/decodeAccessToken.js
var require_decodeAccessToken = __commonJS({
  "../auth/dist/decodeAccessToken.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.decodeAccessToken = void 0;
    var decodeToken_1 = require_decodeToken();
    var decodeAccessToken2 = (args) => (0, decodeToken_1.decodeToken)(args);
    exports.decodeAccessToken = decodeAccessToken2;
  }
});

// ../auth/dist/constants.js
var require_constants = __commonJS({
  "../auth/dist/constants.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.constants = void 0;
    exports.constants = {
      AUTHORIZATION_HEADER_NAME: "Authorization",
      AUTHORIZATION_BEARER: "Bearer",
      CLIENT_ID_QUERY_STRING_FIELD_NAME: "clientId",
      SDK_CLIENT_TYPE_NAME: "sdk",
      UI_CLIENT_TYPE_NAME: "ui",
      CUSTOM_HEADERS: {
        clientType: "X-Client-Type",
        twoFactorAuthToken: "X-2FA-Token",
        twoFactorRecoveryCode: "X-2FA-Recovery-Code"
      }
    };
  }
});

// ../auth/dist/getTokenFromRequest.js
var require_getTokenFromRequest = __commonJS({
  "../auth/dist/getTokenFromRequest.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getTokenFromRequest = void 0;
    var errors_1 = require_dist();
    var constants_1 = require_constants();
    var getTokenFromRequest = (request) => {
      const header = request.headers[constants_1.constants.AUTHORIZATION_HEADER_NAME];
      if (!header) {
        throw new errors_1.AuthorizationError();
      }
      return header.replace("Bearer ", "");
    };
    exports.getTokenFromRequest = getTokenFromRequest;
  }
});

// ../auth/dist/denyAccessFromAuthorizer.js
var require_denyAccessFromAuthorizer = __commonJS({
  "../auth/dist/denyAccessFromAuthorizer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.denyAccessFromAuthorizer = void 0;
    var denyAccessFromAuthorizer = ({ methodArn }) => ({
      principalId: "unknown",
      policyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Action: "execute-api:Invoke",
            Effect: "Deny",
            Resource: methodArn
          }
        ]
      },
      context: {}
    });
    exports.denyAccessFromAuthorizer = denyAccessFromAuthorizer;
  }
});

// ../auth/dist/allowAccessFromAuthorizer.js
var require_allowAccessFromAuthorizer = __commonJS({
  "../auth/dist/allowAccessFromAuthorizer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.allowAccessFromAuthorizer = void 0;
    var allowAccessFromAuthorizer = ({ principalId, context }) => ({
      principalId,
      policyDocument: {
        Version: "2012-10-17",
        Statement: [
          {
            Action: "execute-api:Invoke",
            Effect: "Allow",
            Resource: "*"
          }
        ]
      },
      context
    });
    exports.allowAccessFromAuthorizer = allowAccessFromAuthorizer;
  }
});

// ../auth/dist/generateGithubAppInstallationHash.js
var require_generateGithubAppInstallationHash = __commonJS({
  "../auth/dist/generateGithubAppInstallationHash.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.generateGithubAppInstallationHash = void 0;
    var nanoid_1 = (init_index_browser(), __toCommonJS(index_browser_exports));
    var generateGithubAppInstallationHash = () => (0, nanoid_1.nanoid)(32);
    exports.generateGithubAppInstallationHash = generateGithubAppInstallationHash;
  }
});

// ../auth/dist/generateGithubAppInstallationUrl.js
var require_generateGithubAppInstallationUrl = __commonJS({
  "../auth/dist/generateGithubAppInstallationUrl.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.generateGithubAppInstallationUrl = void 0;
    var generateGithubAppInstallationUrl = ({ appName, hash, callbackUrl, userId, gitProviderId }) => {
      const stateJson = {
        userId,
        gitProviderId,
        hash
      };
      const stateJsonString = JSON.stringify(stateJson);
      const encodedStateJson = encodeURIComponent(stateJsonString);
      return `https://github.com/apps/${appName}/installations/new?state=${encodedStateJson}&redirect_uri=${encodeURI(callbackUrl)}`;
    };
    exports.generateGithubAppInstallationUrl = generateGithubAppInstallationUrl;
  }
});

// ../auth/dist/generateGithubAppAuthorizationUrl.js
var require_generateGithubAppAuthorizationUrl = __commonJS({
  "../auth/dist/generateGithubAppAuthorizationUrl.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.generateGithubAppAuthorizationUrl = void 0;
    var generateGithubAppAuthorizationUrl = ({ clientId, userId, gitProviderId, callbackUrl }) => {
      const stateJson = {
        userId,
        gitProviderId
      };
      const stateJsonString = JSON.stringify(stateJson);
      const encodedStateJson = encodeURIComponent(stateJsonString);
      return `https://github.com/login/oauth/authorize?client_id=${clientId}&state=${encodedStateJson}&redirect_uri=${encodeURI(callbackUrl)}`;
    };
    exports.generateGithubAppAuthorizationUrl = generateGithubAppAuthorizationUrl;
  }
});

// ../auth/dist/verifyAssetsAccessToken.js
var require_verifyAssetsAccessToken = __commonJS({
  "../auth/dist/verifyAssetsAccessToken.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.verifyAssetsAccessToken = void 0;
    var verifyToken_1 = require_verifyToken();
    var verifyAssetsAccessToken = (args) => (0, verifyToken_1.verifyToken)(args);
    exports.verifyAssetsAccessToken = verifyAssetsAccessToken;
  }
});

// ../auth/dist/permissions.js
var require_permissions = __commonJS({
  "../auth/dist/permissions.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Permissions = void 0;
    var errors_1 = require_dist();
    var permissionScopes = [
      // Project permissions
      "PROJECT_EDIT_NAME",
      "PROJECT_EDIT_AVATAR",
      "PROJECT_EDIT_ACCESS_FROM_OFAC_COUNTRIES",
      "PROJECT_DELETE",
      // Storage permissions
      "STORAGE_EDIT_SETTINGS",
      "STORAGE_UPLOAD",
      "STORAGE_EDIT_NAME",
      "STORAGE_DELETE",
      "STORAGE_VIEW_INFORMATION",
      "STORAGE_VIEW_LIST",
      // Private gateway permissions
      "PRIVATE_GATEWAY_CREATE",
      "PRIVATE_GATEWAY_UPDATE_NAME",
      "PRIVATE_GATEWAY_DELETE",
      "PRIVATE_GATEWAY_ADD_AND_VERIFY_DOMAIN",
      "PRIVATE_GATEWAY_CHANGE_PRIMARY_DOMAIN",
      "PRIVATE_GATEWAY_DELETE_DOMAIN",
      "PRIVATE_GATEWAY_VIEW",
      // Site permissions
      "SITE_CREATE",
      "SITE_DEPLOY",
      "SITE_VIEW_OVERVIEW",
      "SITE_VIEW_BUILD_SETTINGS",
      "SITE_EDIT_BUILD_SETTINGS",
      "SITE_VIEW_ENV_VARIABLES",
      "SITE_EDIT_ENV_VARIABLES",
      "SITE_VIEW_DEPLOYMENTS",
      "SITE_VIEW_ANALYTICS",
      "SITE_EDIT_NAME",
      "SITE_EDIT_SLUG",
      "SITE_EDIT_AVATAR",
      "SITE_PURGE_CACHE",
      "SITE_DELETE",
      "SITE_ADD_AND_VERIFY_DOMAIN",
      "SITE_CHANGE_PRIMARY_DOMAIN",
      "SITE_DELETE_DOMAIN",
      "SITE_ADD_AND_VERIFY_ENS",
      "SITE_DELETE_ENS",
      "SITE_ADD_GIT_INTEGRATION",
      "SITE_REMOVE_GIT_INTEGRATION",
      // Function permissions
      "FUNCTION_CREATE",
      "FUNCTION_DEPLOY",
      "FUNCTION_EDIT_SETTINGS",
      "FUNCTION_DELETE",
      "FUNCTION_VIEW",
      "FUNCTION_VIEW_DEPLOYMENT",
      // IPNS permissions
      "IPNS_CREATE_RECORD",
      "IPNS_PUBLISH_RECORD",
      "IPNS_DELETE_RECORD",
      "IPNS_VIEW",
      // Billing permissions
      "BILLING_VIEW",
      "BILLING_MANAGE",
      // Application permissions
      "APPLICATION_VIEW",
      "APPLICATION_CREATE",
      "APPLICATION_EDIT",
      // Member permissions
      "MEMBER_TEAM_VIEW",
      "MEMBER_INVITE",
      "MEMBER_CHANGE_PERMISSIONS",
      "MEMBER_ASSIGN_OWNER",
      "MEMBER_DELETE_OTHERS",
      // Template permissions
      "TEMPLATE_CREATE"
    ];
    var Permissions = class _Permissions {
      static parse(permissions) {
        const scopes = permissions ? permissions.split(",") : [];
        for (const scope of scopes) {
          if (!permissionScopes.includes(scope)) {
            throw new errors_1.PermissionScopeError({ scope });
          }
        }
        return new _Permissions(scopes);
      }
      constructor(scopes) {
        this.scopes = new Set(scopes);
      }
      add(scope) {
        this.scopes.add(scope);
      }
      has(scope) {
        return this.scopes.has(scope);
      }
      delete(scope) {
        this.scopes.delete(scope);
      }
      toString() {
        return [...this.scopes].join(",");
      }
      toArray() {
        return [...this.scopes];
      }
    };
    exports.Permissions = Permissions;
  }
});

// ../auth/dist/predefinedPermissionGroups/admin.js
var require_admin = __commonJS({
  "../auth/dist/predefinedPermissionGroups/admin.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.admin = void 0;
    var permissions_1 = require_permissions();
    exports.admin = new permissions_1.Permissions([
      "PROJECT_EDIT_NAME",
      "PROJECT_EDIT_AVATAR",
      "PROJECT_EDIT_ACCESS_FROM_OFAC_COUNTRIES",
      "STORAGE_EDIT_SETTINGS",
      "STORAGE_UPLOAD",
      "STORAGE_EDIT_NAME",
      "STORAGE_DELETE",
      "STORAGE_VIEW_INFORMATION",
      "STORAGE_VIEW_LIST",
      "PRIVATE_GATEWAY_CREATE",
      "PRIVATE_GATEWAY_UPDATE_NAME",
      "PRIVATE_GATEWAY_DELETE",
      "PRIVATE_GATEWAY_ADD_AND_VERIFY_DOMAIN",
      "PRIVATE_GATEWAY_CHANGE_PRIMARY_DOMAIN",
      "PRIVATE_GATEWAY_DELETE_DOMAIN",
      "PRIVATE_GATEWAY_VIEW",
      "SITE_CREATE",
      "SITE_DEPLOY",
      "SITE_VIEW_OVERVIEW",
      "SITE_VIEW_BUILD_SETTINGS",
      "SITE_EDIT_BUILD_SETTINGS",
      "SITE_VIEW_ENV_VARIABLES",
      "SITE_EDIT_ENV_VARIABLES",
      "SITE_VIEW_DEPLOYMENTS",
      "SITE_VIEW_ANALYTICS",
      "SITE_EDIT_NAME",
      "SITE_EDIT_SLUG",
      "SITE_EDIT_AVATAR",
      "SITE_PURGE_CACHE",
      "SITE_DELETE",
      "SITE_ADD_AND_VERIFY_DOMAIN",
      "SITE_CHANGE_PRIMARY_DOMAIN",
      "SITE_DELETE_DOMAIN",
      "SITE_ADD_AND_VERIFY_ENS",
      "SITE_DELETE_ENS",
      "SITE_ADD_GIT_INTEGRATION",
      "SITE_REMOVE_GIT_INTEGRATION",
      "FUNCTION_CREATE",
      "FUNCTION_DEPLOY",
      "FUNCTION_EDIT_SETTINGS",
      "FUNCTION_DELETE",
      "FUNCTION_VIEW",
      "FUNCTION_VIEW_DEPLOYMENT",
      "IPNS_CREATE_RECORD",
      "IPNS_PUBLISH_RECORD",
      "IPNS_DELETE_RECORD",
      "IPNS_VIEW",
      "BILLING_VIEW",
      "APPLICATION_VIEW",
      "APPLICATION_CREATE",
      "APPLICATION_EDIT",
      "MEMBER_TEAM_VIEW",
      "MEMBER_INVITE",
      "MEMBER_CHANGE_PERMISSIONS",
      "MEMBER_DELETE_OTHERS",
      "TEMPLATE_CREATE"
    ]);
  }
});

// ../auth/dist/predefinedPermissionGroups/member.js
var require_member = __commonJS({
  "../auth/dist/predefinedPermissionGroups/member.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.member = void 0;
    var permissions_1 = require_permissions();
    exports.member = new permissions_1.Permissions([
      "PROJECT_EDIT_NAME",
      "PROJECT_EDIT_AVATAR",
      "STORAGE_UPLOAD",
      "STORAGE_EDIT_NAME",
      "STORAGE_DELETE",
      "STORAGE_VIEW_INFORMATION",
      "STORAGE_VIEW_LIST",
      "PRIVATE_GATEWAY_CREATE",
      "PRIVATE_GATEWAY_UPDATE_NAME",
      "PRIVATE_GATEWAY_ADD_AND_VERIFY_DOMAIN",
      "PRIVATE_GATEWAY_CHANGE_PRIMARY_DOMAIN",
      "PRIVATE_GATEWAY_DELETE_DOMAIN",
      "PRIVATE_GATEWAY_DELETE",
      "PRIVATE_GATEWAY_VIEW",
      "SITE_CREATE",
      "SITE_DEPLOY",
      "SITE_VIEW_OVERVIEW",
      "SITE_EDIT_NAME",
      "SITE_EDIT_SLUG",
      "SITE_EDIT_AVATAR",
      "SITE_VIEW_BUILD_SETTINGS",
      "SITE_EDIT_BUILD_SETTINGS",
      "SITE_VIEW_ENV_VARIABLES",
      "SITE_EDIT_ENV_VARIABLES",
      "SITE_VIEW_DEPLOYMENTS",
      "SITE_VIEW_ANALYTICS",
      "SITE_PURGE_CACHE",
      "SITE_ADD_AND_VERIFY_DOMAIN",
      "SITE_CHANGE_PRIMARY_DOMAIN",
      "SITE_DELETE_DOMAIN",
      "SITE_ADD_AND_VERIFY_ENS",
      "SITE_ADD_GIT_INTEGRATION",
      "SITE_DELETE_ENS",
      "FUNCTION_CREATE",
      "FUNCTION_DEPLOY",
      "FUNCTION_EDIT_SETTINGS",
      "FUNCTION_VIEW",
      "FUNCTION_VIEW_DEPLOYMENT",
      "FUNCTION_DELETE",
      "IPNS_CREATE_RECORD",
      "IPNS_PUBLISH_RECORD",
      "IPNS_DELETE_RECORD",
      "IPNS_VIEW",
      "APPLICATION_VIEW",
      "APPLICATION_CREATE",
      "APPLICATION_EDIT",
      "MEMBER_TEAM_VIEW",
      "TEMPLATE_CREATE"
    ]);
  }
});

// ../auth/dist/predefinedPermissionGroups/owner.js
var require_owner = __commonJS({
  "../auth/dist/predefinedPermissionGroups/owner.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.owner = void 0;
    var permissions_1 = require_permissions();
    exports.owner = new permissions_1.Permissions([
      "PROJECT_EDIT_NAME",
      "PROJECT_EDIT_AVATAR",
      "PROJECT_DELETE",
      "PROJECT_EDIT_ACCESS_FROM_OFAC_COUNTRIES",
      "STORAGE_EDIT_SETTINGS",
      "STORAGE_UPLOAD",
      "STORAGE_EDIT_NAME",
      "STORAGE_DELETE",
      "STORAGE_VIEW_INFORMATION",
      "STORAGE_VIEW_LIST",
      "PRIVATE_GATEWAY_CREATE",
      "PRIVATE_GATEWAY_UPDATE_NAME",
      "PRIVATE_GATEWAY_DELETE",
      "PRIVATE_GATEWAY_ADD_AND_VERIFY_DOMAIN",
      "PRIVATE_GATEWAY_CHANGE_PRIMARY_DOMAIN",
      "PRIVATE_GATEWAY_DELETE_DOMAIN",
      "PRIVATE_GATEWAY_VIEW",
      "SITE_CREATE",
      "SITE_DEPLOY",
      "SITE_VIEW_OVERVIEW",
      "SITE_VIEW_BUILD_SETTINGS",
      "SITE_EDIT_BUILD_SETTINGS",
      "SITE_VIEW_ENV_VARIABLES",
      "SITE_EDIT_ENV_VARIABLES",
      "SITE_VIEW_DEPLOYMENTS",
      "SITE_VIEW_ANALYTICS",
      "SITE_EDIT_NAME",
      "SITE_EDIT_SLUG",
      "SITE_EDIT_AVATAR",
      "SITE_PURGE_CACHE",
      "SITE_DELETE",
      "SITE_ADD_AND_VERIFY_DOMAIN",
      "SITE_CHANGE_PRIMARY_DOMAIN",
      "SITE_DELETE_DOMAIN",
      "SITE_ADD_AND_VERIFY_ENS",
      "SITE_DELETE_ENS",
      "SITE_ADD_GIT_INTEGRATION",
      "SITE_REMOVE_GIT_INTEGRATION",
      "FUNCTION_CREATE",
      "FUNCTION_DEPLOY",
      "FUNCTION_EDIT_SETTINGS",
      "FUNCTION_DELETE",
      "FUNCTION_VIEW",
      "FUNCTION_VIEW_DEPLOYMENT",
      "IPNS_CREATE_RECORD",
      "IPNS_PUBLISH_RECORD",
      "IPNS_DELETE_RECORD",
      "IPNS_VIEW",
      "IPNS_CREATE_RECORD",
      "IPNS_PUBLISH_RECORD",
      "IPNS_DELETE_RECORD",
      "IPNS_VIEW",
      "BILLING_VIEW",
      "BILLING_MANAGE",
      "APPLICATION_VIEW",
      "APPLICATION_CREATE",
      "APPLICATION_EDIT",
      "MEMBER_TEAM_VIEW",
      "MEMBER_INVITE",
      "MEMBER_CHANGE_PERMISSIONS",
      "MEMBER_ASSIGN_OWNER",
      "MEMBER_DELETE_OTHERS",
      "TEMPLATE_CREATE"
    ]);
  }
});

// ../auth/dist/predefinedPermissionGroups/readOnly.js
var require_readOnly = __commonJS({
  "../auth/dist/predefinedPermissionGroups/readOnly.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.readOnly = void 0;
    var permissions_1 = require_permissions();
    exports.readOnly = new permissions_1.Permissions([
      "STORAGE_VIEW_INFORMATION",
      "STORAGE_VIEW_LIST",
      "SITE_VIEW_OVERVIEW",
      "SITE_VIEW_DEPLOYMENTS",
      "SITE_VIEW_BUILD_SETTINGS",
      "SITE_VIEW_ENV_VARIABLES",
      "SITE_VIEW_ANALYTICS",
      "FUNCTION_VIEW",
      "FUNCTION_VIEW_DEPLOYMENT",
      "IPNS_VIEW",
      "PRIVATE_GATEWAY_VIEW",
      "APPLICATION_VIEW"
    ]);
  }
});

// ../auth/dist/index.js
var require_dist2 = __commonJS({
  "../auth/dist/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p)) __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.predefinedPermissionGroups = void 0;
    __exportStar(require_createAccessToken(), exports);
    __exportStar(require_createAssetsAccessToken(), exports);
    __exportStar(require_createMigrationToken(), exports);
    __exportStar(require_verifyAccessToken(), exports);
    __exportStar(require_verifyMigrationToken(), exports);
    __exportStar(require_tokenToHash(), exports);
    __exportStar(require_createApplicationClientId(), exports);
    __exportStar(require_createPersonalAccessToken(), exports);
    __exportStar(require_createChallengeToken(), exports);
    __exportStar(require_verifyChallengeToken(), exports);
    __exportStar(require_decodeAccessToken(), exports);
    __exportStar(require_getTokenFromRequest(), exports);
    __exportStar(require_denyAccessFromAuthorizer(), exports);
    __exportStar(require_allowAccessFromAuthorizer(), exports);
    __exportStar(require_generateGithubAppInstallationHash(), exports);
    __exportStar(require_generateGithubAppInstallationUrl(), exports);
    __exportStar(require_generateGithubAppAuthorizationUrl(), exports);
    __exportStar(require_constants(), exports);
    __exportStar(require_verifyAssetsAccessToken(), exports);
    __exportStar(require_permissions(), exports);
    var admin_1 = require_admin();
    var member_1 = require_member();
    var owner_1 = require_owner();
    var readOnly_1 = require_readOnly();
    exports.predefinedPermissionGroups = { owner: owner_1.owner, admin: admin_1.admin, member: member_1.member, readOnly: readOnly_1.readOnly };
  }
});

// ../../node_modules/.pnpm/files-from-path@1.0.4/node_modules/files-from-path/cjs/src/index.browser.js
var require_index_browser = __commonJS({
  "../../node_modules/.pnpm/files-from-path@1.0.4/node_modules/files-from-path/cjs/src/index.browser.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    async function filesFromPaths3() {
      throw new Error("Unsupported in this environment");
    }
    exports.filesFromPaths = filesFromPaths3;
  }
});

// src/FleekSdk.ts
var import_auth3 = __toESM(require_dist2());
var import_errors50 = __toESM(require_dist());

// ../gql-client-utils/dist/runtime/error.ts
var GenqlError = class extends Error {
  constructor(errors2, data) {
    let message2 = Array.isArray(errors2) ? errors2.map((x) => x?.message || "").join("\n") : "";
    if (!message2) {
      message2 = "GraphQL error";
    }
    super(message2);
    this.errors = [];
    this.errors = errors2;
    this.data = data;
  }
};

// ../gql-client-utils/dist/runtime/batcher.ts
function dispatchQueueBatch(client, queue) {
  let batchedQuery = queue.map((item) => item.request);
  if (batchedQuery.length === 1) {
    batchedQuery = batchedQuery[0];
  }
  (() => {
    try {
      return client.fetcher(batchedQuery);
    } catch (e) {
      return Promise.reject(e);
    }
  })().then((responses) => {
    if (queue.length === 1 && !Array.isArray(responses)) {
      if (responses.errors && responses.errors.length) {
        queue[0].reject(
          new GenqlError(responses.errors, responses.data)
        );
        return;
      }
      queue[0].resolve(responses);
      return;
    } else if (responses.length !== queue.length) {
      throw new Error("response length did not match query length");
    }
    for (let i = 0; i < queue.length; i++) {
      if (responses[i].errors && responses[i].errors.length) {
        queue[i].reject(
          new GenqlError(responses[i].errors, responses[i].data)
        );
      } else {
        queue[i].resolve(responses[i]);
      }
    }
  }).catch((e) => {
    for (let i = 0; i < queue.length; i++) {
      queue[i].reject(e);
    }
  });
}
function dispatchQueue(client, options) {
  const queue = client._queue;
  const maxBatchSize = options.maxBatchSize || 0;
  client._queue = [];
  if (maxBatchSize > 0 && maxBatchSize < queue.length) {
    for (let i = 0; i < queue.length / maxBatchSize; i++) {
      dispatchQueueBatch(
        client,
        queue.slice(i * maxBatchSize, (i + 1) * maxBatchSize)
      );
    }
  } else {
    dispatchQueueBatch(client, queue);
  }
}
var QueryBatcher = class _QueryBatcher {
  constructor(fetcher, {
    batchInterval = 6,
    shouldBatch = true,
    maxBatchSize = 0
  } = {}) {
    this.fetcher = fetcher;
    this._options = {
      batchInterval,
      shouldBatch,
      maxBatchSize
    };
    this._queue = [];
  }
  /**
   * Fetch will send a graphql request and return the parsed json.
   * @param {string}      query          - the graphql query.
   * @param {Variables}   variables      - any variables you wish to inject as key/value pairs.
   * @param {[string]}    operationName  - the graphql operationName.
   * @param {Options}     overrides      - the client options overrides.
   *
   * @return {promise} resolves to parsed json of server response
   *
   * @example
   * client.fetch(`
   *    query getHuman($id: ID!) {
   *      human(id: $id) {
   *        name
   *        height
   *      }
   *    }
   * `, { id: "1001" }, 'getHuman')
   *    .then(human => {
   *      // do something with human
   *      console.log(human);
   *    });
   */
  fetch(query, variables, operationName, overrides = {}) {
    const request = {
      query
    };
    const options = Object.assign({}, this._options, overrides);
    if (variables) {
      request.variables = variables;
    }
    if (operationName) {
      request.operationName = operationName;
    }
    const promise = new Promise((resolve, reject) => {
      this._queue.push({
        request,
        resolve,
        reject
      });
      if (this._queue.length === 1) {
        if (options.shouldBatch) {
          setTimeout(
            () => dispatchQueue(this, options),
            options.batchInterval
          );
        } else {
          dispatchQueue(this, options);
        }
      }
    });
    return promise;
  }
  /**
   * Fetch will send a graphql request and return the parsed json.
   * @param {string}      query          - the graphql query.
   * @param {Variables}   variables      - any variables you wish to inject as key/value pairs.
   * @param {[string]}    operationName  - the graphql operationName.
   * @param {Options}     overrides      - the client options overrides.
   *
   * @return {Promise<Array<Result>>} resolves to parsed json of server response
   *
   * @example
   * client.forceFetch(`
   *    query getHuman($id: ID!) {
   *      human(id: $id) {
   *        name
   *        height
   *      }
   *    }
   * `, { id: "1001" }, 'getHuman')
   *    .then(human => {
   *      // do something with human
   *      console.log(human);
   *    });
   */
  forceFetch(query, variables, operationName, overrides = {}) {
    const request = {
      query
    };
    const options = Object.assign({}, this._options, overrides, {
      shouldBatch: false
    });
    if (variables) {
      request.variables = variables;
    }
    if (operationName) {
      request.operationName = operationName;
    }
    const promise = new Promise((resolve, reject) => {
      const client = new _QueryBatcher(this.fetcher, this._options);
      client._queue = [
        {
          request,
          resolve,
          reject
        }
      ];
      dispatchQueue(client, options);
    });
    return promise;
  }
};

// ../gql-client-utils/dist/runtime/fetcher.ts
var DEFAULT_BATCH_OPTIONS = {
  maxBatchSize: 10,
  batchInterval: 40
};
var createFetcher = ({
  url,
  headers = {},
  fetcher,
  fetch: _fetch,
  batch = false,
  ...rest
}) => {
  if (!url && !fetcher) {
    throw new Error("url or fetcher is required");
  }
  fetcher = fetcher || (async (body) => {
    let headersObject = typeof headers == "function" ? await headers() : headers;
    headersObject = headersObject || {};
    if (typeof fetch === "undefined" && !_fetch) {
      throw new Error(
        "Global `fetch` function is not available, pass a fetch polyfill to Genql `createClient`"
      );
    }
    let fetchImpl = _fetch || fetch;
    const res = await fetchImpl(url, {
      headers: {
        "Content-Type": "application/json",
        ...headersObject
      },
      method: "POST",
      body: JSON.stringify(body),
      ...rest
    });
    if (!res.ok) {
      throw new Error(`${res.statusText}: ${await res.text()}`);
    }
    const json = await res.json();
    return json;
  });
  if (!batch) {
    return async (body) => {
      const json = await fetcher(body);
      if (Array.isArray(json)) {
        return json.map((json2) => {
          if (json2?.errors?.length) {
            throw new GenqlError(json2.errors || [], json2.data);
          }
          return json2.data;
        });
      } else {
        if (json?.errors?.length) {
          throw new GenqlError(json.errors || [], json.data);
        }
        return json.data;
      }
    };
  }
  const batcher = new QueryBatcher(
    async (batchedQuery) => {
      const json = await fetcher(batchedQuery);
      return json;
    },
    batch === true ? DEFAULT_BATCH_OPTIONS : batch
  );
  return async ({ query, variables }) => {
    const json = await batcher.fetch(query, variables);
    if (json?.data) {
      return json.data;
    }
    throw new Error(
      "Genql batch fetcher returned unexpected result " + JSON.stringify(json)
    );
  };
};

// ../gql-client-utils/dist/runtime/generateGraphqlOperation.ts
var parseRequest = (request, ctx, path) => {
  if (typeof request === "object" && "__args" in request) {
    const args = request.__args;
    let fields = { ...request };
    delete fields.__args;
    const argNames = Object.keys(args);
    if (argNames.length === 0) {
      return parseRequest(fields, ctx, path);
    }
    const field = getFieldFromPath(ctx.root, path);
    const argStrings = argNames.map((argName) => {
      ctx.varCounter++;
      const varName = `v${ctx.varCounter}`;
      const typing = field.args && field.args[argName];
      if (!typing) {
        throw new Error(
          `no typing defined for argument \`${argName}\` in path \`${path.join(
            "."
          )}\``
        );
      }
      ctx.variables[varName] = {
        value: args[argName],
        typing
      };
      return `${argName}:$${varName}`;
    });
    return `(${argStrings})${parseRequest(fields, ctx, path)}`;
  } else if (typeof request === "object" && Object.keys(request).length > 0) {
    const fields = request;
    const fieldNames = Object.keys(fields).filter((k) => Boolean(fields[k]));
    if (fieldNames.length === 0) {
      throw new Error(
        `field selection should not be empty: ${path.join(".")}`
      );
    }
    const type = path.length > 0 ? getFieldFromPath(ctx.root, path).type : ctx.root;
    const scalarFields = type.scalar;
    let scalarFieldsFragment;
    if (fieldNames.includes("__scalar")) {
      const falsyFieldNames = new Set(
        Object.keys(fields).filter((k) => !Boolean(fields[k]))
      );
      if (scalarFields?.length) {
        ctx.fragmentCounter++;
        scalarFieldsFragment = `f${ctx.fragmentCounter}`;
        ctx.fragments.push(
          `fragment ${scalarFieldsFragment} on ${type.name}{${scalarFields.filter((f) => !falsyFieldNames.has(f)).join(",")}}`
        );
      }
    }
    const fieldsSelection = fieldNames.filter((f) => !["__scalar", "__name"].includes(f)).map((f) => {
      const parsed = parseRequest(fields[f], ctx, [...path, f]);
      if (f.startsWith("on_")) {
        ctx.fragmentCounter++;
        const implementationFragment = `f${ctx.fragmentCounter}`;
        const typeMatch = f.match(/^on_(.+)/);
        if (!typeMatch || !typeMatch[1])
          throw new Error("match failed");
        ctx.fragments.push(
          `fragment ${implementationFragment} on ${typeMatch[1]}${parsed}`
        );
        return `...${implementationFragment}`;
      } else {
        return `${f}${parsed}`;
      }
    }).concat(scalarFieldsFragment ? [`...${scalarFieldsFragment}`] : []).join(",");
    return `{${fieldsSelection}}`;
  } else {
    return "";
  }
};
var generateGraphqlOperation = (operation, root, fields) => {
  const ctx = {
    root,
    varCounter: 0,
    variables: {},
    fragmentCounter: 0,
    fragments: []
  };
  const result = parseRequest(fields, ctx, []);
  const varNames = Object.keys(ctx.variables);
  const varsString = varNames.length > 0 ? `(${varNames.map((v) => {
    const variableType = ctx.variables[v].typing[1];
    return `$${v}:${variableType}`;
  })})` : "";
  const operationName = fields?.__name || "";
  return {
    query: [
      `${operation} ${operationName}${varsString}${result}`,
      ...ctx.fragments
    ].join(","),
    variables: Object.keys(ctx.variables).reduce(
      (r, v) => {
        r[v] = ctx.variables[v].value;
        return r;
      },
      {}
    ),
    ...operationName ? { operationName: operationName.toString() } : {}
  };
};
var getFieldFromPath = (root, path) => {
  let current;
  if (!root) throw new Error("root type is not provided");
  if (path.length === 0) throw new Error(`path is empty`);
  path.forEach((f) => {
    const type = current ? current.type : root;
    if (!type.fields)
      throw new Error(`type \`${type.name}\` does not have fields`);
    const possibleTypes = Object.keys(type.fields).filter((i) => i.startsWith("on_")).reduce(
      (types2, fieldName) => {
        const field2 = type.fields && type.fields[fieldName];
        if (field2) types2.push(field2.type);
        return types2;
      },
      [type]
    );
    let field = null;
    possibleTypes.forEach((type2) => {
      const found = type2.fields && type2.fields[f];
      if (found) field = found;
    });
    if (!field)
      throw new Error(
        `type \`${type.name}\` does not have a field \`${f}\``
      );
    current = field;
  });
  return current;
};

// ../gql-client-utils/dist/runtime/createClient.ts
var createClient = ({
  queryRoot,
  mutationRoot,
  subscriptionRoot,
  ...options
}) => {
  const fetcher = createFetcher(options);
  const client = {};
  if (queryRoot) {
    client.query = (request) => {
      if (!queryRoot) throw new Error("queryRoot argument is missing");
      const resultPromise = fetcher(
        generateGraphqlOperation("query", queryRoot, request)
      );
      return resultPromise;
    };
  }
  if (mutationRoot) {
    client.mutation = (request) => {
      if (!mutationRoot)
        throw new Error("mutationRoot argument is missing");
      const resultPromise = fetcher(
        generateGraphqlOperation("mutation", mutationRoot, request)
      );
      return resultPromise;
    };
  }
  return client;
};

// ../gql-client-utils/dist/runtime/linkTypeMap.ts
var linkTypeMap = (typeMap2) => {
  const indexToName = Object.assign(
    {},
    ...Object.keys(typeMap2.types).map((k, i) => ({ [i]: k }))
  );
  let intermediaryTypeMap = Object.assign(
    {},
    ...Object.keys(typeMap2.types || {}).map(
      (k) => {
        const type = typeMap2.types[k];
        const fields = type || {};
        return {
          [k]: {
            name: k,
            // type scalar properties
            scalar: Object.keys(fields).filter((f) => {
              const [type2] = fields[f] || [];
              const isScalar = type2 && typeMap2.scalars.includes(type2);
              if (!isScalar) {
                return false;
              }
              const args = fields[f]?.[1];
              const argTypes = Object.values(args || {}).map((x) => x?.[1]).filter(Boolean);
              const hasRequiredArgs = argTypes.some(
                (str) => str && str.endsWith("!")
              );
              if (hasRequiredArgs) {
                return false;
              }
              return true;
            }),
            // fields with corresponding `type` and `args`
            fields: Object.assign(
              {},
              ...Object.keys(fields).map(
                (f) => {
                  const [typeIndex, args] = fields[f] || [];
                  if (typeIndex == null) {
                    return {};
                  }
                  return {
                    [f]: {
                      // replace index with type name
                      type: indexToName[typeIndex],
                      args: Object.assign(
                        {},
                        ...Object.keys(args || {}).map(
                          (k2) => {
                            if (!args || !args[k2]) {
                              return;
                            }
                            const [
                              argTypeName,
                              argTypeString
                            ] = args[k2];
                            return {
                              [k2]: [
                                indexToName[argTypeName],
                                argTypeString || indexToName[argTypeName]
                              ]
                            };
                          }
                        )
                      )
                    }
                  };
                }
              )
            )
          }
        };
      }
    )
  );
  const res = resolveConcreteTypes(intermediaryTypeMap);
  return res;
};
var resolveConcreteTypes = (linkedTypeMap) => {
  Object.keys(linkedTypeMap).forEach((typeNameFromKey) => {
    const type = linkedTypeMap[typeNameFromKey];
    if (!type.fields) {
      return;
    }
    const fields = type.fields;
    Object.keys(fields).forEach((f) => {
      const field = fields[f];
      if (field.args) {
        const args = field.args;
        Object.keys(args).forEach((key) => {
          const arg = args[key];
          if (arg) {
            const [typeName2] = arg;
            if (typeof typeName2 === "string") {
              if (!linkedTypeMap[typeName2]) {
                linkedTypeMap[typeName2] = { name: typeName2 };
              }
              arg[0] = linkedTypeMap[typeName2];
            }
          }
        });
      }
      const typeName = field.type;
      if (typeof typeName === "string") {
        if (!linkedTypeMap[typeName]) {
          linkedTypeMap[typeName] = { name: typeName };
        }
        field.type = linkedTypeMap[typeName];
      }
    });
  });
  return linkedTypeMap;
};

// ../gql-client-utils/dist/types.ts
var types_default = {
  "scalars": [
    1,
    3,
    8,
    9,
    14,
    16,
    18,
    23,
    24,
    26,
    27,
    28,
    30,
    38,
    39,
    73,
    95,
    96,
    105,
    106,
    110,
    123,
    131,
    145,
    163,
    180,
    194,
    204,
    210,
    212,
    256,
    262,
    263,
    264,
    274,
    284,
    285,
    287,
    288,
    295,
    305,
    344,
    345,
    349,
    350,
    351,
    352,
    353,
    354,
    355,
    356,
    357,
    358,
    359,
    360
  ],
  "types": {
    "AcceptInvitationWhereInput": {
      "hash": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "ID": {},
    "Application": {
      "clientId": [
        3
      ],
      "createdAt": [
        73
      ],
      "id": [
        1
      ],
      "name": [
        3
      ],
      "updatedAt": [
        73
      ],
      "whiteLabelDomains": [
        6
      ],
      "whiteLabelDomainsPaginated": [
        7,
        {
          "filter": [
            215
          ]
        }
      ],
      "whitelistDomains": [
        10
      ],
      "__typename": [
        3
      ]
    },
    "String": {},
    "ApplicationNameAvailabilityWhereInput": {
      "name": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "ApplicationWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "ApplicationWhiteLabelDomain": {
      "createdAt": [
        73
      ],
      "hostname": [
        3
      ],
      "id": [
        1
      ],
      "updatedAt": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "ApplicationWhiteLabelDomainsWithNestedAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        6
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "Int": {},
    "Boolean": {},
    "ApplicationWhitelistDomain": {
      "createdAt": [
        73
      ],
      "hostname": [
        3
      ],
      "id": [
        1
      ],
      "updatedAt": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "ApplicationsPaginationInput": {
      "match": [
        3
      ],
      "page": [
        8
      ],
      "take": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "ApplicationsWithAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        2
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "ArweavePin": {
      "bundlrId": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "BigInt": {},
    "BillingCycle": {
      "billingCycleUsages": [
        17
      ],
      "billingPartnerTransactionId": [
        3
      ],
      "createdAt": [
        73
      ],
      "endDate": [
        73
      ],
      "id": [
        1
      ],
      "project": [
        238
      ],
      "projectId": [
        3
      ],
      "startDate": [
        73
      ],
      "status": [
        16
      ],
      "subscription": [
        34
      ],
      "subscriptionId": [
        3
      ],
      "updatedAt": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "BillingCycleStatus": {},
    "BillingCycleUsage": {
      "amount": [
        18
      ],
      "billingCycle": [
        15
      ],
      "billingCycleId": [
        3
      ],
      "billingPlanOverageRule": [
        25
      ],
      "billingPlanOverageRuleId": [
        3
      ],
      "createdAt": [
        73
      ],
      "id": [
        1
      ],
      "updatedAt": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "Float": {},
    "BillingCycleUsagesPaginationInput": {
      "match": [
        3
      ],
      "page": [
        8
      ],
      "take": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "BillingCycleUsagesWithAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        17
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "BillingPlan": {
      "billingPartnerId": [
        3
      ],
      "billingPlanEnablementRules": [
        22
      ],
      "billingPlanOverageRules": [
        25
      ],
      "billingPlanTierRules": [
        29
      ],
      "createdAt": [
        73
      ],
      "disabledAt": [
        73
      ],
      "id": [
        1
      ],
      "isActive": [
        9
      ],
      "isPublicPlan": [
        9
      ],
      "name": [
        3
      ],
      "planLevel": [
        24
      ],
      "price": [
        18
      ],
      "updatedAt": [
        73
      ],
      "version": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "BillingPlanEnablementRule": {
      "billingPlan": [
        21
      ],
      "billingPlanId": [
        3
      ],
      "createdAt": [
        73
      ],
      "id": [
        1
      ],
      "isIncluded": [
        9
      ],
      "name": [
        3
      ],
      "type": [
        23
      ],
      "updatedAt": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "BillingPlanEnablementRuleType": {},
    "BillingPlanLevel": {},
    "BillingPlanOverageRule": {
      "billingPlanId": [
        1
      ],
      "createdAt": [
        73
      ],
      "id": [
        1
      ],
      "includedAmount": [
        8
      ],
      "name": [
        3
      ],
      "overageBucketSize": [
        8
      ],
      "overagePrice": [
        18
      ],
      "overageType": [
        27
      ],
      "type": [
        26
      ],
      "updatedAt": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "BillingPlanOverageRuleType": {},
    "BillingPlanOverageType": {},
    "BillingPlanStatus": {},
    "BillingPlanTierRule": {
      "billingPlan": [
        21
      ],
      "billingPlanId": [
        3
      ],
      "createdAt": [
        73
      ],
      "id": [
        1
      ],
      "name": [
        3
      ],
      "type": [
        3
      ],
      "updatedAt": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "BillingPlanTierRuleType": {},
    "BillingPlanWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "BillingPlansPaginationInput": {
      "match": [
        3
      ],
      "page": [
        8
      ],
      "take": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "BillingPlansWithAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        21
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "BillingSubscription": {
      "billingPartnerSubscriptionId": [
        3
      ],
      "createdAt": [
        73
      ],
      "endDate": [
        73
      ],
      "id": [
        1
      ],
      "isActive": [
        9
      ],
      "project": [
        238
      ],
      "projectId": [
        3
      ],
      "startDate": [
        73
      ],
      "type": [
        288
      ],
      "updatedAt": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "Build": {
      "baseDirectory": [
        3
      ],
      "buildCommand": [
        3
      ],
      "distDirectory": [
        3
      ],
      "dockerImage": [
        3
      ],
      "id": [
        1
      ],
      "logs": [
        36
      ],
      "logsPaginated": [
        37,
        {
          "filter": [
            215
          ]
        }
      ],
      "status": [
        38
      ],
      "__typename": [
        3
      ]
    },
    "BuildLog": {
      "createdAt": [
        73
      ],
      "id": [
        1
      ],
      "text": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "BuildLogsWithNestedAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        36
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "BuildStatus": {},
    "CID": {},
    "CreateApplicationDataInput": {
      "name": [
        3
      ],
      "whiteLabelDomains": [
        3
      ],
      "whitelistDomains": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "CreateBillingCycleUsageDataInput": {
      "amount": [
        18
      ],
      "billingCycleId": [
        1
      ],
      "billingPlanOverageRuleId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "CreateBillingPlanDataInput": {
      "billingPartnerId": [
        1
      ],
      "description": [
        3
      ],
      "isActive": [
        9
      ],
      "isPublicPlan": [
        9
      ],
      "name": [
        3
      ],
      "planLevel": [
        24
      ],
      "price": [
        18
      ],
      "version": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "CreateCustomIpfsDeploymentDataInput": {
      "cid": [
        39
      ],
      "siteId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "CreateDnsConfigDataInput": {
      "name": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "CreateDnsConfigWhereInput": {
      "domainId": [
        1
      ],
      "siteId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "CreateDomainDataInput": {
      "hostname": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "CreateDomainWhereInput": {
      "zoneId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "CreateEnsRecordDataInput": {
      "name": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "CreateEnsRecordWhereInput": {
      "ipnsRecordId": [
        1
      ],
      "siteId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "CreateFleekFunctionDataInput": {
      "name": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "CreateFolderDataInput": {
      "name": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "CreateFolderWhereInput": {
      "parentFolderId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "CreateGithubAppAuthorizationUrlWhereInput": {
      "gitProviderId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "CreateGithubAppInstallationUrlWhereInput": {
      "gitProviderId": [
        1
      ],
      "projectId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "CreateGithubIntegrationForProjectDataInput": {
      "projectId": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "CreateGithubRepoFromTemplateDataInput": {
      "isPrivate": [
        9
      ],
      "repoName": [
        3
      ],
      "repoOwner": [
        3
      ],
      "templateOwner": [
        3
      ],
      "templateRepo": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "CreateGithubRepoFromTemplateWhereInput": {
      "gitIntegrationId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "CreateInvitationDataInput": {
      "email": [
        3
      ],
      "permissionGroupId": [
        1
      ],
      "role": [
        256
      ],
      "__typename": [
        3
      ]
    },
    "CreateIpnsRecordForSiteWhereInput": {
      "siteId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "CreateLoginVerificationSessionWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "CreateMigrationRequestsFromTokenDataInput": {
      "token": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "CreateMigrationTokenDataInput": {
      "teamIds": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "CreatePersonalAccessTokenFromVerificationSessionDataInput": {
      "name": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "CreatePersonalAccessTokenFromVerificationSessionWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "CreatePrivateGatewayDataInput": {
      "name": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "CreatePrivateGatewayWhereInput": {
      "zoneId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "CreateProjectDataInput": {
      "name": [
        3
      ],
      "planId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "CreateSalesContactRequestDataInput": {
      "description": [
        3
      ],
      "email": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "CreateSecretDataInput": {
      "groupId": [
        1
      ],
      "key": [
        3
      ],
      "value": [
        3
      ],
      "visibility": [
        264
      ],
      "__typename": [
        3
      ]
    },
    "CreateSiteDataInput": {
      "baseDirectory": [
        3
      ],
      "buildCommand": [
        3
      ],
      "distDirectory": [
        3
      ],
      "dockerImage": [
        3
      ],
      "enablePreviews": [
        9
      ],
      "frameworkId": [
        1
      ],
      "gitIntegrationId": [
        1
      ],
      "githubInstallationId": [
        8
      ],
      "name": [
        3
      ],
      "sourceBranch": [
        3
      ],
      "sourceProvider": [
        285
      ],
      "sourceRepositoryId": [
        3
      ],
      "sourceRepositoryName": [
        3
      ],
      "sourceRepositoryOwner": [
        3
      ],
      "templateId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "CreateTemplateDataInput": {
      "banner": [
        131
      ],
      "description": [
        3
      ],
      "name": [
        3
      ],
      "siteId": [
        1
      ],
      "templateCategoryId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "CreateZoneForSiteWhereInput": {
      "siteId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "Date": {},
    "DeclineInvitationWhereInput": {
      "hash": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "DeleteApplicationWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "DeleteDomainWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "DeleteEnsRecordWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "DeleteFleekFunctionWhereInput": {
      "id": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "DeleteFolderWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "DeleteInvitationWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "DeleteIpnsRecordWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "DeleteMembershipWhereInput": {
      "projectId": [
        1
      ],
      "userId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "DeletePersonalAccessTokenWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "DeletePinWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "DeletePrivateGatewayWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "DeleteProjectWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "DeleteRecoveryCodesWhereInput": {
      "secretKeyId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "DeleteSecretKeyWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "DeleteSecretWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "DeleteSiteWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "DeleteTemplateWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "DeleteUserWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "DeleteZoneWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "Deployment": {
      "build": [
        35
      ],
      "cid": [
        3
      ],
      "createdAt": [
        73
      ],
      "id": [
        1
      ],
      "previewImageUrl": [
        3
      ],
      "previewOnly": [
        9
      ],
      "previewUrlSlug": [
        3
      ],
      "siteId": [
        1
      ],
      "sourceAuthor": [
        3
      ],
      "sourceBranch": [
        3
      ],
      "sourceMessage": [
        3
      ],
      "sourceProvider": [
        285
      ],
      "sourceRef": [
        3
      ],
      "sourceRepositoryId": [
        3
      ],
      "sourceRepositoryName": [
        3
      ],
      "sourceRepositoryOwner": [
        3
      ],
      "startedAt": [
        73
      ],
      "status": [
        96
      ],
      "storageType": [
        287
      ],
      "updatedAt": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "DeploymentMode": {},
    "DeploymentStatus": {},
    "DeploymentWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "DeploymentsPaginationInput": {
      "match": [
        3
      ],
      "page": [
        8
      ],
      "sortField": [
        349
      ],
      "sortOrder": [
        284
      ],
      "take": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "DeploymentsQueueLimitWhereInput": {
      "siteId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "DeploymentsWhereInput": {
      "branch": [
        3
      ],
      "deploymentMode": [
        95
      ],
      "endDate": [
        73
      ],
      "siteId": [
        1
      ],
      "startDate": [
        73
      ],
      "status": [
        96
      ],
      "statuses": [
        96
      ],
      "__typename": [
        3
      ]
    },
    "DeploymentsWithAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        94
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "DeploymentsWithNestedAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        94
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "DisableTwoFactorProtectedActionWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "DnsConfig": {
      "createdAt": [
        73
      ],
      "id": [
        1
      ],
      "name": [
        3
      ],
      "type": [
        105
      ],
      "updatedAt": [
        73
      ],
      "value": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "DnsConfigType": {},
    "DnslinkStatus": {},
    "Domain": {
      "createdAt": [
        73
      ],
      "dnsConfigs": [
        104
      ],
      "dnslinkStatus": [
        106
      ],
      "errorMessage": [
        3
      ],
      "hostname": [
        3
      ],
      "id": [
        1
      ],
      "isVerified": [
        9
      ],
      "project": [
        238
      ],
      "status": [
        110
      ],
      "updatedAt": [
        73
      ],
      "zone": [
        343
      ],
      "__typename": [
        3
      ]
    },
    "DomainAvailabilityWhereInput": {
      "hostname": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "DomainByHostnameWhereInput": {
      "hostname": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "DomainStatus": {},
    "DomainWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "DomainsByZoneIdPaginationInput": {
      "match": [
        3
      ],
      "page": [
        8
      ],
      "take": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "DomainsByZoneIdWhereInput": {
      "zoneId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "DomainsByZoneIdWithAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        107
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "DomainsPaginationInput": {
      "match": [
        3
      ],
      "page": [
        8
      ],
      "take": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "DomainsWithAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        107
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "DomainsWithNestedAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        107
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "EmailAvailabilityWhereInput": {
      "email": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "EnableTwoFactorProtectedActionWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "EnsNameAvailabilityWhereInput": {
      "name": [
        3
      ],
      "siteId": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "EnsRecord": {
      "createdAt": [
        73
      ],
      "id": [
        1
      ],
      "ipnsRecord": [
        175
      ],
      "name": [
        3
      ],
      "site": [
        267
      ],
      "status": [
        123
      ],
      "updatedAt": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "EnsRecordByNameWhereInput": {
      "name": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "EnsRecordStatus": {},
    "EnsRecordWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "EnsRecordsByIpnsIdPaginationInput": {
      "match": [
        3
      ],
      "page": [
        8
      ],
      "take": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "EnsRecordsByIpnsIdWhereInput": {
      "ipnsRecordId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "EnsRecordsByIpnsIdWithAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        121
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "EnsRecordsPaginationInput": {
      "match": [
        3
      ],
      "page": [
        8
      ],
      "take": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "EnsRecordsWithAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        121
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "EnsRecordsWithNestedAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        121
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "File": {},
    "FilecoinDeal": {
      "activation": [
        73
      ],
      "cid": [
        3
      ],
      "created": [
        73
      ],
      "dataModelSelector": [
        3
      ],
      "dealId": [
        8
      ],
      "expiration": [
        73
      ],
      "pieceCid": [
        3
      ],
      "status": [
        3
      ],
      "storageProvider": [
        3
      ],
      "updated": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "FilecoinDealsPaginationInput": {
      "match": [
        3
      ],
      "page": [
        8
      ],
      "sortField": [
        350
      ],
      "sortOrder": [
        284
      ],
      "take": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "FilecoinDealsWhereInput": {
      "cid": [
        39
      ],
      "__typename": [
        3
      ]
    },
    "FilecoinDealsWithAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        132
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "FilecoinDealsWithNestedAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        132
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "FilecoinPin": {
      "cid": [
        3
      ],
      "deals": [
        132
      ],
      "dealsPaginated": [
        136,
        {
          "filter": [
            215
          ]
        }
      ],
      "__typename": [
        3
      ]
    },
    "FleekFunction": {
      "createdAt": [
        73
      ],
      "currentDeployment": [
        140
      ],
      "currentDeploymentId": [
        3
      ],
      "deployments": [
        140
      ],
      "id": [
        1
      ],
      "invokeUrl": [
        3
      ],
      "name": [
        3
      ],
      "projectId": [
        3
      ],
      "slug": [
        3
      ],
      "status": [
        145
      ],
      "updatedAt": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "FleekFunctionByNameWhereInput": {
      "name": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "FleekFunctionDeployment": {
      "blake3Hash": [
        3
      ],
      "cid": [
        3
      ],
      "createdAt": [
        73
      ],
      "fleekFunctionId": [
        3
      ],
      "id": [
        1
      ],
      "projectId": [
        3
      ],
      "sgx": [
        9
      ],
      "updatedAt": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "FleekFunctionDeploymentWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "FleekFunctionDeploymentsPaginationInput": {
      "match": [
        3
      ],
      "page": [
        8
      ],
      "take": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "FleekFunctionDeploymentsWhereInput": {
      "fleekFunctionId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "FleekFunctionDeploymentsWithAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        140
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "FleekFunctionStatus": {},
    "FleekFunctionsPaginationInput": {
      "match": [
        3
      ],
      "page": [
        8
      ],
      "take": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "FleekFunctionsWithAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        138
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "Folder": {
      "createdAt": [
        73
      ],
      "folderCount": [
        8
      ],
      "id": [
        1
      ],
      "name": [
        3
      ],
      "path": [
        3
      ],
      "pinCount": [
        8
      ],
      "sizeBigInt": [
        14
      ],
      "updatedAt": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "FolderOrPin": {
      "on_Folder": [
        148
      ],
      "on_Pin": [
        222
      ],
      "__typename": [
        3
      ]
    },
    "FolderWhereInput": {
      "id": [
        1
      ],
      "path": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "GenerateRecoveryCodesWhereInput": {
      "secretKeyId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "GitApiBranch": {
      "name": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "GitApiBranchesWhereInput": {
      "gitProviderId": [
        1
      ],
      "sourceRepositoryName": [
        3
      ],
      "sourceRepositoryOwner": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "GitApiInsatallation": {
      "avatar": [
        3
      ],
      "installationId": [
        8
      ],
      "isOrganization": [
        9
      ],
      "name": [
        3
      ],
      "repos": [
        157
      ],
      "__typename": [
        3
      ]
    },
    "GitApiInstallationsWhereInput": {
      "gitProviderId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "GitApiIsRepoNameAvailableWhereInput": {
      "gitProviderId": [
        1
      ],
      "owner": [
        3
      ],
      "repo": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "GitApiRepo": {
      "defaultBranch": [
        3
      ],
      "id": [
        8
      ],
      "installationId": [
        8
      ],
      "name": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "GitApiTree": {
      "mode": [
        3
      ],
      "path": [
        3
      ],
      "sha": [
        3
      ],
      "size": [
        8
      ],
      "type": [
        3
      ],
      "url": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "GitApiTreeWhereInput": {
      "gitProviderId": [
        1
      ],
      "sourceBranch": [
        3
      ],
      "sourceRepositoryName": [
        3
      ],
      "sourceRepositoryOwner": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "GitIntegration": {
      "createdAt": [
        73
      ],
      "gitProvider": [
        162
      ],
      "githubAppInstallation": [
        166
      ],
      "id": [
        1
      ],
      "projectId": [
        3
      ],
      "updatedAt": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "GitIntegrationWhereInput": {
      "gitProviderId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "GitProvider": {
      "createdAt": [
        73
      ],
      "enabled": [
        9
      ],
      "gitUserAccessTokens": [
        165
      ],
      "id": [
        1
      ],
      "name": [
        3
      ],
      "sourceProvider": [
        285
      ],
      "tags": [
        180
      ],
      "updatedAt": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "GitProviderTags": {},
    "GitProviderWhereInput": {
      "tag": [
        163
      ],
      "__typename": [
        3
      ]
    },
    "GitUserAccessToken": {
      "createdAt": [
        73
      ],
      "gitProviderId": [
        3
      ],
      "id": [
        1
      ],
      "token": [
        3
      ],
      "updatedAt": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "GithubAppInstallation": {
      "createdAt": [
        73
      ],
      "id": [
        1
      ],
      "installationId": [
        3
      ],
      "projectId": [
        3
      ],
      "updatedAt": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "GithubAppInstallationsWhereInput": {
      "gitProviderId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "GithubRepo": {
      "defaultBranch": [
        3
      ],
      "isPrivate": [
        9
      ],
      "name": [
        3
      ],
      "repositoryId": [
        8
      ],
      "url": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "Invitation": {
      "createdAt": [
        73
      ],
      "createdBy": [
        334
      ],
      "email": [
        3
      ],
      "id": [
        1
      ],
      "permissionGroup": [
        216
      ],
      "role": [
        256
      ],
      "__typename": [
        3
      ]
    },
    "InvitationDetail": {
      "hash": [
        3
      ],
      "permissionGroup": [
        216
      ],
      "projectAvatar": [
        131
      ],
      "projectId": [
        3
      ],
      "projectName": [
        3
      ],
      "role": [
        256
      ],
      "__typename": [
        3
      ]
    },
    "InvitationDetailsWithNestedAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        170
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "InvitationWhereInput": {
      "hash": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "InvitationsPaginationInput": {
      "match": [
        3
      ],
      "page": [
        8
      ],
      "sortField": [
        351
      ],
      "sortOrder": [
        284
      ],
      "take": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "InvitationsWithAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        169
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "IpnsRecord": {
      "createdAt": [
        73
      ],
      "ensRecords": [
        121
      ],
      "ensRecordsPaginated": [
        130,
        {
          "filter": [
            215
          ]
        }
      ],
      "hash": [
        3
      ],
      "id": [
        1
      ],
      "name": [
        3
      ],
      "updatedAt": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "IpnsRecordWhereInput": {
      "name": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "IpnsRecordsPaginationInput": {
      "match": [
        3
      ],
      "page": [
        8
      ],
      "take": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "IpnsRecordsWithAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        175
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "IpnsRecordsWithNestedAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        175
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "JSON": {},
    "LeaveProjectWhereInput": {
      "projectId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "LinkPublicKeyDataInput": {
      "message": [
        3
      ],
      "signature": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "ListDeploymentBranchesWhereInput": {
      "deploymentMode": [
        95
      ],
      "endDate": [
        73
      ],
      "siteId": [
        1
      ],
      "startDate": [
        73
      ],
      "statuses": [
        96
      ],
      "__typename": [
        3
      ]
    },
    "ListFolderPaginationInput": {
      "match": [
        3
      ],
      "page": [
        8
      ],
      "sortField": [
        352
      ],
      "sortOrder": [
        284
      ],
      "take": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "ListFolderWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "ListFolderWithAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        149
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "LoginWithAdminAccessTokenDataInput": {
      "adminAccessToken": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "LoginWithDynamicDataInput": {
      "authToken": [
        3
      ],
      "projectId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "LoginWithPersonalAccessTokenDataInput": {
      "personalAccessToken": [
        3
      ],
      "projectId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "MarkNotificationsAsReadWhereInput": {
      "ids": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "Membership": {
      "createdAt": [
        73
      ],
      "id": [
        1
      ],
      "permissionGroup": [
        216
      ],
      "role": [
        256
      ],
      "updatedAt": [
        73
      ],
      "user": [
        334
      ],
      "__typename": [
        3
      ]
    },
    "MembershipsWithNestedAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        191
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "MigrationFailedEntity": {
      "id": [
        1
      ],
      "name": [
        3
      ],
      "type": [
        194
      ],
      "__typename": [
        3
      ]
    },
    "MigrationFailedEntityType": {},
    "MigrationLog": {
      "createdAt": [
        73
      ],
      "id": [
        1
      ],
      "text": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "MigrationLogsWithNestedAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        195
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "MigrationRequest": {
      "createdAt": [
        73
      ],
      "failedEntities": [
        193
      ],
      "id": [
        1
      ],
      "logs": [
        196,
        {
          "filter": [
            215
          ]
        }
      ],
      "status": [
        204
      ],
      "teamId": [
        3
      ],
      "teamInfo": [
        206
      ],
      "updatedAt": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "MigrationRequestWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "MigrationRequestsByTokenWhereInput": {
      "token": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "MigrationRequestsPaginationInput": {
      "match": [
        3
      ],
      "page": [
        8
      ],
      "sortField": [
        353
      ],
      "sortOrder": [
        284
      ],
      "take": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "MigrationRequestsWithAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        197
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "MigrationScheduledRequest": {
      "status": [
        204
      ],
      "teamId": [
        3
      ],
      "triggerAfter": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "MigrationScheduledRequestWhereInput": {
      "teamId": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "MigrationStatus": {},
    "MigrationStatusByTeamIdWhereInput": {
      "teamId": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "MigrationTeamInfo": {
      "filesCount": [
        8
      ],
      "id": [
        1
      ],
      "name": [
        3
      ],
      "sitesCount": [
        8
      ],
      "usersCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "MigrationTeamInfosFromTokenWhereInput": {
      "token": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "Mutation": {
      "acceptInvitation": [
        191,
        {
          "where": [
            0,
            "AcceptInvitationWhereInput!"
          ]
        }
      ],
      "createApplication": [
        2,
        {
          "data": [
            40,
            "CreateApplicationDataInput!"
          ]
        }
      ],
      "createBillingCycleUsage": [
        17,
        {
          "data": [
            41,
            "CreateBillingCycleUsageDataInput!"
          ]
        }
      ],
      "createBillingPlan": [
        21,
        {
          "data": [
            42,
            "CreateBillingPlanDataInput!"
          ]
        }
      ],
      "createCustomIpfsDeployment": [
        94,
        {
          "data": [
            43,
            "CreateCustomIpfsDeploymentDataInput!"
          ]
        }
      ],
      "createDnsConfig": [
        104,
        {
          "data": [
            44,
            "CreateDnsConfigDataInput!"
          ],
          "where": [
            45,
            "CreateDnsConfigWhereInput!"
          ]
        }
      ],
      "createDomain": [
        107,
        {
          "data": [
            46,
            "CreateDomainDataInput!"
          ],
          "where": [
            47,
            "CreateDomainWhereInput!"
          ]
        }
      ],
      "createEnsRecord": [
        121,
        {
          "data": [
            48,
            "CreateEnsRecordDataInput!"
          ],
          "where": [
            49,
            "CreateEnsRecordWhereInput!"
          ]
        }
      ],
      "createFleekFunction": [
        138,
        {
          "data": [
            50,
            "CreateFleekFunctionDataInput!"
          ]
        }
      ],
      "createFolder": [
        148,
        {
          "data": [
            51,
            "CreateFolderDataInput!"
          ],
          "where": [
            52,
            "CreateFolderWhereInput!"
          ]
        }
      ],
      "createGithubAppAuthorizationUrl": [
        3,
        {
          "where": [
            53,
            "CreateGithubAppAuthorizationUrlWhereInput!"
          ]
        }
      ],
      "createGithubAppInstallationUrl": [
        3,
        {
          "where": [
            54,
            "CreateGithubAppInstallationUrlWhereInput!"
          ]
        }
      ],
      "createGithubIntegrationForProject": [
        9,
        {
          "data": [
            55,
            "CreateGithubIntegrationForProjectDataInput!"
          ]
        }
      ],
      "createGithubRepoFromTemplate": [
        168,
        {
          "data": [
            56,
            "CreateGithubRepoFromTemplateDataInput!"
          ],
          "where": [
            57,
            "CreateGithubRepoFromTemplateWhereInput!"
          ]
        }
      ],
      "createInvitation": [
        3,
        {
          "data": [
            58,
            "CreateInvitationDataInput!"
          ]
        }
      ],
      "createIpnsRecord": [
        175
      ],
      "createIpnsRecordForSite": [
        175,
        {
          "where": [
            59,
            "CreateIpnsRecordForSiteWhereInput!"
          ]
        }
      ],
      "createLoginVerificationSession": [
        9,
        {
          "where": [
            60,
            "CreateLoginVerificationSessionWhereInput!"
          ]
        }
      ],
      "createMigrationRequestsFromToken": [
        197,
        {
          "data": [
            61,
            "CreateMigrationRequestsFromTokenDataInput!"
          ]
        }
      ],
      "createMigrationToken": [
        3,
        {
          "data": [
            62,
            "CreateMigrationTokenDataInput!"
          ]
        }
      ],
      "createPersonalAccessTokenFromVerificationSession": [
        3,
        {
          "data": [
            63,
            "CreatePersonalAccessTokenFromVerificationSessionDataInput!"
          ],
          "where": [
            64,
            "CreatePersonalAccessTokenFromVerificationSessionWhereInput!"
          ]
        }
      ],
      "createPrivateGateway": [
        232,
        {
          "data": [
            65,
            "CreatePrivateGatewayDataInput!"
          ],
          "where": [
            66,
            "CreatePrivateGatewayWhereInput!"
          ]
        }
      ],
      "createProject": [
        238,
        {
          "data": [
            67,
            "CreateProjectDataInput!"
          ]
        }
      ],
      "createPublicKeyChallenge": [
        3
      ],
      "createSalesContactRequest": [
        257,
        {
          "data": [
            68,
            "CreateSalesContactRequestDataInput!"
          ]
        }
      ],
      "createSecret": [
        258,
        {
          "data": [
            69,
            "CreateSecretDataInput!"
          ]
        }
      ],
      "createSite": [
        267,
        {
          "data": [
            70,
            "CreateSiteDataInput!"
          ]
        }
      ],
      "createTemplate": [
        289,
        {
          "data": [
            71,
            "CreateTemplateDataInput!"
          ]
        }
      ],
      "createZoneForPrivateGateway": [
        343
      ],
      "createZoneForSite": [
        343,
        {
          "where": [
            72,
            "CreateZoneForSiteWhereInput!"
          ]
        }
      ],
      "declineInvitation": [
        9,
        {
          "where": [
            74,
            "DeclineInvitationWhereInput!"
          ]
        }
      ],
      "deleteApplication": [
        2,
        {
          "where": [
            75,
            "DeleteApplicationWhereInput!"
          ]
        }
      ],
      "deleteDomain": [
        107,
        {
          "where": [
            76,
            "DeleteDomainWhereInput!"
          ]
        }
      ],
      "deleteEnsRecord": [
        121,
        {
          "where": [
            77,
            "DeleteEnsRecordWhereInput!"
          ]
        }
      ],
      "deleteFleekFunction": [
        138,
        {
          "where": [
            78,
            "DeleteFleekFunctionWhereInput!"
          ]
        }
      ],
      "deleteFolder": [
        148,
        {
          "where": [
            79,
            "DeleteFolderWhereInput!"
          ]
        }
      ],
      "deleteInvitation": [
        169,
        {
          "where": [
            80,
            "DeleteInvitationWhereInput!"
          ]
        }
      ],
      "deleteIpnsRecord": [
        175,
        {
          "where": [
            81,
            "DeleteIpnsRecordWhereInput!"
          ]
        }
      ],
      "deleteMembership": [
        191,
        {
          "where": [
            82,
            "DeleteMembershipWhereInput!"
          ]
        }
      ],
      "deletePersonalAccessToken": [
        219,
        {
          "where": [
            83,
            "DeletePersonalAccessTokenWhereInput!"
          ]
        }
      ],
      "deletePin": [
        222,
        {
          "where": [
            84,
            "DeletePinWhereInput!"
          ]
        }
      ],
      "deletePrivateGateway": [
        232,
        {
          "where": [
            85,
            "DeletePrivateGatewayWhereInput!"
          ]
        }
      ],
      "deleteProject": [
        238,
        {
          "where": [
            86,
            "DeleteProjectWhereInput!"
          ]
        }
      ],
      "deleteRecoveryCodes": [
        9,
        {
          "where": [
            87,
            "DeleteRecoveryCodesWhereInput!"
          ]
        }
      ],
      "deleteSecret": [
        258,
        {
          "where": [
            89,
            "DeleteSecretWhereInput!"
          ]
        }
      ],
      "deleteSecretKey": [
        9,
        {
          "where": [
            88,
            "DeleteSecretKeyWhereInput!"
          ]
        }
      ],
      "deleteSite": [
        267,
        {
          "where": [
            90,
            "DeleteSiteWhereInput!"
          ]
        }
      ],
      "deleteTemplate": [
        289,
        {
          "where": [
            91,
            "DeleteTemplateWhereInput!"
          ]
        }
      ],
      "deleteUser": [
        334,
        {
          "where": [
            92,
            "DeleteUserWhereInput!"
          ]
        }
      ],
      "deleteZone": [
        343,
        {
          "where": [
            93,
            "DeleteZoneWhereInput!"
          ]
        }
      ],
      "disableTwoFactorProtectedAction": [
        9,
        {
          "where": [
            103,
            "DisableTwoFactorProtectedActionWhereInput!"
          ]
        }
      ],
      "enableTwoFactorProtectedAction": [
        9,
        {
          "where": [
            119,
            "EnableTwoFactorProtectedActionWhereInput!"
          ]
        }
      ],
      "generateRecoveryCodes": [
        251,
        {
          "where": [
            151,
            "GenerateRecoveryCodesWhereInput!"
          ]
        }
      ],
      "generateTwoFactorSecretKey": [
        261
      ],
      "leaveProject": [
        191,
        {
          "where": [
            181,
            "LeaveProjectWhereInput!"
          ]
        }
      ],
      "linkPublicKey": [
        243,
        {
          "data": [
            182,
            "LinkPublicKeyDataInput!"
          ]
        }
      ],
      "loginWithAdminAccessToken": [
        3,
        {
          "data": [
            187,
            "LoginWithAdminAccessTokenDataInput!"
          ]
        }
      ],
      "loginWithDynamic": [
        3,
        {
          "data": [
            188,
            "LoginWithDynamicDataInput!"
          ]
        }
      ],
      "loginWithPersonalAccessToken": [
        3,
        {
          "data": [
            189,
            "LoginWithPersonalAccessTokenDataInput!"
          ]
        }
      ],
      "markNotificationsAsRead": [
        9,
        {
          "where": [
            190,
            "MarkNotificationsAsReadWhereInput!"
          ]
        }
      ],
      "promoteDeployment": [
        9,
        {
          "where": [
            242,
            "PromoteDeploymentWhereInput!"
          ]
        }
      ],
      "publishIpnsRecord": [
        175,
        {
          "data": [
            245,
            "PublishIpnsRecordDataInput!"
          ],
          "where": [
            246,
            "PublishIpnsRecordWhereInput!"
          ]
        }
      ],
      "publishSignedIpnsName": [
        3,
        {
          "data": [
            247,
            "PublishSignedIpnsNameDataInput!"
          ]
        }
      ],
      "purgeSiteCache": [
        267,
        {
          "where": [
            248,
            "PurgeSiteCacheWhereInput!"
          ]
        }
      ],
      "retryDeployment": [
        94,
        {
          "where": [
            253,
            "RetryDeploymentWhereInput!"
          ]
        }
      ],
      "retryMigrationRequest": [
        197,
        {
          "data": [
            254,
            "RetryMigrationRequestDataInput!"
          ],
          "where": [
            255,
            "RetryMigrationRequestWhereInput!"
          ]
        }
      ],
      "selectPrimaryDomain": [
        107,
        {
          "where": [
            266,
            "SelectPrimaryDomainWhereInput!"
          ]
        }
      ],
      "siteDeploymentRequirements": [
        271,
        {
          "where": [
            272,
            "SiteDeploymentRequirementsWhereInput!"
          ]
        }
      ],
      "stopDeployment": [
        9,
        {
          "where": [
            286,
            "StopDeploymentWhereInput!"
          ]
        }
      ],
      "triggerDeployment": [
        94,
        {
          "where": [
            301,
            "TriggerDeploymentWhereInput!"
          ]
        }
      ],
      "triggerFleekFunctionDeployment": [
        140,
        {
          "data": [
            302
          ],
          "where": [
            303,
            "TriggerFleekFunctionDeploymentWhereInput!"
          ]
        }
      ],
      "updateApplication": [
        2,
        {
          "data": [
            308,
            "UpdateApplicationDataInput!"
          ],
          "where": [
            309,
            "UpdateApplicationWhereInput!"
          ]
        }
      ],
      "updateBillingPlan": [
        21,
        {
          "data": [
            310,
            "UpdateBillingPlanDataInput!"
          ],
          "where": [
            311,
            "UpdateBillingPlanWhereInput!"
          ]
        }
      ],
      "updateFleekFunction": [
        138,
        {
          "data": [
            312,
            "UpdateFleekFunctionDataInput!"
          ],
          "where": [
            313,
            "UpdateFleekFunctionWhereInput!"
          ]
        }
      ],
      "updateFolder": [
        148,
        {
          "data": [
            314,
            "UpdateFolderDataInput!"
          ],
          "where": [
            315,
            "UpdateFolderWhereInput!"
          ]
        }
      ],
      "updateMembership": [
        191,
        {
          "data": [
            316,
            "UpdateMembershipDataInput!"
          ],
          "where": [
            317,
            "UpdateMembershipWhereInput!"
          ]
        }
      ],
      "updateNotificationSettings": [
        9,
        {
          "data": [
            318,
            "UpdateNotificationSettingsDataInput!"
          ]
        }
      ],
      "updatePin": [
        222,
        {
          "data": [
            319,
            "UpdatePinDataInput!"
          ],
          "where": [
            320,
            "UpdatePinWhereInput!"
          ]
        }
      ],
      "updatePrivateGateway": [
        232,
        {
          "data": [
            321,
            "UpdatePrivateGatewayDataInput!"
          ],
          "where": [
            322,
            "UpdatePrivateGatewayWhereInput!"
          ]
        }
      ],
      "updateProject": [
        238,
        {
          "data": [
            323,
            "UpdateProjectDataInput!"
          ],
          "where": [
            324,
            "UpdateProjectWhereInput!"
          ]
        }
      ],
      "updateSecret": [
        258,
        {
          "data": [
            325,
            "UpdateSecretDataInput!"
          ],
          "where": [
            326,
            "UpdateSecretWhereInput!"
          ]
        }
      ],
      "updateSite": [
        267,
        {
          "data": [
            327,
            "UpdateSiteDataInput!"
          ],
          "where": [
            328,
            "UpdateSiteWhereInput!"
          ]
        }
      ],
      "updateTemplate": [
        289,
        {
          "data": [
            329,
            "UpdateTemplateDataInput!"
          ],
          "where": [
            330,
            "UpdateTemplateWhereInput!"
          ]
        }
      ],
      "updateTwoFactorSecretKey": [
        261,
        {
          "data": [
            331,
            "UpdateTwoFactorSecretKeyDataInput!"
          ],
          "where": [
            332,
            "UpdateTwoFactorSecretKeyWhereInput!"
          ]
        }
      ],
      "updateUser": [
        334,
        {
          "data": [
            333,
            "UpdateUserDataInput!"
          ]
        }
      ],
      "verifyDnslink": [
        107,
        {
          "where": [
            336,
            "VerifyDnslinkWhereInput!"
          ]
        }
      ],
      "verifyDomain": [
        107,
        {
          "data": [
            337
          ],
          "where": [
            338,
            "VerifyDomainWhereInput!"
          ]
        }
      ],
      "verifyEnsRecord": [
        121,
        {
          "where": [
            339,
            "VerifyEnsRecordWhereInput!"
          ]
        }
      ],
      "verifyTwoFactorSecretKey": [
        261,
        {
          "data": [
            340,
            "VerifyTwoFactorSecretKeyDataInput!"
          ],
          "where": [
            341,
            "VerifyTwoFactorSecretKeyWhereInput!"
          ]
        }
      ],
      "__typename": [
        3
      ]
    },
    "Notification": {
      "content": [
        3
      ],
      "createdAt": [
        73
      ],
      "data": [
        180
      ],
      "id": [
        1
      ],
      "isRead": [
        9
      ],
      "title": [
        3
      ],
      "type": [
        212
      ],
      "updatedAt": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "NotificationChannel": {},
    "NotificationSettings": {
      "isEnabled": [
        9
      ],
      "notificationChannel": [
        210
      ],
      "notificationType": [
        212
      ],
      "__typename": [
        3
      ]
    },
    "NotificationType": {},
    "NotificationsPaginationInput": {
      "match": [
        3
      ],
      "page": [
        8
      ],
      "take": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "NotificationsWithAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        209
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "PaginationInput": {
      "page": [
        8
      ],
      "take": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "PermissionGroup": {
      "createdAt": [
        73
      ],
      "description": [
        3
      ],
      "id": [
        1
      ],
      "name": [
        3
      ],
      "permissions": [
        3
      ],
      "systemRole": [
        256
      ],
      "updatedAt": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "PermissionGroupsPaginationInput": {
      "match": [
        3
      ],
      "page": [
        8
      ],
      "take": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "PermissionGroupsWithAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        216
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "PersonalAccessToken": {
      "createdAt": [
        73
      ],
      "id": [
        1
      ],
      "maskedToken": [
        3
      ],
      "name": [
        3
      ],
      "updatedAt": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "PersonalAccessTokensPaginationInput": {
      "match": [
        3
      ],
      "page": [
        8
      ],
      "sortField": [
        354
      ],
      "sortOrder": [
        284
      ],
      "take": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "PersonalAccessTokensWithAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        219
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "Pin": {
      "arweavePin": [
        13
      ],
      "cid": [
        1
      ],
      "createdAt": [
        73
      ],
      "deployments": [
        94
      ],
      "deploymentsPaginated": [
        102,
        {
          "filter": [
            215
          ]
        }
      ],
      "extension": [
        3
      ],
      "filecoinPin": [
        137
      ],
      "filename": [
        3
      ],
      "id": [
        1
      ],
      "pathInFolder": [
        3
      ],
      "projectId": [
        3
      ],
      "size": [
        8
      ],
      "sizeBigInt": [
        14
      ],
      "storedOnArweave": [
        9
      ],
      "storedOnFilecoin": [
        9
      ],
      "storedOnS3": [
        9
      ],
      "__typename": [
        3
      ]
    },
    "PinNameAvailabilityInParentFolderDataInput": {
      "extension": [
        3
      ],
      "filename": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "PinNameAvailabilityInParentFolderWhereInput": {
      "parentFolderId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "PinWhereInput": {
      "cid": [
        39
      ],
      "__typename": [
        3
      ]
    },
    "PinsByFilenamePaginationInput": {
      "match": [
        3
      ],
      "page": [
        8
      ],
      "sortField": [
        355
      ],
      "sortOrder": [
        284
      ],
      "take": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "PinsByFilenameWhereInput": {
      "extension": [
        3
      ],
      "filename": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "PinsByFilenameWithAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        222
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "PinsPaginationInput": {
      "match": [
        3
      ],
      "page": [
        8
      ],
      "sortField": [
        356
      ],
      "sortOrder": [
        284
      ],
      "take": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "PinsWhereInput": {
      "storedOnArweave": [
        9
      ],
      "storedOnFilecoin": [
        9
      ],
      "__typename": [
        3
      ]
    },
    "PinsWithAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        222
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "PrivateGateway": {
      "createdAt": [
        73
      ],
      "domains": [
        107
      ],
      "domainsPaginated": [
        117,
        {
          "filter": [
            215
          ]
        }
      ],
      "id": [
        1
      ],
      "name": [
        3
      ],
      "primaryDomain": [
        107
      ],
      "project": [
        238
      ],
      "slug": [
        3
      ],
      "updatedAt": [
        73
      ],
      "zone": [
        343
      ],
      "__typename": [
        3
      ]
    },
    "PrivateGatewayBySlugWhereInput": {
      "slug": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "PrivateGatewayNameAvailabilityWhereInput": {
      "name": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "PrivateGatewayWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "PrivateGatewaysPaginationInput": {
      "match": [
        3
      ],
      "page": [
        8
      ],
      "take": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "PrivateGatewaysWithAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        232
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "Project": {
      "allowAccessFromOfacCountries": [
        9
      ],
      "avatar": [
        131
      ],
      "backupStorageOnArweave": [
        9
      ],
      "backupStorageOnFilecoin": [
        9
      ],
      "createdAt": [
        73
      ],
      "currentUserMembership": [
        191
      ],
      "id": [
        1
      ],
      "memberships": [
        191
      ],
      "membershipsPaginated": [
        192,
        {
          "filter": [
            215
          ]
        }
      ],
      "name": [
        3
      ],
      "updatedAt": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "ProjectWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "ProjectsPaginationInput": {
      "match": [
        3
      ],
      "page": [
        8
      ],
      "sortField": [
        357
      ],
      "sortOrder": [
        284
      ],
      "take": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "ProjectsWithAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        238
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "PromoteDeploymentWhereInput": {
      "deploymentId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "PublicKey": {
      "createdAt": [
        73
      ],
      "id": [
        1
      ],
      "publicKey": [
        3
      ],
      "type": [
        3
      ],
      "updatedAt": [
        73
      ],
      "user": [
        334
      ],
      "__typename": [
        3
      ]
    },
    "PublicKeysWithNestedAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        243
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "PublishIpnsRecordDataInput": {
      "hash": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "PublishIpnsRecordWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "PublishSignedIpnsNameDataInput": {
      "input": [
        3
      ],
      "key": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "PurgeSiteCacheWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "Query": {
      "application": [
        2,
        {
          "where": [
            5,
            "ApplicationWhereInput!"
          ]
        }
      ],
      "applicationNameAvailability": [
        9,
        {
          "where": [
            4,
            "ApplicationNameAvailabilityWhereInput!"
          ]
        }
      ],
      "applications": [
        12,
        {
          "filter": [
            11
          ]
        }
      ],
      "billingCycleUsages": [
        20,
        {
          "filter": [
            19
          ]
        }
      ],
      "billingPlan": [
        21,
        {
          "where": [
            31,
            "BillingPlanWhereInput!"
          ]
        }
      ],
      "billingPlans": [
        33,
        {
          "filter": [
            32
          ]
        }
      ],
      "deployment": [
        94,
        {
          "where": [
            97,
            "DeploymentWhereInput!"
          ]
        }
      ],
      "deployments": [
        101,
        {
          "filter": [
            98
          ],
          "where": [
            100,
            "DeploymentsWhereInput!"
          ]
        }
      ],
      "deploymentsQueueLimit": [
        9,
        {
          "where": [
            99,
            "DeploymentsQueueLimitWhereInput!"
          ]
        }
      ],
      "domain": [
        107,
        {
          "where": [
            111,
            "DomainWhereInput!"
          ]
        }
      ],
      "domainAvailability": [
        9,
        {
          "where": [
            108,
            "DomainAvailabilityWhereInput!"
          ]
        }
      ],
      "domainByHostname": [
        107,
        {
          "where": [
            109,
            "DomainByHostnameWhereInput!"
          ]
        }
      ],
      "domains": [
        116,
        {
          "filter": [
            115
          ]
        }
      ],
      "domainsByZoneId": [
        114,
        {
          "filter": [
            112
          ],
          "where": [
            113,
            "DomainsByZoneIdWhereInput!"
          ]
        }
      ],
      "emailAvailability": [
        9,
        {
          "where": [
            118,
            "EmailAvailabilityWhereInput!"
          ]
        }
      ],
      "ensNameAvailability": [
        9,
        {
          "where": [
            120,
            "EnsNameAvailabilityWhereInput!"
          ]
        }
      ],
      "ensRecord": [
        121,
        {
          "where": [
            124,
            "EnsRecordWhereInput!"
          ]
        }
      ],
      "ensRecordByName": [
        121,
        {
          "where": [
            122,
            "EnsRecordByNameWhereInput!"
          ]
        }
      ],
      "ensRecords": [
        129,
        {
          "filter": [
            128
          ]
        }
      ],
      "ensRecordsByIpnsId": [
        127,
        {
          "filter": [
            125
          ],
          "where": [
            126,
            "EnsRecordsByIpnsIdWhereInput!"
          ]
        }
      ],
      "filecoinDeals": [
        135,
        {
          "filter": [
            133
          ],
          "where": [
            134,
            "FilecoinDealsWhereInput!"
          ]
        }
      ],
      "fleekFunctionByName": [
        138,
        {
          "where": [
            139,
            "FleekFunctionByNameWhereInput!"
          ]
        }
      ],
      "fleekFunctionDeployment": [
        140,
        {
          "where": [
            141,
            "FleekFunctionDeploymentWhereInput!"
          ]
        }
      ],
      "fleekFunctionDeployments": [
        144,
        {
          "filter": [
            142
          ],
          "where": [
            143,
            "FleekFunctionDeploymentsWhereInput!"
          ]
        }
      ],
      "fleekFunctions": [
        147,
        {
          "filter": [
            146
          ]
        }
      ],
      "folder": [
        148,
        {
          "where": [
            150,
            "FolderWhereInput!"
          ]
        }
      ],
      "gitApiBranches": [
        152,
        {
          "where": [
            153,
            "GitApiBranchesWhereInput!"
          ]
        }
      ],
      "gitApiInstallations": [
        154,
        {
          "where": [
            155,
            "GitApiInstallationsWhereInput!"
          ]
        }
      ],
      "gitApiIsRepoNameAvailable": [
        9,
        {
          "where": [
            156,
            "GitApiIsRepoNameAvailableWhereInput!"
          ]
        }
      ],
      "gitApiTree": [
        158,
        {
          "where": [
            159,
            "GitApiTreeWhereInput!"
          ]
        }
      ],
      "gitIntegration": [
        160,
        {
          "where": [
            161,
            "GitIntegrationWhereInput!"
          ]
        }
      ],
      "gitProvider": [
        162,
        {
          "where": [
            164,
            "GitProviderWhereInput!"
          ]
        }
      ],
      "gitProviders": [
        162
      ],
      "githubAppInstallations": [
        166,
        {
          "where": [
            167,
            "GithubAppInstallationsWhereInput!"
          ]
        }
      ],
      "invitation": [
        170,
        {
          "where": [
            172,
            "InvitationWhereInput!"
          ]
        }
      ],
      "invitations": [
        174,
        {
          "filter": [
            173
          ]
        }
      ],
      "ipnsRecord": [
        175,
        {
          "where": [
            176,
            "IpnsRecordWhereInput!"
          ]
        }
      ],
      "ipnsRecords": [
        178,
        {
          "filter": [
            177
          ]
        }
      ],
      "listDeploymentBranches": [
        3,
        {
          "where": [
            183,
            "ListDeploymentBranchesWhereInput!"
          ]
        }
      ],
      "listFolder": [
        186,
        {
          "filter": [
            184
          ],
          "where": [
            185,
            "ListFolderWhereInput!"
          ]
        }
      ],
      "migrationRequest": [
        197,
        {
          "where": [
            198,
            "MigrationRequestWhereInput!"
          ]
        }
      ],
      "migrationRequests": [
        201,
        {
          "filter": [
            200
          ]
        }
      ],
      "migrationRequestsByToken": [
        197,
        {
          "where": [
            199,
            "MigrationRequestsByTokenWhereInput!"
          ]
        }
      ],
      "migrationScheduledRequest": [
        202,
        {
          "where": [
            203,
            "MigrationScheduledRequestWhereInput!"
          ]
        }
      ],
      "migrationStatusByTeamId": [
        204,
        {
          "where": [
            205,
            "MigrationStatusByTeamIdWhereInput!"
          ]
        }
      ],
      "migrationTeamInfosFromToken": [
        206,
        {
          "where": [
            207,
            "MigrationTeamInfosFromTokenWhereInput!"
          ]
        }
      ],
      "notificationSettings": [
        211
      ],
      "notifications": [
        214,
        {
          "filter": [
            213
          ]
        }
      ],
      "permissionGroups": [
        218,
        {
          "filter": [
            217
          ]
        }
      ],
      "personalAccessTokens": [
        221,
        {
          "filter": [
            220
          ]
        }
      ],
      "pin": [
        222,
        {
          "where": [
            225,
            "PinWhereInput!"
          ]
        }
      ],
      "pinNameAvailabilityInParentFolder": [
        9,
        {
          "data": [
            223,
            "PinNameAvailabilityInParentFolderDataInput!"
          ],
          "where": [
            224,
            "PinNameAvailabilityInParentFolderWhereInput!"
          ]
        }
      ],
      "pins": [
        231,
        {
          "filter": [
            229
          ],
          "where": [
            230
          ]
        }
      ],
      "pinsByFilename": [
        228,
        {
          "filter": [
            226
          ],
          "where": [
            227,
            "PinsByFilenameWhereInput!"
          ]
        }
      ],
      "privateGateway": [
        232,
        {
          "where": [
            235,
            "PrivateGatewayWhereInput!"
          ]
        }
      ],
      "privateGatewayBySlug": [
        232,
        {
          "where": [
            233,
            "PrivateGatewayBySlugWhereInput!"
          ]
        }
      ],
      "privateGatewayNameAvailability": [
        9,
        {
          "where": [
            234,
            "PrivateGatewayNameAvailabilityWhereInput!"
          ]
        }
      ],
      "privateGateways": [
        237,
        {
          "filter": [
            236
          ]
        }
      ],
      "project": [
        238,
        {
          "where": [
            239,
            "ProjectWhereInput!"
          ]
        }
      ],
      "projects": [
        241,
        {
          "filter": [
            240
          ]
        }
      ],
      "resolveIpnsName": [
        3,
        {
          "where": [
            252,
            "ResolveIpnsNameWhereInput!"
          ]
        }
      ],
      "secretAvailability": [
        9,
        {
          "where": [
            259,
            "SecretAvailabilityWhereInput!"
          ]
        }
      ],
      "site": [
        267,
        {
          "where": [
            277,
            "SiteWhereInput!"
          ]
        }
      ],
      "siteBuildSettings": [
        268,
        {
          "where": [
            269,
            "SiteBuildSettingsWhereInput!"
          ]
        }
      ],
      "siteBySlug": [
        267,
        {
          "where": [
            270,
            "SiteBySlugWhereInput!"
          ]
        }
      ],
      "siteFramework": [
        273,
        {
          "where": [
            275,
            "SiteFrameworkWhereInput!"
          ]
        }
      ],
      "siteFrameworks": [
        273
      ],
      "siteNameAvailability": [
        9,
        {
          "where": [
            276,
            "SiteNameAvailabilityWhereInput!"
          ]
        }
      ],
      "sites": [
        282,
        {
          "filter": [
            280
          ],
          "where": [
            281,
            "SitesWhereInput!"
          ]
        }
      ],
      "slugAvailability": [
        9,
        {
          "where": [
            283,
            "SlugAvailabilityWhereInput!"
          ]
        }
      ],
      "template": [
        289,
        {
          "where": [
            296,
            "TemplateWhereInput!"
          ]
        }
      ],
      "templateCategories": [
        291,
        {
          "filter": [
            290
          ]
        }
      ],
      "templateCategory": [
        292,
        {
          "where": [
            293,
            "TemplateCategoryWhereInput!"
          ]
        }
      ],
      "templateNameAvailability": [
        9,
        {
          "where": [
            294,
            "TemplateNameAvailabilityWhereInput!"
          ]
        }
      ],
      "templates": [
        299,
        {
          "filter": [
            297
          ],
          "where": [
            298,
            "TemplatesWhereInput!"
          ]
        }
      ],
      "twoFactorProtectedActions": [
        307,
        {
          "filter": [
            306
          ]
        }
      ],
      "user": [
        334
      ],
      "usernameAvailability": [
        9,
        {
          "where": [
            335,
            "UsernameAvailabilityWhereInput!"
          ]
        }
      ],
      "version": [
        342
      ],
      "zone": [
        343,
        {
          "where": [
            346,
            "ZoneWhereInput!"
          ]
        }
      ],
      "zones": [
        348,
        {
          "filter": [
            347
          ]
        }
      ],
      "__typename": [
        3
      ]
    },
    "RecoveryCode": {
      "code": [
        3
      ],
      "createdAt": [
        73
      ],
      "id": [
        1
      ],
      "isUsed": [
        9
      ],
      "updatedAt": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "RecoveryCodes": {
      "recoveryCodes": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "ResolveIpnsNameWhereInput": {
      "name": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "RetryDeploymentWhereInput": {
      "deploymentId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "RetryMigrationRequestDataInput": {
      "skipFailedEntities": [
        9
      ],
      "__typename": [
        3
      ]
    },
    "RetryMigrationRequestWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "Role": {},
    "SalesContactRequest": {
      "createdAt": [
        73
      ],
      "description": [
        3
      ],
      "email": [
        3
      ],
      "id": [
        1
      ],
      "updatedAt": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "Secret": {
      "createdAt": [
        73
      ],
      "id": [
        1
      ],
      "key": [
        3
      ],
      "updatedAt": [
        73
      ],
      "value": [
        3
      ],
      "visibility": [
        264
      ],
      "__typename": [
        3
      ]
    },
    "SecretAvailabilityWhereInput": {
      "key": [
        3
      ],
      "siteId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "SecretGroup": {
      "createdAt": [
        73
      ],
      "id": [
        1
      ],
      "name": [
        3
      ],
      "secrets": [
        258
      ],
      "secretsPaginated": [
        265,
        {
          "filter": [
            215
          ]
        }
      ],
      "updatedAt": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "SecretKey": {
      "algorithm": [
        262
      ],
      "createdAt": [
        73
      ],
      "digits": [
        8
      ],
      "id": [
        1
      ],
      "isActive": [
        9
      ],
      "isVerified": [
        9
      ],
      "key": [
        3
      ],
      "period": [
        8
      ],
      "recoveryCodes": [
        250
      ],
      "type": [
        263
      ],
      "updatedAt": [
        73
      ],
      "verifiedAt": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "SecretKeyAlgorithm": {},
    "SecretKeyType": {},
    "SecretVisibility": {},
    "SecretsWithNestedAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        258
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "SelectPrimaryDomainWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "Site": {
      "avatar": [
        131
      ],
      "baseDirectory": [
        3
      ],
      "buildCommand": [
        3
      ],
      "buildDurationLimitSeconds": [
        8
      ],
      "cpuLimit": [
        3
      ],
      "currentDeployment": [
        94
      ],
      "deployments": [
        94
      ],
      "deploymentsPaginated": [
        102,
        {
          "filter": [
            215
          ]
        }
      ],
      "distDirectory": [
        3
      ],
      "dockerImage": [
        3
      ],
      "domains": [
        107
      ],
      "domainsPaginated": [
        117,
        {
          "filter": [
            215
          ]
        }
      ],
      "enablePreviews": [
        9
      ],
      "framework": [
        273
      ],
      "gitIntegration": [
        160
      ],
      "githubInstallationId": [
        8
      ],
      "id": [
        1
      ],
      "ipnsRecords": [
        175
      ],
      "ipnsRecordsPaginated": [
        179,
        {
          "filter": [
            215
          ]
        }
      ],
      "lastDeployment": [
        94
      ],
      "memoryLimit": [
        3
      ],
      "name": [
        3
      ],
      "primaryDomain": [
        107
      ],
      "secretGroup": [
        260
      ],
      "slug": [
        3
      ],
      "sourceBranch": [
        3
      ],
      "sourceProvider": [
        285
      ],
      "sourceRepositoryId": [
        3
      ],
      "sourceRepositoryName": [
        3
      ],
      "sourceRepositoryOwner": [
        3
      ],
      "zones": [
        278
      ],
      "zonesPaginated": [
        279,
        {
          "filter": [
            215
          ]
        }
      ],
      "__typename": [
        3
      ]
    },
    "SiteBuildSettings": {
      "buildCommand": [
        3
      ],
      "dockerImage": [
        3
      ],
      "envVars": [
        180
      ],
      "frameworkId": [
        3
      ],
      "publishDirectory": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "SiteBuildSettingsWhereInput": {
      "baseDirectory": [
        3
      ],
      "gitProviderId": [
        1
      ],
      "sourceBranch": [
        3
      ],
      "sourceRepositoryName": [
        3
      ],
      "sourceRepositoryOwner": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "SiteBySlugWhereInput": {
      "slug": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "SiteDeploymentRequirements": {
      "authorizationUrl": [
        3
      ],
      "installationUrl": [
        3
      ],
      "shouldAuthenticate": [
        9
      ],
      "shouldInstall": [
        9
      ],
      "__typename": [
        3
      ]
    },
    "SiteDeploymentRequirementsWhereInput": {
      "gitProviderId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "SiteFramework": {
      "avatar": [
        131
      ],
      "buildScript": [
        3
      ],
      "createdAt": [
        73
      ],
      "dockerImage": [
        3
      ],
      "id": [
        1
      ],
      "name": [
        3
      ],
      "publishDirectory": [
        3
      ],
      "recognitionArgument": [
        3
      ],
      "recognitionStrategy": [
        274
      ],
      "slug": [
        3
      ],
      "templatesCount": [
        8
      ],
      "updatedAt": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "SiteFrameworkRecognitionStrategy": {},
    "SiteFrameworkWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "SiteNameAvailabilityWhereInput": {
      "name": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "SiteWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "SiteZone": {
      "createdAt": [
        73
      ],
      "id": [
        1
      ],
      "status": [
        344
      ],
      "updatedAt": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "SiteZonesWithNestedAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        278
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "SitesPaginationInput": {
      "match": [
        3
      ],
      "page": [
        8
      ],
      "sortField": [
        358
      ],
      "sortOrder": [
        284
      ],
      "take": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "SitesWhereInput": {
      "hasSourceProvider": [
        9
      ],
      "isDeployed": [
        9
      ],
      "isTemplate": [
        9
      ],
      "name": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "SitesWithAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        267
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "SlugAvailabilityWhereInput": {
      "slug": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "SortOrder": {},
    "SourceProvider": {},
    "StopDeploymentWhereInput": {
      "deploymentId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "StorageType": {},
    "SubscriptionType": {},
    "Template": {
      "banner": [
        131
      ],
      "category": [
        292
      ],
      "createdAt": [
        73
      ],
      "creator": [
        334
      ],
      "deployment": [
        94
      ],
      "description": [
        3
      ],
      "framework": [
        273
      ],
      "id": [
        1
      ],
      "name": [
        3
      ],
      "reviewComment": [
        3
      ],
      "reviewStatus": [
        295
      ],
      "reviewedAt": [
        73
      ],
      "site": [
        267
      ],
      "siteAvatar": [
        131
      ],
      "siteId": [
        3
      ],
      "siteSlug": [
        3
      ],
      "updatedAt": [
        73
      ],
      "usageCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "TemplateCategoriesPaginationInput": {
      "match": [
        3
      ],
      "page": [
        8
      ],
      "sortField": [
        359
      ],
      "sortOrder": [
        284
      ],
      "take": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "TemplateCategoriesWithAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        292
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "TemplateCategory": {
      "id": [
        1
      ],
      "name": [
        3
      ],
      "slug": [
        3
      ],
      "templates": [
        289
      ],
      "templatesCount": [
        8
      ],
      "templatesPaginated": [
        300,
        {
          "filter": [
            215
          ]
        }
      ],
      "__typename": [
        3
      ]
    },
    "TemplateCategoryWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "TemplateNameAvailabilityWhereInput": {
      "name": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "TemplateReviewStatus": {},
    "TemplateWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "TemplatesPaginationInput": {
      "match": [
        3
      ],
      "page": [
        8
      ],
      "sortField": [
        360
      ],
      "sortOrder": [
        284
      ],
      "take": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "TemplatesWhereInput": {
      "categoryId": [
        1
      ],
      "createdById": [
        1
      ],
      "frameworkId": [
        1
      ],
      "name": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "TemplatesWithAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        289
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "TemplatesWithNestedAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        289
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "TriggerDeploymentWhereInput": {
      "siteId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "TriggerFleekFunctionDeploymentDataInput": {
      "blake3Hash": [
        3
      ],
      "sgx": [
        9
      ],
      "__typename": [
        3
      ]
    },
    "TriggerFleekFunctionDeploymentWhereInput": {
      "cid": [
        3
      ],
      "functionId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "TwoFactorProtectedAction": {
      "createdAt": [
        73
      ],
      "enabled": [
        9
      ],
      "id": [
        1
      ],
      "name": [
        3
      ],
      "type": [
        305
      ],
      "updatedAt": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "TwoFactorProtectedActionType": {},
    "TwoFactorProtectedActionsPaginationInput": {
      "match": [
        3
      ],
      "page": [
        8
      ],
      "take": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "TwoFactorProtectedActionsWithAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        304
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "UpdateApplicationDataInput": {
      "name": [
        3
      ],
      "whiteLabelDomains": [
        3
      ],
      "whitelistDomains": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "UpdateApplicationWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "UpdateBillingPlanDataInput": {
      "isActive": [
        9
      ],
      "price": [
        18
      ],
      "__typename": [
        3
      ]
    },
    "UpdateBillingPlanWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "UpdateFleekFunctionDataInput": {
      "name": [
        3
      ],
      "slug": [
        3
      ],
      "status": [
        145
      ],
      "__typename": [
        3
      ]
    },
    "UpdateFleekFunctionWhereInput": {
      "id": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "UpdateFolderDataInput": {
      "name": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "UpdateFolderWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "UpdateMembershipDataInput": {
      "permissionGroupId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "UpdateMembershipWhereInput": {
      "id": [
        1
      ],
      "userId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "UpdateNotificationSettingsDataInput": {
      "isEnabled": [
        9
      ],
      "notificationChannel": [
        210
      ],
      "notificationType": [
        212
      ],
      "__typename": [
        3
      ]
    },
    "UpdatePinDataInput": {
      "filename": [
        3
      ],
      "moveToRoot": [
        9
      ],
      "parentFolderId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "UpdatePinWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "UpdatePrivateGatewayDataInput": {
      "name": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "UpdatePrivateGatewayWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "UpdateProjectDataInput": {
      "allowAccessFromOfacCountries": [
        9
      ],
      "avatar": [
        131
      ],
      "backupStorageOnArweave": [
        9
      ],
      "backupStorageOnFilecoin": [
        9
      ],
      "name": [
        3
      ],
      "planId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "UpdateProjectWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "UpdateSecretDataInput": {
      "value": [
        3
      ],
      "visibility": [
        264
      ],
      "__typename": [
        3
      ]
    },
    "UpdateSecretWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "UpdateSiteDataInput": {
      "avatar": [
        131
      ],
      "baseDirectory": [
        3
      ],
      "buildCommand": [
        3
      ],
      "distDirectory": [
        3
      ],
      "dockerImage": [
        3
      ],
      "enablePreviews": [
        9
      ],
      "frameworkId": [
        1
      ],
      "githubInstallationId": [
        8
      ],
      "name": [
        3
      ],
      "slug": [
        3
      ],
      "sourceBranch": [
        3
      ],
      "sourceProvider": [
        285
      ],
      "sourceRepositoryId": [
        3
      ],
      "sourceRepositoryName": [
        3
      ],
      "sourceRepositoryOwner": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "UpdateSiteWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "UpdateTemplateDataInput": {
      "banner": [
        131
      ],
      "description": [
        3
      ],
      "name": [
        3
      ],
      "templateCategoryId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "UpdateTemplateWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "UpdateTwoFactorSecretKeyDataInput": {
      "isActive": [
        9
      ],
      "key": [
        9
      ],
      "__typename": [
        3
      ]
    },
    "UpdateTwoFactorSecretKeyWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "UpdateUserDataInput": {
      "avatar": [
        131
      ],
      "email": [
        3
      ],
      "firstName": [
        3
      ],
      "lastName": [
        3
      ],
      "username": [
        3
      ],
      "walletAddress": [
        3
      ],
      "walletChain": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "User": {
      "avatar": [
        131
      ],
      "createdAt": [
        73
      ],
      "email": [
        3
      ],
      "firstName": [
        3
      ],
      "gitUserAccessTokens": [
        165
      ],
      "githubUserAccessToken": [
        3
      ],
      "id": [
        1
      ],
      "lastName": [
        3
      ],
      "pendingInvitations": [
        170
      ],
      "pendingInvitationsPaginated": [
        171,
        {
          "filter": [
            215
          ]
        }
      ],
      "project": [
        238
      ],
      "publicKeys": [
        243
      ],
      "publicKeysPaginated": [
        244,
        {
          "filter": [
            215
          ]
        }
      ],
      "secretKeys": [
        261
      ],
      "updatedAt": [
        73
      ],
      "username": [
        3
      ],
      "walletAddress": [
        3
      ],
      "walletChain": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "UsernameAvailabilityWhereInput": {
      "username": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "VerifyDnslinkWhereInput": {
      "domainId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "VerifyDomainDataInput": {
      "placeholder": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "VerifyDomainWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "VerifyEnsRecordWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "VerifyTwoFactorSecretKeyDataInput": {
      "token": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "VerifyTwoFactorSecretKeyWhereInput": {
      "secretKeyId": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "Version": {
      "commitHash": [
        3
      ],
      "__typename": [
        3
      ]
    },
    "Zone": {
      "createdAt": [
        73
      ],
      "id": [
        1
      ],
      "originUrl": [
        3
      ],
      "originUrlChangedAt": [
        73
      ],
      "originUrlChangedBy": [
        334
      ],
      "project": [
        238
      ],
      "status": [
        344
      ],
      "type": [
        345
      ],
      "updatedAt": [
        73
      ],
      "__typename": [
        3
      ]
    },
    "ZoneStatus": {},
    "ZoneType": {},
    "ZoneWhereInput": {
      "id": [
        1
      ],
      "__typename": [
        3
      ]
    },
    "ZonesPaginationInput": {
      "match": [
        3
      ],
      "page": [
        8
      ],
      "take": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "ZonesWithAggregation": {
      "currentPage": [
        8
      ],
      "data": [
        343
      ],
      "isFirstPage": [
        9
      ],
      "isLastPage": [
        9
      ],
      "nextPage": [
        8
      ],
      "pageCount": [
        8
      ],
      "previousPage": [
        8
      ],
      "totalCount": [
        8
      ],
      "__typename": [
        3
      ]
    },
    "deploymentsSortableFields": {},
    "filecoinDealsSortableFields": {},
    "invitationsSortableFields": {},
    "listFolderSortableFields": {},
    "migrationRequestsSortableFields": {},
    "personalAccessTokensSortableFields": {},
    "pinsByFilenameSortableFields": {},
    "pinsSortableFields": {},
    "projectsSortableFields": {},
    "sitesSortableFields": {},
    "templateCategoriesSortableFields": {},
    "templatesSortableFields": {}
  }
};

// ../gql-client-utils/dist/index.ts
var typeMap = linkTypeMap(types_default);
var createClient2 = function(options) {
  return createClient({
    url: void 0,
    ...options,
    queryRoot: typeMap.Query,
    mutationRoot: typeMap.Mutation,
    subscriptionRoot: typeMap.Subscription
  });
};

// src/clients/applications.ts
var _ApplicationsClient = class _ApplicationsClient {
  constructor(options) {
    this.get = async ({ id }) => {
      const response = await this.graphqlClient.query({
        application: {
          __args: {
            where: {
              id
            }
          },
          ..._ApplicationsClient.APPLICATION_MAPPED_PROPERTIES
        }
      });
      return response.application;
    };
    this.list = async () => {
      const response = await this.graphqlClient.query({
        applications: { data: _ApplicationsClient.APPLICATION_MAPPED_PROPERTIES }
      });
      return response.applications.data;
    };
    this.create = async ({ name, whitelistDomains }) => {
      const response = await this.graphqlClient.mutation({
        createApplication: {
          __args: {
            data: {
              name,
              whitelistDomains,
              // Warning: The whiteLabelDomains has been deprecated
              // providing ephemeral retroactivity
              whiteLabelDomains: [
                ...whitelistDomains
              ]
            }
          },
          ..._ApplicationsClient.APPLICATION_MAPPED_PROPERTIES
        }
      });
      return response.createApplication;
    };
    this.update = async ({ id, name, whitelistDomains }) => {
      const response = await this.graphqlClient.mutation({
        updateApplication: {
          __args: {
            where: { id },
            data: {
              name,
              whitelistDomains,
              // Warning: The whiteLabelDomains has been deprecated
              // providing ephemeral retroactivity
              whiteLabelDomains: whitelistDomains ? [...whitelistDomains] : []
            }
          },
          ..._ApplicationsClient.APPLICATION_MAPPED_PROPERTIES
        }
      });
      return response.updateApplication;
    };
    this.delete = async ({ id }) => {
      const response = await this.graphqlClient.mutation({
        deleteApplication: {
          __args: {
            where: {
              id
            }
          },
          ..._ApplicationsClient.APPLICATION_MAPPED_PROPERTIES
        }
      });
      return response.deleteApplication;
    };
    this.graphqlClient = options.graphqlClient;
  }
};
_ApplicationsClient.WHITE_LIST_DOMAIN_MAPPED_PROPERTIES = {
  id: true,
  hostname: true
};
_ApplicationsClient.APPLICATION_MAPPED_PROPERTIES = {
  id: true,
  name: true,
  clientId: true,
  whitelistDomains: _ApplicationsClient.WHITE_LIST_DOMAIN_MAPPED_PROPERTIES,
  whiteLabelDomains: _ApplicationsClient.WHITE_LIST_DOMAIN_MAPPED_PROPERTIES,
  updatedAt: true,
  createdAt: true
};
var ApplicationsClient = _ApplicationsClient;

// src/clients/domains.ts
var import_errors39 = __toESM(require_dist());

// src/utils/graphql.ts
var requiredByCategory = {
  Deployment: {
    keys: ["cid", "siteId"],
    typename: "Deployment"
  },
  PrivateGateway: {
    keys: ["primaryDomain", "slug"],
    typename: "PrivateGateway"
  },
  Domain: {
    keys: ["id", "hostname"],
    typename: "Domain"
  },
  Site: {
    keys: ["id", "slug"],
    typename: "Site"
  },
  Pin: {
    keys: ["cid", "filename"],
    typename: "Pin"
  },
  FilecoinDeal: {
    keys: ["cid", "dealId"],
    typename: "FilecoinDeal"
  }
};
var isDeploymentResponseQuery = (response) => isQueryTypename({
  obj: response,
  typename: "Deployment"
});
var isPrivateGatewayResponseQuery = (response) => isQueryTypename({
  obj: response,
  typename: "PrivateGateway"
});
var isPrivateGatewaysResponseQuery = (response) => response.every((obj) => isQueryTypename({
  obj,
  typename: "PrivateGateway"
}));
var isDomainResponseQuery = (response) => isQueryTypename({
  obj: response,
  typename: "Domain"
});
var isDomainsResponseQuery = (response) => response.every((obj) => isQueryTypename({
  obj,
  typename: "Domain"
}));
var isSiteResponseQuery = (response) => isQueryTypename({
  obj: response,
  typename: "Site"
});
var isSitesResponseQuery = (response) => response.every((obj) => isQueryTypename({
  obj,
  typename: "Site"
}));
var isPinResponseQuery = (response) => isQueryTypename({
  obj: response,
  typename: "Pin"
});
var isPinsResponseQuery = (response) => response.every((obj) => isQueryTypename({
  obj,
  typename: "Pin"
}));
var isFilecoinDealsResponseQuery = (response) => response.every((obj) => isQueryTypename({
  obj,
  typename: "FilecoinDeal"
}));
var isQueryTypename = ({
  obj,
  typename
}) => {
  if (!obj) {
    return false;
  }
  return obj.__typename === requiredByCategory?.[typename].typename && requiredByCategory?.[typename].keys.every((key) => key in obj);
};

// src/clients/domains.ts
var _DomainsClient = class _DomainsClient {
  constructor(options) {
    // TODO: Check which is the right type
    // Promise<DomainsWithAggregation["data"]> fails for some reason
    this.list = async () => {
      const response = await this.graphqlClient.query({
        domains: {
          data: {
            ..._DomainsClient.DOMAIN_MAPPED_PROPERTIES
          },
          __typename: true
        }
      });
      if (!isDomainsResponseQuery(response.domains?.data)) {
        throw new import_errors39.DomainsNotFoundError();
      }
      return response.domains.data;
    };
    this.get = async ({ domainId }) => {
      const response = await this.graphqlClient.query({
        domain: {
          __args: {
            where: {
              id: domainId
            }
          },
          ..._DomainsClient.DOMAIN_MAPPED_PROPERTIES
        }
      });
      if (!isDomainResponseQuery(response.domain)) {
        throw new import_errors39.DomainNotFoundError({ domain: { id: domainId } });
      }
      return response.domain;
    };
    this.getByHostname = async ({ hostname }) => {
      const response = await this.graphqlClient.query({
        domainByHostname: {
          __args: {
            where: {
              hostname
            }
          },
          ..._DomainsClient.DOMAIN_MAPPED_PROPERTIES
        }
      });
      if (!isDomainResponseQuery(response.domainByHostname)) {
        throw new import_errors39.DomainNotFoundError({ domain: { hostname } });
      }
      return response.domainByHostname;
    };
    this.listByZoneId = async ({ zoneId }) => {
      const response = await this.graphqlClient.query({
        domainsByZoneId: {
          __args: {
            where: {
              zoneId
            }
          },
          data: {
            ..._DomainsClient.DOMAIN_MAPPED_PROPERTIES
          },
          __typename: true
        }
      });
      if (!isDomainsResponseQuery(response.domainsByZoneId?.data)) {
        throw new import_errors39.DomainsNotFoundError();
      }
      return response.domainsByZoneId.data;
    };
    this.createDomain = async ({ zoneId, hostname }) => {
      const response = await this.graphqlClient.mutation({
        createDomain: {
          __args: {
            where: {
              zoneId
            },
            data: {
              hostname
            }
          },
          // TODO: The `DOMAIN_MAPPED_PROPERTIES` when used here
          // seem to break the query. Thus, using `__scalar` true.
          // Ideally, check what cause need for this change.
          __scalar: true
        }
      });
      return response.createDomain;
    };
    this.deleteDomain = async ({ domainId }) => {
      const response = await this.graphqlClient.mutation({
        deleteDomain: {
          __args: {
            where: {
              id: domainId
            }
          },
          ..._DomainsClient.DOMAIN_MAPPED_PROPERTIES
        }
      });
      return response.deleteDomain;
    };
    this.verifyDomain = async ({ domainId }) => {
      const response = await this.graphqlClient.mutation({
        verifyDomain: {
          __args: {
            where: {
              id: domainId
            }
          },
          ..._DomainsClient.DOMAIN_MAPPED_PROPERTIES
        }
      });
      return response.verifyDomain;
    };
    this.listZones = async () => {
      const response = await this.graphqlClient.query({ zones: { data: _DomainsClient.ZONE_MAPPED_PROPERTIES } });
      return response.zones.data;
    };
    this.getZone = async ({ id }) => {
      const response = await this.graphqlClient.query({
        zone: {
          __args: {
            where: {
              id
            }
          },
          ..._DomainsClient.ZONE_MAPPED_PROPERTIES
        }
      });
      return response.zone;
    };
    this.createZoneForSite = async ({ siteId }) => {
      const response = await this.graphqlClient.mutation({
        createZoneForSite: {
          __args: {
            where: {
              siteId
            }
          },
          // TODO: Investigate why the previous fields
          // would now throw> Error: type `Zone` does not have a field `zone`
          // ...DomainsClient.DOMAIN_MAPPED_PROPERTIES,
          __scalar: true
        }
      });
      return response.createZoneForSite;
    };
    this.createZoneForPrivateGateway = async () => {
      const response = await this.graphqlClient.mutation({ createZoneForPrivateGateway: _DomainsClient.ZONE_MAPPED_PROPERTIES });
      return response.createZoneForPrivateGateway;
    };
    this.deleteZone = async ({ id }) => {
      const response = await this.graphqlClient.mutation({
        deleteZone: {
          __args: {
            where: {
              id
            }
          },
          ..._DomainsClient.ZONE_MAPPED_PROPERTIES
        }
      });
      return response.deleteZone;
    };
    this.graphqlClient = options.graphqlClient;
  }
};
_DomainsClient.DOMAIN_MAPPED_PROPERTIES = {
  id: true,
  zone: { id: true, __typename: true },
  hostname: true,
  isVerified: true,
  updatedAt: true,
  createdAt: true,
  dnsConfigs: { id: true, type: true, name: true, value: true, createdAt: true, updatedAt: true, __typename: true },
  status: true,
  __typename: true
};
_DomainsClient.ZONE_MAPPED_PROPERTIES = {
  id: true,
  originUrl: true,
  createdAt: true,
  updatedAt: true,
  type: true,
  status: true,
  __typename: true
};
var DomainsClient = _DomainsClient;

// src/clients/ens.ts
var _EnsClient = class _EnsClient {
  constructor(options) {
    this.create = async ({ name, siteId, ipnsRecordId }) => {
      const response = await this.graphqlClient.mutation({
        createEnsRecord: {
          __args: {
            where: {
              ipnsRecordId,
              siteId
            },
            data: {
              name
            }
          },
          ..._EnsClient.ENS_MAPPED_PROPERTIES
        }
      });
      return response.createEnsRecord;
    };
    this.get = async ({ id }) => {
      const response = await this.graphqlClient.query({
        ensRecord: {
          __args: {
            where: {
              id
            }
          },
          ..._EnsClient.ENS_MAPPED_PROPERTIES
        }
      });
      return response.ensRecord;
    };
    this.getByName = async ({ name }) => {
      const response = await this.graphqlClient.query({
        ensRecordByName: {
          __args: {
            where: {
              name
            }
          },
          ..._EnsClient.ENS_MAPPED_PROPERTIES
        }
      });
      return response.ensRecordByName;
    };
    this.verify = async ({ id }) => {
      const response = await this.graphqlClient.mutation({
        verifyEnsRecord: {
          __args: {
            where: {
              id
            }
          },
          ..._EnsClient.ENS_MAPPED_PROPERTIES
        }
      });
      return response.verifyEnsRecord;
    };
    this.delete = async ({ id }) => {
      const response = await this.graphqlClient.mutation({
        deleteEnsRecord: {
          __args: {
            where: {
              id
            }
          },
          ..._EnsClient.ENS_MAPPED_PROPERTIES
        }
      });
      return response.deleteEnsRecord;
    };
    this.list = async () => {
      const response = await this.graphqlClient.query({
        ensRecords: {
          data: {
            ..._EnsClient.ENS_MAPPED_PROPERTIES
          }
        }
      });
      return response.ensRecords.data;
    };
    this.listByIpnsRecordId = async ({ ipnsRecordId }) => {
      const response = await this.graphqlClient.query({
        ensRecordsByIpnsId: {
          __args: {
            where: {
              ipnsRecordId
            }
          },
          data: {
            ..._EnsClient.ENS_MAPPED_PROPERTIES
          }
        }
      });
      return response.ensRecordsByIpnsId.data;
    };
    this.graphqlClient = options.graphqlClient;
  }
};
_EnsClient.ENS_MAPPED_PROPERTIES = {
  id: true,
  name: true,
  updatedAt: true,
  createdAt: true,
  status: true,
  site: {
    id: true
  },
  ipnsRecord: {
    name: true,
    id: true,
    hash: true
  }
};
var EnsClient = _EnsClient;

// src/clients/functions.ts
var _FunctionsClient = class _FunctionsClient {
  constructor(options) {
    this.get = async ({ name }) => {
      const response = await this.graphqlClient.query({
        fleekFunctionByName: {
          __args: {
            where: {
              name
            }
          },
          ..._FunctionsClient.FleekFunction_MAPPED_PROPERTIES
        }
      });
      return response.fleekFunctionByName;
    };
    this.list = async () => {
      const response = await this.graphqlClient.query({
        fleekFunctions: {
          __args: {},
          data: {
            ..._FunctionsClient.FleekFunction_MAPPED_PROPERTIES
          }
        }
      });
      return response.fleekFunctions.data;
    };
    this.listDeployments = async ({ functionId }) => {
      const response = await this.graphqlClient.query({
        fleekFunctionDeployments: {
          __args: {
            where: {
              fleekFunctionId: functionId
            }
          },
          data: {
            ..._FunctionsClient.Deployment_MAPPED_PROPERTIES
          }
        }
      });
      return response.fleekFunctionDeployments.data;
    };
    this.create = async ({ name }) => {
      const response = await this.graphqlClient.mutation({
        createFleekFunction: {
          __args: {
            data: {
              name
            }
          },
          ..._FunctionsClient.FleekFunction_MAPPED_PROPERTIES
        }
      });
      return response.createFleekFunction;
    };
    this.deploy = async ({ functionId, cid, sgx, blake3Hash }) => {
      const response = await this.graphqlClient.mutation({
        triggerFleekFunctionDeployment: {
          __args: {
            where: {
              functionId,
              cid
            },
            data: { sgx, blake3Hash }
          },
          ..._FunctionsClient.Deployment_MAPPED_PROPERTIES
        }
      });
      return response.triggerFleekFunctionDeployment;
    };
    this.delete = async ({ id }) => {
      const response = await this.graphqlClient.mutation({
        deleteFleekFunction: {
          __args: {
            where: {
              id
            }
          },
          ..._FunctionsClient.FleekFunction_MAPPED_PROPERTIES
        }
      });
      return response.deleteFleekFunction;
    };
    this.update = async ({ id, slug, name, status }) => {
      const response = await this.graphqlClient.mutation({
        updateFleekFunction: {
          __args: {
            where: {
              id
            },
            data: {
              slug,
              name,
              status
            }
          },
          ..._FunctionsClient.FleekFunction_MAPPED_PROPERTIES
        }
      });
      return response.updateFleekFunction;
    };
    this.graphqlClient = options.graphqlClient;
  }
};
_FunctionsClient.Deployment_MAPPED_PROPERTIES = {
  id: true,
  fleekFunctionId: true,
  cid: true,
  updatedAt: true,
  createdAt: true
};
_FunctionsClient.FleekFunction_MAPPED_PROPERTIES = {
  id: true,
  name: true,
  slug: true,
  invokeUrl: true,
  projectId: true,
  currentDeploymentId: true,
  currentDeployment: {
    cid: true
  },
  status: true
};
var FunctionsClient = _FunctionsClient;

// src/clients/ipfs.ts
var import_auth = __toESM(require_dist2());
var import_errors42 = __toESM(require_dist());
var import_files_from_path = __toESM(require_index_browser());

// src/libs/requireNodeEnv.ts
var import_errors40 = __toESM(require_dist());

// src/utils/node.ts
var isNode = typeof window === "undefined" || process?.env?.IS_NODE;

// src/libs/requireNodeEnv.ts
var requireNodeEnv = () => {
  if (isNode) {
    return;
  }
  throw new import_errors40.SdkRequiredNodeRuntimeError();
};

// src/libs/writeFilesFromStream.ts
var import_errors41 = __toESM(require_dist());
var writeFilesFromStream = async (fileStreams) => {
  if (!isNode) {
    throw new import_errors41.SdkRequiredNodeRuntimeError();
  }
  try {
    const fs = await import("./empty-DDVBHZPM.js");
    const path = await import("./empty-DDVBHZPM.js");
    const { pipeline } = await import("./empty-DDVBHZPM.js");
    const { promisify } = await import("./empty-DDVBHZPM.js");
    const pipelineAsync = promisify(pipeline);
    await Promise.all(
      fileStreams.map(async ({ readStream, outputPath }) => {
        const dir = path.dirname(outputPath);
        await fs.promises.mkdir(dir, { recursive: true });
        const writeStream = fs.createWriteStream(outputPath);
        return pipelineAsync(readStream, writeStream);
      })
    );
  } catch (error) {
    throw new import_errors41.WriteFileFromStreamError();
  }
};

// src/clients/ipfs.ts
var IpfsClient = class {
  constructor(options) {
    this.getClient = async () => {
      if (!this.client) {
        const { create } = await import("./src-VT7VWDLR.js");
        this.client = create({
          url: this.ipfsStorageApiUrl
        });
      }
      return this.client;
    };
    this.pinToUploadResult = async (pin, path) => {
      const { CID } = await import("./src-VT7VWDLR.js");
      return {
        cid: CID.parse(pin.cid),
        size: pin.size,
        path
      };
    };
    this.add = async (file) => {
      const nodePath = await import("./empty-DDVBHZPM.js");
      const path = file.path ? nodePath.basename(file.path) : "";
      const blob = new Blob([file.content]);
      const { UnixFS } = await import("./src-VATP7N4C.js");
      const getStream = () => UnixFS.createFileEncoderStream({ stream: () => blob.stream() });
      try {
        const { pin } = await this.uploadProxyClient.uploadContent({ getStream, basename: path });
        return this.pinToUploadResult(pin, path);
      } catch {
        throw new import_errors42.StorageIpfsUploadFailedError();
      }
    };
    this.addAll = async (files, options = {}) => {
      const added = [];
      try {
        if (Array.isArray(files)) {
          const pins = await Promise.all(files.map(async (file) => await this.add(file)));
          added.push(...pins);
        } else {
          requireNodeEnv();
          const fileStreams = [];
          const basename = options.basename ?? "wrapped";
          const { randomBytes } = await import("./empty-DDVBHZPM.js");
          const wrappedRandomDir = `wrapped_${randomBytes(10).toString("hex")}`;
          const wrapped = `${wrappedRandomDir}/${basename}`;
          const path = await import("./empty-DDVBHZPM.js");
          for await (const file of files) {
            if (file.content === void 0) {
              continue;
            }
            fileStreams.push({
              readStream: file.content,
              outputPath: path.join(wrapped, file.path.slice(1))
            });
          }
          await writeFilesFromStream(fileStreams);
          const filesFromPath = await (0, import_files_from_path.filesFromPaths)([wrapped]);
          const { UnixFS } = await import("./src-VATP7N4C.js");
          if (options.wrapWithDirectory) {
            const getStream = () => UnixFS.createDirectoryEncoderStream(filesFromPath);
            const { pin } = await this.uploadProxyClient.uploadContent({ getStream, basename });
            const uploadResult = await this.pinToUploadResult(pin, basename);
            added.push(uploadResult);
          } else {
            const pins = await Promise.all(
              filesFromPath.map(async (path2) => {
                const getStream = () => UnixFS.createDirectoryEncoderStream([path2]);
                const { pin } = await this.uploadProxyClient.uploadContent({ getStream, basename: path2.name });
                return this.pinToUploadResult(pin, path2.name);
              })
            );
            added.push(...pins);
          }
          const { promises: fs } = await import("./empty-DDVBHZPM.js");
          await fs.rm(wrappedRandomDir, { recursive: true, force: true });
        }
        return added;
      } catch (err) {
        console.log(err);
        throw new import_errors42.StorageIpfsUploadFailedError();
      }
    };
    this.addFromPath = async (path, _options = {}) => {
      requireNodeEnv();
      const nodePath = await import("./empty-DDVBHZPM.js");
      const basename = nodePath.basename(path);
      const { promises: fs } = await import("./empty-DDVBHZPM.js");
      const stat = await fs.stat(path);
      const { UnixFS } = await import("./src-VATP7N4C.js");
      if (!stat.isDirectory()) {
        const fileFromPath = await (0, import_files_from_path.filesFromPaths)([path]);
        const getStream2 = () => UnixFS.createFileEncoderStream(fileFromPath[0]);
        const { pin: pin2 } = await this.uploadProxyClient.uploadContent({ getStream: getStream2, basename });
        return [this.pinToUploadResult(pin2, basename)];
      }
      const filesfromPath = await (0, import_files_from_path.filesFromPaths)([path]);
      const getStream = () => UnixFS.createDirectoryEncoderStream(filesfromPath);
      const { pin } = await this.uploadProxyClient.uploadContent({ getStream, basename });
      return [this.pinToUploadResult(pin, basename)];
    };
    this.addSitesToIpfs = async (path, options = {}) => {
      requireNodeEnv();
      const accessToken = await this.accessTokenService.getAccessToken();
      if (!accessToken) {
        throw new import_errors42.AuthorizationError();
      }
      try {
        const globSource = (await import("./src-VT7VWDLR.js")).globSource;
        const client = await this.getClient();
        const iterable = client.addAll(globSource(path, "**/*"), {
          headers: {
            [import_auth.constants.AUTHORIZATION_HEADER_NAME]: `Bearer ${accessToken}`
          },
          ...options,
          wrapWithDirectory: true
        });
        const added = [];
        for await (const file of iterable) {
          added.push(file);
        }
        return added;
      } catch (err) {
        throw new import_errors42.StorageIpfsUploadFailedError();
      }
    };
    if (!isNode) {
      throw new import_errors42.SdkRequiredNodeRuntimeError();
    }
    this.uploadProxyClient = options.uploadProxyClient;
    this.ipfsStorageApiUrl = options.ipfsStorageApiUrl;
    this.accessTokenService = options.accessTokenService;
  }
};

// src/clients/ipns.ts
var _IpnsClient = class _IpnsClient {
  constructor(options) {
    this.publishSignedName = async ({ key, input }) => {
      const response = await this.graphqlClient.mutation({
        publishSignedIpnsName: {
          __args: {
            data: {
              input,
              key
            }
          }
        }
      });
      return response.publishSignedIpnsName;
    };
    this.resolveName = async ({ name }) => {
      const response = await this.graphqlClient.query({
        resolveIpnsName: {
          __args: {
            where: {
              name
            }
          }
        }
      });
      return response.resolveIpnsName;
    };
    this.publishRecord = async ({ hash, id }) => {
      const response = await this.graphqlClient.mutation({
        publishIpnsRecord: {
          __args: {
            where: {
              id
            },
            data: {
              hash
            }
          },
          ..._IpnsClient.RECORD_MAPPED_PROPERTIES
        }
      });
      return response.publishIpnsRecord;
    };
    this.createRecord = async () => {
      const response = await this.graphqlClient.mutation({
        createIpnsRecord: _IpnsClient.RECORD_MAPPED_PROPERTIES
      });
      return response.createIpnsRecord;
    };
    this.createRecordForSite = async ({ siteId }) => {
      const response = await this.graphqlClient.mutation({
        createIpnsRecordForSite: {
          __args: {
            where: {
              siteId
            }
          },
          ..._IpnsClient.RECORD_MAPPED_PROPERTIES
        }
      });
      return response.createIpnsRecordForSite;
    };
    this.deleteRecord = async ({ id }) => {
      const response = await this.graphqlClient.mutation({
        deleteIpnsRecord: {
          __args: {
            where: {
              id
            }
          },
          ..._IpnsClient.RECORD_MAPPED_PROPERTIES
        }
      });
      return response.deleteIpnsRecord;
    };
    this.listRecords = async () => {
      const response = await this.graphqlClient.query({
        ipnsRecords: { data: _IpnsClient.RECORD_MAPPED_PROPERTIES }
      });
      return response.ipnsRecords.data;
    };
    this.getRecord = async ({ name }) => {
      const response = await this.graphqlClient.query({
        ipnsRecord: {
          __args: {
            where: {
              name
            }
          },
          ..._IpnsClient.RECORD_MAPPED_PROPERTIES
        }
      });
      return response.ipnsRecord;
    };
    this.graphqlClient = options.graphqlClient;
  }
};
_IpnsClient.RECORD_MAPPED_PROPERTIES = {
  id: true,
  name: true,
  hash: true,
  ensRecords: { id: true }
};
var IpnsClient = _IpnsClient;

// src/clients/privateGateway.ts
var import_errors43 = __toESM(require_dist());
var _PrivateGatewayClient = class _PrivateGatewayClient {
  constructor(options) {
    this.get = async ({ id }) => {
      const response = await this.graphqlClient.query({
        privateGateway: {
          __args: {
            where: {
              id
            }
          },
          ..._PrivateGatewayClient.PRIVATE_GATEWAY_MAPPED_PROPERTIES
        }
      });
      if (!isPrivateGatewayResponseQuery(response.privateGateway)) {
        throw new import_errors43.PrivateGatewayNotFoundError({ privateGateway: { id } });
      }
      return response.privateGateway;
    };
    this.getBySlug = async ({ slug }) => {
      const response = await this.graphqlClient.query({
        privateGatewayBySlug: {
          __args: {
            where: {
              slug
            }
          },
          ..._PrivateGatewayClient.PRIVATE_GATEWAY_MAPPED_PROPERTIES
        }
      });
      if (!isPrivateGatewayResponseQuery(response.privateGatewayBySlug)) {
        throw new import_errors43.PrivateGatewayNotFoundError({ privateGateway: { slug } });
      }
      return response.privateGatewayBySlug;
    };
    this.list = async () => {
      const response = await this.graphqlClient.query({
        privateGateways: {
          data: {
            ..._PrivateGatewayClient.PRIVATE_GATEWAY_MAPPED_PROPERTIES
          },
          __typename: true
        }
      });
      if (!isPrivateGatewaysResponseQuery(response.privateGateways.data)) {
        throw new import_errors43.PrivateGatewaysNotFoundError({});
      }
      return response.privateGateways.data;
    };
    this.create = async ({ name, zoneId }) => {
      const response = await this.graphqlClient.mutation({
        createPrivateGateway: {
          __args: {
            where: {
              zoneId
            },
            data: {
              name
            }
          },
          ..._PrivateGatewayClient.PRIVATE_GATEWAY_MAPPED_PROPERTIES
        }
      });
      return response.createPrivateGateway;
    };
    this.delete = async ({ id }) => {
      const response = await this.graphqlClient.mutation({
        deletePrivateGateway: {
          __args: {
            where: {
              id
            }
          },
          ..._PrivateGatewayClient.PRIVATE_GATEWAY_MAPPED_PROPERTIES
        }
      });
      return response.deletePrivateGateway;
    };
    this.update = async ({ id, name }) => {
      const response = await this.graphqlClient.mutation({
        updatePrivateGateway: {
          __args: {
            where: {
              id
            },
            data: {
              name
            }
          },
          ..._PrivateGatewayClient.PRIVATE_GATEWAY_MAPPED_PROPERTIES
        }
      });
      return response.updatePrivateGateway;
    };
    this.graphqlClient = options.graphqlClient;
  }
};
_PrivateGatewayClient.PRIVATE_GATEWAY_MAPPED_PROPERTIES = {
  id: true,
  slug: true,
  primaryDomain: { id: true, __typename: true },
  name: true,
  project: { id: true, __typename: true },
  zone: { id: true, __typename: true },
  updatedAt: true,
  createdAt: true,
  __typename: true
};
var PrivateGatewayClient = _PrivateGatewayClient;

// src/clients/projects.ts
var _ProjectsClient = class _ProjectsClient {
  constructor(options) {
    this.create = async ({ name }) => {
      const response = await this.graphqlClient.mutation({
        createProject: {
          __args: {
            data: {
              name
            }
          },
          ..._ProjectsClient.PROJECT_MAPPED_PROPERTIES
        }
      });
      return response.createProject;
    };
    this.update = async ({ where, data }) => {
      const response = await this.graphqlClient.mutation({
        updateProject: {
          __args: {
            where,
            data
          },
          ..._ProjectsClient.PROJECT_MAPPED_PROPERTIES
        }
      });
      return response.updateProject;
    };
    this.get = async ({ id }) => {
      const response = await this.graphqlClient.query({
        project: {
          __args: {
            where: {
              id
            }
          },
          ..._ProjectsClient.PROJECT_MAPPED_PROPERTIES
        }
      });
      return response.project;
    };
    this.list = async () => {
      const response = await this.graphqlClient.query({ projects: { data: _ProjectsClient.PROJECT_MAPPED_PROPERTIES } });
      return response.projects.data;
    };
    this.graphqlClient = options.graphqlClient;
  }
};
_ProjectsClient.PROJECT_MAPPED_PROPERTIES = {
  id: true,
  name: true,
  avatar: true,
  backupStorageOnArweave: true,
  backupStorageOnFilecoin: true,
  createdAt: true
};
var ProjectsClient = _ProjectsClient;

// src/clients/sites.ts
var import_errors44 = __toESM(require_dist());
var _SitesClient = class _SitesClient {
  constructor(options) {
    this.get = async ({ id }) => {
      const response = await this.graphqlClient.query({
        site: {
          __args: {
            where: {
              id
            }
          },
          ..._SitesClient.SITE_MAPPED_PROPERTIES
        }
      });
      if (!isSiteResponseQuery(response.site)) {
        throw new import_errors44.SiteNotFoundError({ site: { id } });
      }
      return this.adapt(response.site);
    };
    this.getBySlug = async ({ slug }) => {
      const response = await this.graphqlClient.query({
        siteBySlug: {
          __args: {
            where: {
              slug
            }
          },
          ..._SitesClient.SITE_MAPPED_PROPERTIES
        }
      });
      if (!isSiteResponseQuery(response.siteBySlug)) {
        throw new import_errors44.SiteNotFoundError({ site: { slug } });
      }
      return this.adapt(response.siteBySlug);
    };
    this.list = async () => {
      const response = await this.graphqlClient.query({
        sites: {
          __args: {
            where: {}
          },
          data: {
            ..._SitesClient.SITE_MAPPED_PROPERTIES
          },
          __typename: true
        }
      });
      if (!isSitesResponseQuery(response.sites.data)) {
        throw new import_errors44.SitesNotFoundError();
      }
      return response.sites.data.map(this.adapt);
    };
    this.create = async ({ name }) => {
      const response = await this.graphqlClient.mutation({
        createSite: {
          __args: {
            data: {
              name
            }
          },
          ..._SitesClient.SITE_MAPPED_PROPERTIES
        }
      });
      if (!isSiteResponseQuery(response.createSite)) {
        throw new import_errors44.SiteCreationFailedError();
      }
      return this.adapt(response.createSite);
    };
    this.delete = async ({ id }) => {
      const response = await this.graphqlClient.mutation({
        deleteSite: {
          __args: {
            where: {
              id
            }
          },
          ..._SitesClient.SITE_MAPPED_PROPERTIES
        }
      });
      if (!isSiteResponseQuery(response.deleteSite)) {
        throw new import_errors44.SiteNotFoundError({ site: { id } });
      }
      return this.adapt(response.deleteSite);
    };
    this.createCustomIpfsDeployment = async ({ siteId, cid }) => {
      const response = await this.graphqlClient.mutation({
        createCustomIpfsDeployment: {
          __args: {
            data: {
              siteId,
              cid
            }
          },
          ..._SitesClient.DEPLOYMENT_MAPPED_PROPERTIES
        }
      });
      return response.createCustomIpfsDeployment;
    };
    this.getDeployment = async ({ id }) => {
      const response = await this.graphqlClient.query({
        deployment: {
          __args: {
            where: {
              id
            }
          },
          ..._SitesClient.DEPLOYMENT_MAPPED_PROPERTIES
        }
      });
      if (!isDeploymentResponseQuery(response.deployment)) {
        throw new import_errors44.SiteDeploymentNotFoundError({ deployment: { id } });
      }
      return response.deployment;
    };
    this.graphqlClient = options.graphqlClient;
  }
  adapt(site) {
    return {
      id: site.id,
      name: site.name,
      slug: site.slug,
      ipnsRecords: site.ipnsRecords,
      domains: site.domains,
      zones: site.zones,
      deployments: site.deployments
    };
  }
};
_SitesClient.DEPLOYMENT_MAPPED_PROPERTIES = {
  id: true,
  status: true,
  storageType: true,
  siteId: true,
  cid: true,
  updatedAt: true,
  createdAt: true,
  __typename: true
};
_SitesClient.SITE_MAPPED_PROPERTIES = {
  id: true,
  name: true,
  slug: true,
  domains: { id: true, hostname: true, __typename: true },
  zones: { id: true, status: true, __typename: true },
  primaryDomain: { id: true, hostname: true, __typename: true },
  ipnsRecords: { id: true, __typename: true },
  deployments: _SitesClient.DEPLOYMENT_MAPPED_PROPERTIES,
  __typename: true
};
var SitesClient = _SitesClient;

// src/clients/storage.ts
var import_errors46 = __toESM(require_dist());
import { File } from "@web-std/file";
var import_files_from_path2 = __toESM(require_index_browser());

// src/utils/hash.ts
var import_errors45 = __toESM(require_dist());
import { blake3 } from "@noble/hashes/blake3";
var createFileHash = async (opts) => {
  if (!isNode) {
    throw new import_errors45.SdkRequiredNodeRuntimeError();
  }
  const { createHash } = await import("./empty-DDVBHZPM.js");
  const { file, algorithm } = opts;
  switch (algorithm) {
    case "blake3":
      return `${algorithm}-${Buffer.from(blake3(file)).toString("base64")}`;
    case "sha256":
    case "sha512":
      return `${algorithm}-${createHash(algorithm).update(file).digest("base64")}`;
    default:
      return `sha256-${createHash("sha256").update(file).digest("base64")}`;
  }
};

// src/clients/storage.ts
var _StorageClient = class _StorageClient {
  constructor(options) {
    this.uploadDirectory = async ({ path, parentFolderId, options, onUploadProgress }) => {
      requireNodeEnv();
      const { promises } = await import("./empty-DDVBHZPM.js");
      const stat = await promises.stat(path);
      if (!stat.isDirectory()) {
        throw new import_errors46.PathIsNotADirectoryError({ path });
      }
      if (options?.siteId) {
        this.checkSiteInDb(options?.siteId);
      }
      if (options?.functionName) {
        await this.checkFunctionInDb(options?.functionName);
      }
      const { basename: getBasename } = await import("./empty-DDVBHZPM.js");
      const basename = getBasename(path);
      const files = await (0, import_files_from_path2.filesFromPaths)([path]);
      const getStream = () => unixfs_exports.createDirectoryEncoderStream(files);
      return this.uploadProxyClient.uploadContent({ getStream, basename, parentFolderId, options, onUploadProgress });
    };
    this.uploadVirtualDirectory = async ({
      files,
      directoryName,
      parentFolderId,
      onUploadProgress
    }) => {
      const getStream = () => unixfs_exports.createDirectoryEncoderStream(files, {});
      return this.uploadProxyClient.uploadContent({ getStream, basename: directoryName, parentFolderId, onUploadProgress });
    };
    this.uploadPrivateFile = async ({
      filePath,
      hashingAlhorithm,
      onUploadProgress
    }) => {
      const { promises } = await import("./empty-DDVBHZPM.js");
      const stat = await promises.stat(filePath);
      if (!stat.isFile()) {
        throw new import_errors46.PathIsNotAFileError({ path: filePath });
      }
      const buffer = await promises.readFile(filePath, "binary");
      const fileHash = await createFileHash({ file: buffer, algorithm: hashingAlhorithm ?? "sha256" });
      const path = await import("./empty-DDVBHZPM.js");
      const file = new File([buffer], path.basename(filePath));
      return this.uploadProxyClient.uploadPrivateContent({ file, fileHash, onUploadProgress });
    };
    this.uploadFile = async ({ file, parentFolderId, options, onUploadProgress }) => {
      if (options?.siteId) {
        this.checkSiteInDb(options?.siteId);
      }
      if (options?.functionName) {
        await this.checkFunctionInDb(options?.functionName);
      }
      const getStream = () => unixfs_exports.createFileEncoderStream(file);
      return this.uploadProxyClient.uploadContent({ getStream, basename: file.name, parentFolderId, options, onUploadProgress });
    };
    this.get = async ({ cid }) => {
      const response = await this.graphqlClient.query({
        pin: {
          __args: {
            where: { cid }
          },
          ..._StorageClient.STORAGE_MAPPED_PROPERTIES
        }
      });
      if (!isPinResponseQuery(response.pin)) {
        throw new import_errors46.PinNotFoundError({ pin: { cid } });
      }
      const { filecoinDeals } = await this.graphqlClient.query({
        filecoinDeals: {
          __args: {
            where: { cid }
          },
          data: {
            dealId: true,
            __typename: true
          },
          __typename: true
        }
      });
      if (!isFilecoinDealsResponseQuery(filecoinDeals.data)) {
        throw new import_errors46.PinNotFoundError({ pin: { cid } });
      }
      return {
        ...response.pin,
        arweaveId: response.pin.arweavePin?.bundlrId,
        filecoinDealIds: filecoinDeals.data.map((deal) => deal.dealId).join(",")
      };
    };
    this.getByFilename = async ({ filename, extension }) => {
      const response = await this.graphqlClient.query({
        pinsByFilename: {
          __args: {
            where: { filename, extension }
          },
          ..._StorageClient.STORAGE_WITH_AGGREGATION_MAPPED_PROPERTIES
        }
      });
      if (!isPinsResponseQuery(response.pinsByFilename?.data)) {
        throw new import_errors46.PinsNotFoundError({ filename });
      }
      return await Promise.all(
        response.pinsByFilename.data.map(async (pin) => {
          const res = await this.graphqlClient.query({
            filecoinDeals: {
              __args: {
                where: { cid: pin.cid }
              },
              data: {
                dealId: true
              }
            }
          });
          return {
            ...pin,
            arweaveId: pin.arweavePin?.bundlrId,
            filecoinDealIds: res.filecoinDeals.data.map((deal) => deal.dealId).join(",")
          };
        })
      );
    };
    this.list = async () => {
      const response = await this.graphqlClient.query({
        pins: {
          __args: {},
          data: {
            ..._StorageClient.STORAGE_MAPPED_PROPERTIES
          },
          __typename: true
        }
      });
      if (!isPinsResponseQuery(response.pins?.data)) {
        throw new import_errors46.PinNotFoundError({ pin: { cid: response.pins.data[0].cid } });
      }
      return await Promise.all(
        response.pins.data.map(async (pin) => {
          const res = await this.graphqlClient.query({
            filecoinDeals: {
              __args: {
                where: { cid: pin.cid }
              },
              data: {
                dealId: true,
                __typename: true
              },
              __typename: true
            }
          });
          return {
            ...pin,
            arweaveId: pin.arweavePin?.bundlrId,
            filecoinDealIds: res.filecoinDeals.data.map((deal) => deal.dealId).join(",")
          };
        })
      );
    };
    this.delete = async ({ cid }) => {
      const response = await this.uploadProxyClient.delete(cid);
      return {
        status: response.status,
        body: await response.json()
      };
    };
    this.checkFunctionInDb = async (name) => {
      try {
        await this.graphqlClient.query({
          fleekFunctionByName: {
            __args: {
              where: { name }
            },
            id: true
          }
        });
      } catch (_err) {
        throw new import_errors46.FleekFunctionNotFoundError({ function: { name } });
      }
    };
    this.checkSiteInDb = async (id) => {
      try {
        await this.graphqlClient.query({
          site: {
            __args: {
              where: { id }
            },
            data: {
              cid: true,
              filename: true,
              extension: true,
              arweavePin: {
                bundlrId: true
              }
            }
          }
        });
      } catch {
        throw new import_errors46.SiteNotFoundError({ site: { id } });
      }
    };
    this.graphqlClient = options.graphqlClient;
    this.uploadProxyClient = options.uploadProxyClient;
  }
};
_StorageClient.SITE_MAPPED_PROPERTIES = { id: true };
_StorageClient.FUNCTION_MAPPED_PROPERTIES = { id: true };
_StorageClient.STORAGE_MAPPED_PROPERTIES = {
  cid: true,
  filename: true,
  extension: true,
  arweavePin: {
    bundlrId: true,
    __typename: true
  },
  __typename: true
};
_StorageClient.STORAGE_WITH_AGGREGATION_MAPPED_PROPERTIES = {
  data: _StorageClient.STORAGE_MAPPED_PROPERTIES,
  __typename: true
};
var StorageClient = _StorageClient;

// src/clients/uploadProxy.ts
var import_auth2 = __toESM(require_dist2());
var import_errors48 = __toESM(require_dist());
import { FormData } from "@web-std/form-data";
import axios from "axios";

// src/libs/retry.ts
var import_errors47 = __toESM(require_dist());
var retry = async ({ fn, tries, intervalMs }) => {
  let n = 1;
  while (true) {
    try {
      return await fn();
    } catch (error) {
      if (error instanceof import_errors47.FleekError) {
        console.warn(error.toString(), `Attempt ${n} of ${tries}. Retrying in ${intervalMs / 1e3}s...`);
      }
      if (n === tries) {
        throw error;
      }
      await new Promise((resolve) => setTimeout(resolve, intervalMs));
      n++;
    }
  }
};

// src/clients/uploadProxy.ts
var shardSize = 10485760;
var uploadConcurrency = 3;
var fetchWithValidStatus = async ({
  request,
  parentFolderId,
  validStatuses = [200]
}) => {
  const response = await fetch(request);
  if (!validStatuses.includes(response.status)) {
    if (response.status === 429) {
      const error = await response.json()?.then((res) => res.errors[0]).catch((err) => {
        console.warn("Unexpected response with 429 status", err);
        throw new import_errors48.UnknownError();
      });
      if (error.code === "DailyUploadedTotalSizeQuotaExceeded") {
        throw new import_errors48.StorageUploadTotalSizeQuotaExceededError();
      } else if (error.code === "DailyUploadedFilesQuotaExceeded") {
        throw new import_errors48.StorageUploadFileCountQuotaExceededError();
      } else if (error.code === "FolderNotFoundError" && parentFolderId) {
        throw new import_errors48.FolderNotFoundError({ folder: { id: parentFolderId } });
      } else {
        throw new import_errors48.UnknownError();
      }
    } else {
      throw new import_errors48.StorageIpfsUploadFailedError();
    }
  }
  return response;
};
var UploadProxyClient = class {
  constructor(options) {
    this.uploadPrivateContent = async ({ file, fileHash, onUploadProgress }) => {
      const formData = new FormData();
      formData.append("hash", fileHash);
      formData.append("file", file);
      const accessToken = await this.accessTokenService.getAccessToken();
      try {
        const response = await axios.post(`${this.uploadProxyApiUrl}/upload/private`, formData, {
          headers: {
            "Content-Type": "multipart/form-data",
            [import_auth2.constants.AUTHORIZATION_HEADER_NAME]: `${import_auth2.constants.AUTHORIZATION_BEARER} ${accessToken}`
          },
          onUploadProgress: (progressEvent) => {
            if (progressEvent.lengthComputable && onUploadProgress) {
              onUploadProgress({
                loadedSize: progressEvent.loaded,
                totalSize: progressEvent.total
              });
            }
          }
        });
        if (response.status !== 201 || !response.data?.cid) {
          throw new import_errors48.StorageIpfsUploadFailedError();
        }
        return { pin: { cid: response.data.cid, size: file.size }, duplicate: false };
      } catch (error) {
        throw new import_errors48.StorageIpfsUploadFailedError();
      }
    };
    this.uploadContent = async ({
      getStream,
      basename,
      parentFolderId,
      options,
      onUploadProgress
    }) => {
      const { cid, totalSize } = await this.getStreamCidAndTotalSize({ getStream });
      const isDuplicity = parentFolderId ? await this.checkPinDuplicityByParentFolderAndBasename({ parentFolderId, basename }) : await this.checkPinDuplicityByCid({ cid });
      if (isDuplicity) {
        return { pin: { cid, size: totalSize }, duplicate: true };
      }
      if (onUploadProgress) {
        onUploadProgress({ totalSize, loadedSize: 0 });
      }
      let loadedSize = 0;
      const shardCids = [];
      const { ShardingStream } = await import("./src-VATP7N4C.js");
      const { Parallel } = await import("parallel-transform-web");
      await getStream().pipeThrough(new ShardingStream({ shardSize })).pipeThrough(
        new Parallel(uploadConcurrency, async (car) => {
          const url2 = new URL(this.uploadProxyApiUrl);
          url2.pathname = "store";
          const accessToken2 = await this.accessTokenService.getAccessToken();
          const body2 = new Uint8Array(await car.arrayBuffer());
          try {
            const response = await retry({
              fn: async () => fetchWithValidStatus({
                request: new Request(url2, {
                  method: "POST",
                  body: body2,
                  headers: {
                    "Content-Type": "application/vnd.ipld.car",
                    [import_auth2.constants.AUTHORIZATION_HEADER_NAME]: `${import_auth2.constants.AUTHORIZATION_BEARER} ${accessToken2}`
                  }
                }),
                parentFolderId
              }),
              tries: 3,
              intervalMs: 3e3
            });
            return { cid: await response.text(), size: body2.byteLength };
          } catch {
            throw new import_errors48.UploadProxyStoreAsCarError();
          }
        })
      ).pipeTo(
        new WritableStream({
          write: async ({ cid: cid2, size }) => {
            shardCids.push(cid2);
            if (onUploadProgress) {
              loadedSize += size;
              onUploadProgress({ totalSize, loadedSize });
            }
          }
        })
      );
      const url = new URL(this.uploadProxyApiUrl);
      url.pathname = "upload";
      if (options?.siteId) {
        url.searchParams.append("sites", "true");
      }
      if (options?.functionName) {
        url.searchParams.append("function", "true");
      }
      const accessToken = await this.accessTokenService.getAccessToken();
      const body = JSON.stringify({ basename, parentFolderId, totalSize, rootCid: cid, shardCids });
      try {
        await retry({
          fn: async () => fetchWithValidStatus({
            request: new Request(url, {
              method: "POST",
              body,
              headers: {
                "Content-Type": "application/json",
                [import_auth2.constants.AUTHORIZATION_HEADER_NAME]: `${import_auth2.constants.AUTHORIZATION_BEARER} ${accessToken}`
              }
            }),
            parentFolderId
          }),
          tries: 3,
          intervalMs: 3e3
        });
      } catch {
        throw new import_errors48.UploadProxyUploadFileError();
      }
      return { pin: { cid, size: totalSize }, duplicate: false };
    };
    this.delete = async (cid) => {
      const accessToken = await this.accessTokenService.getAccessToken();
      const url = new URL(this.uploadProxyApiUrl);
      url.pathname = `delete/${cid}`;
      return fetch(url, {
        method: "DELETE",
        headers: {
          [import_auth2.constants.AUTHORIZATION_HEADER_NAME]: `${import_auth2.constants.AUTHORIZATION_BEARER} ${accessToken}`
        }
      });
    };
    this.getStreamCidAndTotalSize = async ({ getStream }) => {
      let totalSize = 0;
      let cid;
      const { ShardingStream } = await import("./src-VATP7N4C.js");
      await getStream().pipeThrough(new ShardingStream({ shardSize })).pipeTo(
        new WritableStream({
          write: (car) => {
            if (car.roots[0]) {
              cid = car.roots[0].toV1().toString(base32);
            }
            totalSize += car.size;
          }
        })
      );
      if (!cid) {
        throw new import_errors48.StorageIpfsUploadFailedError();
      }
      return { cid, totalSize };
    };
    this.checkPinDuplicityByCid = async ({ cid }) => {
      const url = new URL(this.uploadProxyApiUrl);
      url.pathname = `duplicity/${cid}`;
      return this.checkPinDuplicty({ url });
    };
    this.checkPinDuplicityByParentFolderAndBasename = async ({
      parentFolderId,
      basename
    }) => {
      const url = new URL(this.uploadProxyApiUrl);
      url.pathname = `/folder/${parentFolderId}/duplicity/${basename}`;
      return this.checkPinDuplicty({ url });
    };
    this.checkPinDuplicty = async ({ url }) => {
      const accessToken = await this.accessTokenService.getAccessToken();
      const response = await fetch(url, {
        method: "GET",
        headers: {
          [import_auth2.constants.AUTHORIZATION_HEADER_NAME]: `${import_auth2.constants.AUTHORIZATION_BEARER} ${accessToken}`
        }
      });
      return response.status === 409;
    };
    this.accessTokenService = options.accessTokenService;
    this.uploadProxyApiUrl = options.uploadProxyApiUrl;
  }
};

// src/clients/user.ts
var UserClient = class {
  constructor(options) {
    this.listPersonalAccessTokens = async () => {
      const response = await this.graphqlClient.query({
        personalAccessTokens: {
          data: {
            id: true,
            createdAt: true,
            name: true,
            maskedToken: true
          }
        }
      });
      return response.personalAccessTokens.data;
    };
    this.deletePersonalAccessToken = async ({ id }) => {
      const response = await this.graphqlClient.mutation({
        deletePersonalAccessToken: {
          __args: {
            where: {
              id
            }
          },
          __scalar: true
        }
      });
      return response.deletePersonalAccessToken;
    };
    this.graphqlClient = options.graphqlClient;
  }
};

// src/defined.ts
var defined = {
  SDK__AUTH_APPS_URL: "https://auth-apps.service.fleek.xyz",
  SDK__IPFS__STORAGE_API_URL: "https://storage-ipfs.service.fleek.xyz/",
  SDK__GRAPHQL_API_URL: "https://graphql.service.fleek.xyz/graphql",
  SDK__UPLOAD_PROXY_API_URL: "https://uploads.service.fleek.xyz"
};
var override_env_var_prefix = "";
var getDefined = (key) => process?.env?.[`${override_env_var_prefix}${key}`] || defined[key];

// src/libs/graphqlFetcher.ts
var import_errors49 = __toESM(require_dist());
var errors = __toESM(require_dist());
import { FormData as FormData2 } from "@web-std/form-data";
import { traverse } from "object-traversal";
var graphqlFetcher = async ({ endpoint, headers, operation }) => {
  const map = [];
  const files = [];
  traverse(operation, ({ parent, key, value, meta }) => {
    if (parent && key && meta.nodePath && Object.prototype.toString.call(value) === "[object File]") {
      map.push(meta.nodePath);
      files.push(value);
      parent[key] = null;
    }
  });
  const body = new FormData2();
  body.append("operations", JSON.stringify(operation));
  body.append("map", JSON.stringify(Object.fromEntries(map.map((path, index) => [`${index}`, [path]]))));
  files.forEach((file, index) => body.append(`${index}`, file));
  const fetchHandler = !isNode ? (await import("cross-fetch")).default : fetch;
  const response = await fetchHandler(endpoint, {
    method: "POST",
    headers: {
      Accept: "application/json",
      ...headers
    },
    body
  });
  if (!response.ok) {
    if (response.status === 401) {
      throw new import_errors49.UnauthorizedError({});
    }
    throw new import_errors49.UnknownError();
  }
  const data = await response.json();
  const error = data?.errors?.[0];
  if (!error) {
    return data;
  }
  if ("extensions" in error) {
    const errorClass = errors?.[error.extensions.name];
    if (errorClass) {
      throw new errorClass(error.extensions.data);
    }
  }
  throw new import_errors49.UnknownError();
};

// src/FleekSdk.ts
var FleekSdk = class {
  constructor({
    graphqlServiceApiUrl = getDefined("SDK__GRAPHQL_API_URL"),
    ipfsStorageApiUrl = getDefined("SDK__IPFS__STORAGE_API_URL"),
    uploadProxyApiUrl = getDefined("SDK__UPLOAD_PROXY_API_URL"),
    accessTokenService
  }) {
    this.getVersion = async () => {
      const response = await this.graphqlClient.query({ version: { __scalar: true } });
      return response;
    };
    this.user = () => {
      if (!this.userClient) {
        this.userClient = new UserClient({ graphqlClient: this.graphqlClient });
      }
      return this.userClient;
    };
    this.ipns = () => {
      if (!this.ipnsClient) {
        this.ipnsClient = new IpnsClient({ graphqlClient: this.graphqlClient });
      }
      return this.ipnsClient;
    };
    this.ipfs = () => {
      if (!isNode) {
        throw new import_errors50.SdkRequiredNodeRuntimeError();
      }
      if (!this.ipfsClient) {
        this.ipfsClient = new IpfsClient({
          uploadProxyClient: this.uploadProxyClient,
          accessTokenService: this.accessTokenService,
          ipfsStorageApiUrl: this.ipfsStorageApiUrl
        });
      }
      console.warn("Warning: The `ipfs` service in Fleek SDK will be deprecated. Please use `storage` service instead");
      return this.ipfsClient;
    };
    this.sites = () => {
      if (!this.sitesClient) {
        this.sitesClient = new SitesClient({ graphqlClient: this.graphqlClient });
      }
      return this.sitesClient;
    };
    this.projects = () => {
      if (!this.projectsClient) {
        this.projectsClient = new ProjectsClient({ graphqlClient: this.graphqlClient });
      }
      return this.projectsClient;
    };
    this.domains = () => {
      if (!this.domainsClient) {
        this.domainsClient = new DomainsClient({ graphqlClient: this.graphqlClient });
      }
      return this.domainsClient;
    };
    this.applications = () => {
      if (!this.applicationsClient) {
        this.applicationsClient = new ApplicationsClient({ graphqlClient: this.graphqlClient });
      }
      return this.applicationsClient;
    };
    this.ens = () => {
      if (!this.ensClient) {
        this.ensClient = new EnsClient({ graphqlClient: this.graphqlClient });
      }
      return this.ensClient;
    };
    this.privateGateways = () => {
      if (!this.privateGatewayClient) {
        this.privateGatewayClient = new PrivateGatewayClient({ graphqlClient: this.graphqlClient });
      }
      return this.privateGatewayClient;
    };
    this.storage = () => {
      if (!this.storageClient) {
        this.storageClient = new StorageClient({
          graphqlClient: this.graphqlClient,
          uploadProxyClient: this.uploadProxyClient
        });
      }
      return this.storageClient;
    };
    this.functions = () => {
      if (!this.functionsClient) {
        this.functionsClient = new FunctionsClient({ graphqlClient: this.graphqlClient });
      }
      return this.functionsClient;
    };
    this.getAuthenticationHeaders = async () => {
      try {
        const accessToken = await this.accessTokenService.getAccessToken();
        if (!accessToken) {
          return {};
        }
        const headers = {
          [import_auth3.constants.AUTHORIZATION_HEADER_NAME]: `Bearer ${accessToken}`
        };
        return headers;
      } catch {
        return {};
      }
    };
    this.getCustomHeaders = () => {
      const headers = {
        [import_auth3.constants.CUSTOM_HEADERS.clientType]: import_auth3.constants.SDK_CLIENT_TYPE_NAME
      };
      return headers;
    };
    if (!accessTokenService) {
      throw new import_errors50.AuthorizationError();
    }
    this.accessTokenService = accessTokenService;
    this.graphqlClient = createClient2({
      fetcher: async (operation) => graphqlFetcher({
        operation,
        headers: { ...await this.getAuthenticationHeaders(), ...this.getCustomHeaders() },
        endpoint: this.graphqlServiceApiUrl
      })
    });
    this.graphqlServiceApiUrl = graphqlServiceApiUrl ?? getDefined("SDK__GRAPHQL_API_URL");
    this.ipfsStorageApiUrl = ipfsStorageApiUrl ?? getDefined("SDK__IPFS__STORAGE_API_URL");
    this.uploadProxyApiUrl = uploadProxyApiUrl ?? getDefined("SDK__UPLOAD_PROXY_API_URL");
    this.uploadProxyClient = new UploadProxyClient({
      uploadProxyApiUrl: this.uploadProxyApiUrl,
      accessTokenService: this.accessTokenService
    });
  }
};

// src/libs/AccessTokenService/PersonalAccessTokenService.ts
var import_errors51 = __toESM(require_dist());

// src/libs/AccessTokenService/AccessTokenService.ts
var AccessTokenService = class {
};

// src/libs/AccessTokenService/PersonalAccessTokenService.ts
var PersonalAccessTokenService = class extends AccessTokenService {
  constructor({
    personalAccessToken,
    projectId,
    graphqlServiceApiUrl = getDefined("SDK__GRAPHQL_API_URL")
  }) {
    requireNodeEnv();
    if (!personalAccessToken) {
      throw new import_errors51.AuthorizationError();
    }
    super();
    this.setAccessToken = async ({ token, expiration = 60 * 8 * 1e3 }) => {
      this.accessToken = token;
      if (this.accessTokenTimeout) {
        clearTimeout(this.accessTokenTimeout);
      }
      this.accessTokenTimeout = setTimeout(() => {
        this.accessToken = void 0;
      }, expiration);
    };
    this.loginWithPersonalAccessToken = async () => {
      const { loginWithPersonalAccessToken } = await this.client.mutation({
        loginWithPersonalAccessToken: {
          __args: {
            data: {
              personalAccessToken: this.personalAccessToken,
              projectId: this.projectId
            }
          }
        }
      });
      this.setAccessToken({ token: loginWithPersonalAccessToken });
    };
    this.getAccessToken = async () => {
      if (!this.accessToken) {
        await this.loginWithPersonalAccessToken();
      }
      return this.accessToken;
    };
    this.close = () => {
      clearTimeout(this.accessTokenTimeout);
      this.accessToken = void 0;
    };
    this.personalAccessToken = personalAccessToken;
    this.projectId = projectId;
    this.client = createClient2({
      fetcher: async (operation) => graphqlFetcher({
        operation,
        headers: {},
        endpoint: graphqlServiceApiUrl
      })
    });
  }
};

// src/libs/AccessTokenService/StaticAccessTokenService.ts
var import_errors52 = __toESM(require_dist());
var StaticAccessTokenService = class extends AccessTokenService {
  constructor({ accessToken }) {
    super();
    this.getAccessToken = async () => this.accessToken;
    if (!accessToken) {
      throw new import_errors52.AuthorizationError();
    }
    this.accessToken = accessToken;
  }
};

// src/libs/AccessTokenService/ApplicationAccessTokenService.ts
var import_auth4 = __toESM(require_dist2());
import fetch2 from "cross-fetch";
import { DateTime } from "luxon";
var ApplicationAccessTokenService = class extends AccessTokenService {
  constructor({
    clientId,
    authAppsServiceUrl = getDefined("SDK__AUTH_APPS_URL"),
    origin = window.location.origin
  }) {
    super();
    this.refreshAccessToken = async () => {
      const params = [import_auth4.constants.CLIENT_ID_QUERY_STRING_FIELD_NAME, this.clientId].join("=");
      const url = `${this.authAppsServiceUrl}/token?${params}`;
      const headers = new Headers();
      if (this.origin) {
        headers.set("Origin", this.origin);
      }
      const response = await fetch2(
        url,
        {
          method: "GET",
          headers
        }
      );
      this.accessToken = await response.text();
    };
    this.getAccessToken = async () => {
      if (!this.accessToken) {
        await this.refreshAccessToken();
        return this.accessToken;
      }
      const payload = (0, import_auth4.decodeAccessToken)({ token: this.accessToken });
      if (payload.exp < DateTime.now().toSeconds()) {
        await this.refreshAccessToken();
      }
      return this.accessToken;
    };
    this.clientId = clientId;
    this.authAppsServiceUrl = authAppsServiceUrl;
    this.origin = origin;
  }
};
export {
  ApplicationAccessTokenService,
  FleekSdk,
  PersonalAccessTokenService,
  StaticAccessTokenService,
  createClient2 as createClient
};
