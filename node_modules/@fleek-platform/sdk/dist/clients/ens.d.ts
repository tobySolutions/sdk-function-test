import { Client, EnsRecord as EnsRecordWithRelations } from '@fleek-platform/gql-client-utils';
export type EnsRecord = Omit<EnsRecordWithRelations, 'site' | 'ipnsRecord'> & {
    site: Pick<EnsRecordWithRelations['site'], 'id'>;
    ipnsRecord: Pick<EnsRecordWithRelations['ipnsRecord'], 'id' | 'name' | 'hash'> & {
        id: string;
    };
};
type EnsClientOptions = {
    graphqlClient: Client;
};
export declare class EnsClient {
    private graphqlClient;
    private static ENS_MAPPED_PROPERTIES;
    constructor(options: EnsClientOptions);
    create: ({ name, siteId, ipnsRecordId }: {
        name: string;
        siteId: string;
        ipnsRecordId: string;
    }) => Promise<EnsRecord>;
    get: ({ id }: {
        id: string;
    }) => Promise<EnsRecord>;
    getByName: ({ name }: {
        name: string;
    }) => Promise<EnsRecord>;
    verify: ({ id }: {
        id: string;
    }) => Promise<EnsRecord>;
    delete: ({ id }: {
        id: string;
    }) => Promise<EnsRecord>;
    list: () => Promise<EnsRecord[]>;
    listByIpnsRecordId: ({ ipnsRecordId }: {
        ipnsRecordId: string;
    }) => Promise<EnsRecord[]>;
}
export {};
